//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LawCompiler {
    using System.Linq;
    using System;
    
    
    public partial class LawT4 : LawT4Base {
        
        
        #line 1116 "LawT4.tt"

private bool containsVectorProperty () 
{
  foreach(var p in AllProperties) { 
  	if(p.dim == PropertyDim.vectorial)
  	  return true;
  }
  return false;
}
private void StaticGlobalDependenciesSize () 
{ 
        #line default
        #line hidden
        
        
        #line 1127 "LawT4.tt"

        this.Write("   \n    // Derivatives dependencies sizes\n    const Arcane::Integer nb_graph_prop" +
        " = graph_dependencies.size();\n    const Arcane::Integer nb_direct_prop = in().si" +
        "ze();\n");

        #line default
        #line hidden
        
        
        #line 1131 "LawT4.tt"
 
}

private void ComputeDerivativesReorderOffset () 
{ 
        #line default
        #line hidden
        
        
        #line 1136 "LawT4.tt"

        this.Write(@"      Arcane::IntegerUniqueArray static_ofs(nb_direct_prop);
      Arcane::Integer graph_composed_ofs = nb_graph_prop;
      auto in_prop = in();
      Arcane::Integer nb_root_prop = 0;
      for(Arcane::Integer static_index = 0; static_index<nb_direct_prop;++static_index)
      {
        auto prop = in_prop[static_index];
        // Move composed derivatives to the end
        if(in_composed_derivative_ofs.find(prop) != in_composed_derivative_ofs.end())
          static_ofs[static_index] = graph_composed_ofs++;
        // Move root properties to the consistent graph index
        else
        {
          static_ofs[static_index]=graph_dependencies[prop];
          nb_root_prop++;
        }
      }
      // Non root graph derivatives equals zero before correction
      const Arcane::Integer nb_inherited_prop = nb_graph_prop - nb_root_prop;
      Arcane::IntegerUniqueArray inherited_deriv_ofs(nb_inherited_prop);
      Arcane::Integer inherited_index = 0;
      for(Arcane::Integer graph_index = 0; graph_index<nb_graph_prop;++graph_index)
      {
        if(!in_prop.contains(graph_dependencies[graph_index]))
          inherited_deriv_ofs[inherited_index++]=graph_index;
      }
");

        #line default
        #line hidden
        
        
        #line 1162 "LawT4.tt"
 
}
private void ReorderDerivativesAndNullify (string op) 
{ 
        #line default
        #line hidden
        
        
        #line 1166 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1170 "LawT4.tt"

        this.Write("        Arcane::");

        #line default
        #line hidden
        
        
        #line 1170 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1170 "LawT4.tt"

        this.Write("UniqueArray var_deriv_");

        #line default
        #line hidden
        
        
        #line 1170 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1170 "LawT4.tt"

        this.Write("_ini(var_deriv_");

        #line default
        #line hidden
        
        
        #line 1170 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1170 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1170 "LawT4.tt"

        this.Write(".constView());\n");

        #line default
        #line hidden
        
        
        #line 1171 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1174 "LawT4.tt"

        this.Write("        Arcane::Integer size_");

        #line default
        #line hidden
        
        
        #line 1174 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1174 "LawT4.tt"

        this.Write(" = m_signature.");

        #line default
        #line hidden
        
        
        #line 1174 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1174 "LawT4.tt"

        this.Write(".size();\n        Arcane::UniqueArray<Arcane::");

        #line default
        #line hidden
        
        
        #line 1175 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1175 "LawT4.tt"

        this.Write("ConstArrayView> var_deriv_");

        #line default
        #line hidden
        
        
        #line 1175 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1175 "LawT4.tt"

        this.Write("_ini(size_");

        #line default
        #line hidden
        
        
        #line 1175 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1175 "LawT4.tt"

        this.Write(");\n        for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1176 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1176 "LawT4.tt"

        this.Write("; ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1177 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1177 "LawT4.tt"

        this.Write("_ini[j] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1177 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1177 "LawT4.tt"

        this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1177 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1177 "LawT4.tt"

        this.Write(";\n        }\n");

        #line default
        #line hidden
        
        
        #line 1179 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1183 "LawT4.tt"

        this.Write("        for(Arcane::Integer static_index=0;static_index<nb_direct_prop;++static_i" +
        "ndex)\n        {\n");

        #line default
        #line hidden
        
        
        #line 1185 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1189 "LawT4.tt"

        this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1189 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1189 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1189 "LawT4.tt"

        this.Write("[static_ofs[static_index]] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1189 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1189 "LawT4.tt"

        this.Write("_ini[static_index];\n");

        #line default
        #line hidden
        
        
        #line 1190 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1193 "LawT4.tt"

        this.Write("         for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1193 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1193 "LawT4.tt"

        this.Write("; ++j) {\n              var_deriv_");

        #line default
        #line hidden
        
        
        #line 1194 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1194 "LawT4.tt"

        this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1194 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1194 "LawT4.tt"

        this.Write("[static_ofs[static_index]] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1194 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1194 "LawT4.tt"

        this.Write("_ini[j][static_index];\n         }\n");

        #line default
        #line hidden
        
        
        #line 1196 "LawT4.tt"
    
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1200 "LawT4.tt"

        this.Write("        }\n        for(Arcane::Integer inherited_index=0;inherited_index<nb_inheri" +
        "ted_prop;++inherited_index)\n        {\n");

        #line default
        #line hidden
        
        
        #line 1203 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1207 "LawT4.tt"

        this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1207 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1207 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1207 "LawT4.tt"

        this.Write("[inherited_deriv_ofs[inherited_index]]=0;\n");

        #line default
        #line hidden
        
        
        #line 1208 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1211 "LawT4.tt"

        this.Write("         for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1211 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1211 "LawT4.tt"

        this.Write("; ++j) {\n              var_deriv_");

        #line default
        #line hidden
        
        
        #line 1212 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1212 "LawT4.tt"

        this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1212 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1212 "LawT4.tt"

        this.Write("[inherited_deriv_ofs[inherited_index]] = 0;\n         }\n");

        #line default
        #line hidden
        
        
        #line 1214 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1218 "LawT4.tt"

        this.Write("       }\n");

        #line default
        #line hidden
        
        
        #line 1219 "LawT4.tt"

}
private void ComputeDerivativesCorrectionOffset () 
{
        #line default
        #line hidden
        
        
        #line 1223 "LawT4.tt"

        this.Write(@"      direct_composed_index++;
      // Derivatives correction through in derivatives properties
      Law::PropertyVector composed_prop_deriv = iter_composed.second;
      Arcane::Integer nb_composed_prop_deriv = composed_prop_deriv.size();
      Arcane::IntegerUniqueArray composed_prop_deriv_ofs(nb_composed_prop_deriv);
      for(Arcane::Integer composed_deriv_index=0;composed_deriv_index<nb_composed_prop_deriv;++composed_deriv_index){
        auto current_in_derived_prop = composed_prop_deriv[composed_deriv_index];
        composed_prop_deriv_ofs[composed_deriv_index] = graph_dependencies[current_in_derived_prop];
      }
      // Only real scalar avalaible in this version (external check)
      Law::Property composed_prop = iter_composed.first;
      Law::ScalarRealProperty& scalar_composed_prop = static_cast<Law::ScalarRealProperty&>(composed_prop);
      // In proproperties has derivatives (external check)
      auto deriv_composed = accessor.derivatives(scalar_composed_prop);
");

        #line default
        #line hidden
        
        
        #line 1237 "LawT4.tt"

}
private void parallelEnumerate(string groupName, string lambdaName) 
{
    if(MultiThread == MultiThreadMode.ArcaneTBB) {

        #line default
        #line hidden
        
        
        #line 1243 "LawT4.tt"

        this.Write(@"      int nb_thread = Arcane::TaskFactory::nbAllowedThread();
      Arcane::ParallelLoopOptions para_options;
      para_options.setMaxThread(nb_thread);
      int grain_size = group.size()/nb_thread + 1;
      para_options.setGrainSize(grain_size);
      Arcane::Parallel::Foreach(");

        #line default
        #line hidden
        
        
        #line 1248 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( groupName ));

        #line default
        #line hidden
        
        
        #line 1248 "LawT4.tt"

        this.Write(", para_options, ");

        #line default
        #line hidden
        
        
        #line 1248 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( lambdaName ));

        #line default
        #line hidden
        
        
        #line 1248 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1249 "LawT4.tt"

    }
    else if(MultiThread == MultiThreadMode.Kokkos) {

        #line default
        #line hidden
        
        
        #line 1253 "LawT4.tt"

        this.Write("      Kokkos::parallel_for(\"");

        #line default
        #line hidden
        
        
        #line 1253 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( groupName ));

        #line default
        #line hidden
        
        
        #line 1253 "LawT4.tt"

        this.Write("\", group.size(), ");

        #line default
        #line hidden
        
        
        #line 1253 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( lambdaName ));

        #line default
        #line hidden
        
        
        #line 1253 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1254 "LawT4.tt"

    }
}
private void ApplyDerivativesCorrection(string op) 
{
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1262 "LawT4.tt"

        this.Write("        auto direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1262 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1262 "LawT4.tt"

        this.Write(" = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1262 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1262 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1262 "LawT4.tt"

        this.Write("[direct_composed_index];\n");

        #line default
        #line hidden
        
        
        #line 1263 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1266 "LawT4.tt"

        this.Write("        Arcane::Integer size_");

        #line default
        #line hidden
        
        
        #line 1266 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1266 "LawT4.tt"

        this.Write(" = m_signature.");

        #line default
        #line hidden
        
        
        #line 1266 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1266 "LawT4.tt"

        this.Write(".size();\n        Arcane::");

        #line default
        #line hidden
        
        
        #line 1267 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1267 "LawT4.tt"

        this.Write("UniqueArray direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1267 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1267 "LawT4.tt"

        this.Write("(size_");

        #line default
        #line hidden
        
        
        #line 1267 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1267 "LawT4.tt"

        this.Write(");\n        for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1268 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1268 "LawT4.tt"

        this.Write("; ++j) {\n          direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1269 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1269 "LawT4.tt"

        this.Write("[j] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1269 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1269 "LawT4.tt"

        this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1269 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1269 "LawT4.tt"

        this.Write("[direct_composed_index];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1271 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1275 "LawT4.tt"

        this.Write("        for(auto derived_index = 0; derived_index < nb_composed_prop_deriv; ++der" +
        "ived_index)\n        {\n");

        #line default
        #line hidden
        
        
        #line 1277 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1281 "LawT4.tt"

        this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1281 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1281 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1281 "LawT4.tt"

        this.Write("[composed_prop_deriv_ofs[derived_index]] += direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1281 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1281 "LawT4.tt"

        this.Write("*deriv_composed");

        #line default
        #line hidden
        
        
        #line 1281 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1281 "LawT4.tt"

        this.Write("[derived_index];\n");

        #line default
        #line hidden
        
        
        #line 1282 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1285 "LawT4.tt"

        this.Write("        for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1285 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1285 "LawT4.tt"

        this.Write("; ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"

        this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"

        this.Write("[composed_prop_deriv_ofs[derived_index]] += direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"

        this.Write("[j]*deriv_composed");

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"

        this.Write("[derived_index];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1288 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1292 "LawT4.tt"

        this.Write("        }\n");

        #line default
        #line hidden
        
        
        #line 1293 "LawT4.tt"

}
private void AccessGlobalValues () 
{ 
        #line default
        #line hidden
        
        
        #line 1297 "LawT4.tt"

        this.Write("    // Access to global values container\n");

        #line default
        #line hidden
        
        
        #line 1298 "LawT4.tt"

  foreach(var p in AllProperties) { 
        #line default
        #line hidden
        
        
        #line 1300 "LawT4.tt"

        this.Write("    auto var_");

        #line default
        #line hidden
        
        
        #line 1300 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1300 "LawT4.tt"

        this.Write(" = accessor.values(m_signature.");

        #line default
        #line hidden
        
        
        #line 1300 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1300 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1301 "LawT4.tt"

  }
}

private void AccessGlobalDerivatives () 
{ 
        #line default
        #line hidden
        
        
        #line 1307 "LawT4.tt"

        this.Write("    // Access to global derivatives container\n");

        #line default
        #line hidden
        
        
        #line 1308 "LawT4.tt"

  foreach(var o in Outputs) { 
        #line default
        #line hidden
        
        
        #line 1310 "LawT4.tt"

        this.Write("    auto var_deriv_");

        #line default
        #line hidden
        
        
        #line 1310 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1310 "LawT4.tt"

        this.Write(" = accessor.derivatives(m_signature.");

        #line default
        #line hidden
        
        
        #line 1310 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1310 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1311 "LawT4.tt"

  }
}

private void ResizeGlobalDerivatives (bool need_resize_array = false) 
{ 
        #line default
        #line hidden
        
        
        #line 1317 "LawT4.tt"

        this.Write("    // Resize global outputs\n");

        #line default
        #line hidden
        
        
        #line 1318 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1322 "LawT4.tt"

        this.Write("    var_deriv_");

        #line default
        #line hidden
        
        
        #line 1322 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1322 "LawT4.tt"

        this.Write(".resize(size);\n");

        #line default
        #line hidden
        
        
        #line 1323 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1326 "LawT4.tt"

        this.Write("    for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1326 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1326 "LawT4.tt"

        this.Write(".size(); ++i) {\n      var_deriv_");

        #line default
        #line hidden
        
        
        #line 1327 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1327 "LawT4.tt"

        this.Write("[i].resize(size);\n    }\n");

        #line default
        #line hidden
        
        
        #line 1329 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
    if(need_resize_array) { 
        #line default
        #line hidden
        
        
        #line 1333 "LawT4.tt"

        this.Write("    var_deriv_");

        #line default
        #line hidden
        
        
        #line 1333 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1333 "LawT4.tt"

        this.Write(".resize(var_deriv_");

        #line default
        #line hidden
        
        
        #line 1333 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1333 "LawT4.tt"

        this.Write(".dim1Size(), m_signature.");

        #line default
        #line hidden
        
        
        #line 1333 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1333 "LawT4.tt"

        this.Write(".size(),size);\n");

        #line default
        #line hidden
        
        
        #line 1334 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1336 "LawT4.tt"

        this.Write("    var_deriv_");

        #line default
        #line hidden
        
        
        #line 1336 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1336 "LawT4.tt"

        this.Write(".resize(m_signature.");

        #line default
        #line hidden
        
        
        #line 1336 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1336 "LawT4.tt"

        this.Write(".size(),size);\n");

        #line default
        #line hidden
        
        
        #line 1337 "LawT4.tt"
 
    }
    break;
    } 
  }
}

private void CreateDerivativesOffsets () 
{ 
        #line default
        #line hidden
        
        
        #line 1346 "LawT4.tt"

        this.Write("    // Create derivatives offsets\n");

        #line default
        #line hidden
        
        
        #line 1347 "LawT4.tt"

  Property prev = null;
  foreach(var p in Inputs) {
    if(prev == null) { 
        #line default
        #line hidden
        
        
        #line 1351 "LawT4.tt"

        this.Write("    auto ofs_");

        #line default
        #line hidden
        
        
        #line 1351 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1351 "LawT4.tt"

        this.Write(" = 0;\n");

        #line default
        #line hidden
        
        
        #line 1352 "LawT4.tt"
 
    } else if (prev.dim != PropertyDim.scalar) { 
        #line default
        #line hidden
        
        
        #line 1354 "LawT4.tt"

        this.Write("    auto ofs_");

        #line default
        #line hidden
        
        
        #line 1354 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1354 "LawT4.tt"

        this.Write(" = ofs_");

        #line default
        #line hidden
        
        
        #line 1354 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( prev.name ));

        #line default
        #line hidden
        
        
        #line 1354 "LawT4.tt"

        this.Write(" + m_signature.");

        #line default
        #line hidden
        
        
        #line 1354 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( prev.name ));

        #line default
        #line hidden
        
        
        #line 1354 "LawT4.tt"

        this.Write(".size();\n");

        #line default
        #line hidden
        
        
        #line 1355 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1357 "LawT4.tt"

        this.Write("    auto ofs_");

        #line default
        #line hidden
        
        
        #line 1357 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1357 "LawT4.tt"

        this.Write(" = ofs_");

        #line default
        #line hidden
        
        
        #line 1357 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( prev.name ));

        #line default
        #line hidden
        
        
        #line 1357 "LawT4.tt"

        this.Write(" + 1;\n");

        #line default
        #line hidden
        
        
        #line 1358 "LawT4.tt"

    }
    prev = p;
  }
}

private void AllocateLocalData ()
{ 
        #line default
        #line hidden
        
        
        #line 1366 "LawT4.tt"

        this.Write("    // Allocate local inputs\n");

        #line default
        #line hidden
        
        
        #line 1367 "LawT4.tt"

  foreach(var i in Inputs) { 
    switch(i.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1371 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1371 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1371 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1371 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1371 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1372 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1376 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1379 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1379 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1379 "LawT4.tt"

        this.Write("ConstArrayView ");

        #line default
        #line hidden
        
        
        #line 1379 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1379 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1380 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1384 "LawT4.tt"

        this.Write("    // Allocate local outputs\n");

        #line default
        #line hidden
        
        
        #line 1385 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1389 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1389 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1389 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1389 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1389 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1390 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1394 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1394 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1394 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1394 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1394 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1394 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1394 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1395 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1398 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1398 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1398 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1398 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1398 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1398 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1398 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1398 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1398 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1399 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1402 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1402 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1402 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1402 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1402 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1402 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1402 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1402 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1402 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1403 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1410 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1414 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1414 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1414 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1414 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1414 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1414 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1414 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1414 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1414 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1415 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1418 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1418 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1418 "LawT4.tt"

        this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1418 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1418 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1418 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1418 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1418 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1418 "LawT4.tt"

        this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1418 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1418 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1419 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

        this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

        this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1423 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1429 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1429 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1429 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1429 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1429 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1429 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1429 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1430 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1434 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1434 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1434 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1434 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1434 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1434 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1434 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1434 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1434 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1435 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"

        this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"

        this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1439 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1443 "LawT4.tt"

      break;
      }
    }
    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 1450 "LawT4.tt"

        this.Write("    // Allocate local parameters\n");

        #line default
        #line hidden
        
        
        #line 1451 "LawT4.tt"

  foreach(var p in Parameters) { 
    switch(p.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1455 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1455 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1455 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1455 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1455 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1456 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1460 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"

        this.Write("ConstArrayView ");

        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1464 "LawT4.tt"
 
    break;
    }
  }
}

private void CopyGlobalValuesToLocalValues (string op, bool vectorial_no_op = false)
{ 
        #line default
        #line hidden
        
        
        #line 1472 "LawT4.tt"

        this.Write("      // Copy global inputs values to local values\n");

        #line default
        #line hidden
        
        
        #line 1473 "LawT4.tt"

  foreach(var i in Inputs) { 
    switch(i.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1477 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1477 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1477 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1477 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1477 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1477 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1478 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1481 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1481 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1481 "LawT4.tt"

        this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1482 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1482 "LawT4.tt"

        this.Write("[i] = var_");

        #line default
        #line hidden
        
        
        #line 1482 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1482 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1482 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1482 "LawT4.tt"

        this.Write(";\n      }\n");

        #line default
        #line hidden
        
        
        #line 1484 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
    if(vectorial_no_op) { 
        #line default
        #line hidden
        
        
        #line 1488 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1488 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1488 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1488 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1488 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1489 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1491 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1491 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1491 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1491 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1491 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1491 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1492 "LawT4.tt"
 
    }
    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 1497 "LawT4.tt"

        this.Write("      // Copy global parameters values to local values\n");

        #line default
        #line hidden
        
        
        #line 1498 "LawT4.tt"

  foreach(var p in Parameters) { 
    switch(p.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1502 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1502 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1502 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1502 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1502 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1502 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1503 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1506 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1506 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1506 "LawT4.tt"

        this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1507 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1507 "LawT4.tt"

        this.Write("[i] = var_");

        #line default
        #line hidden
        
        
        #line 1507 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1507 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1507 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1507 "LawT4.tt"

        this.Write(";\n      }\n");

        #line default
        #line hidden
        
        
        #line 1509 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
    if(vectorial_no_op) { 
        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1514 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1516 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1516 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1516 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1516 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1516 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1516 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1517 "LawT4.tt"

    }
    break;
    }
  }
} 

private void CopyLocalOutputsValuesToGlobalValues (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1526 "LawT4.tt"

        this.Write("      // Copy local outputs values to global values\n");

        #line default
        #line hidden
        
        
        #line 1527 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1531 "LawT4.tt"

        this.Write("      var_");

        #line default
        #line hidden
        
        
        #line 1531 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1531 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1531 "LawT4.tt"

        this.Write(" = ");

        #line default
        #line hidden
        
        
        #line 1531 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1531 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1532 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1535 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1535 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1535 "LawT4.tt"

        this.Write(".size(); ++i) {\n        var_");

        #line default
        #line hidden
        
        
        #line 1536 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1536 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1536 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1536 "LawT4.tt"

        this.Write(" = ");

        #line default
        #line hidden
        
        
        #line 1536 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1536 "LawT4.tt"

        this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1538 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"

        this.Write(".size(); ++i) {\n        var_");

        #line default
        #line hidden
        
        
        #line 1542 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1542 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1542 "LawT4.tt"

        this.Write("[i] = ");

        #line default
        #line hidden
        
        
        #line 1542 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1542 "LawT4.tt"

        this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1544 "LawT4.tt"
 
    break;
    }
  }
} 
private void CopyLocalOutputsDerivativesToGlobalDerivatives (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1551 "LawT4.tt"

        this.Write("      // Copy local outputs derivatives to global derivatives\n");

        #line default
        #line hidden
        
        
        #line 1552 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1559 "LawT4.tt"

        this.Write("      var_deriv_");

        #line default
        #line hidden
        
        
        #line 1559 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1559 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1559 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1559 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1559 "LawT4.tt"

        this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1559 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1559 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1559 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1559 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1560 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1563 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1563 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1563 "LawT4.tt"

        this.Write(".size(); ++i) {\n        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1564 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1564 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1564 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1564 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1564 "LawT4.tt"

        this.Write("+i] = ");

        #line default
        #line hidden
        
        
        #line 1564 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1564 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1564 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1564 "LawT4.tt"

        this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1566 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1569 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1569 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1569 "LawT4.tt"

        this.Write(".size(); ++i) {\n        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1570 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1570 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1570 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1570 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1570 "LawT4.tt"

        this.Write("+i] = ");

        #line default
        #line hidden
        
        
        #line 1570 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1570 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1570 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1570 "LawT4.tt"

        this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1572 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1578 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1578 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1578 "LawT4.tt"

        this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 1579 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"

        this.Write("        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"

        this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"

        this.Write("[i];\n");

        #line default
        #line hidden
        
        
        #line 1584 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1587 "LawT4.tt"

        this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1587 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1587 "LawT4.tt"

        this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1588 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1588 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1588 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1588 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1588 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1588 "LawT4.tt"

        this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1588 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1588 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1588 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1588 "LawT4.tt"

        this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1590 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1593 "LawT4.tt"

        this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1593 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1593 "LawT4.tt"

        this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"

        this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"

        this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1596 "LawT4.tt"

      break;
      } 
    } 
        #line default
        #line hidden
        
        
        #line 1600 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1604 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1604 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1604 "LawT4.tt"

        this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1609 "LawT4.tt"

        this.Write("        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1609 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1609 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1609 "LawT4.tt"

        this.Write("[i][ofs_");

        #line default
        #line hidden
        
        
        #line 1609 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1609 "LawT4.tt"

        this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1609 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1609 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1609 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1609 "LawT4.tt"

        this.Write("[i];\n");

        #line default
        #line hidden
        
        
        #line 1610 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1613 "LawT4.tt"

        this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1613 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1613 "LawT4.tt"

        this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"

        this.Write("[i][ofs_");

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"

        this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"

        this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1616 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1619 "LawT4.tt"

        this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1619 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1619 "LawT4.tt"

        this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1620 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1620 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1620 "LawT4.tt"

        this.Write("[i][ofs_");

        #line default
        #line hidden
        
        
        #line 1620 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1620 "LawT4.tt"

        this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1620 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1620 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1620 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1620 "LawT4.tt"

        this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1622 "LawT4.tt"

      break;
      }
    } 
        #line default
        #line hidden
        
        
        #line 1626 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1627 "LawT4.tt"

    break;
    }
  }
} 
private void AllocateLocalDataFiniteDiff ()
{ 
        #line default
        #line hidden
        
        
        #line 1634 "LawT4.tt"

        this.Write("    // Allocate local outputs values to compute difference finite derivatives\n");

        #line default
        #line hidden
        
        
        #line 1635 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1639 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1639 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1639 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1639 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1639 "LawT4.tt"

        this.Write("_ref;\n");

        #line default
        #line hidden
        
        
        #line 1640 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1644 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1644 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1644 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1644 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1644 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1644 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1644 "LawT4.tt"

        this.Write("_diff;\n");

        #line default
        #line hidden
        
        
        #line 1645 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1648 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1648 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1648 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1648 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1648 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1648 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1648 "LawT4.tt"

        this.Write("_diff(m_signature.");

        #line default
        #line hidden
        
        
        #line 1648 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1648 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1649 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1655 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1655 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1655 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1655 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1655 "LawT4.tt"

        this.Write("_ref(m_signature.");

        #line default
        #line hidden
        
        
        #line 1655 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1655 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1656 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1660 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1660 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1660 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1660 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1660 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1660 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1660 "LawT4.tt"

        this.Write("_diff(m_signature.");

        #line default
        #line hidden
        
        
        #line 1660 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1660 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1661 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"

        this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"

        this.Write("_diff(m_signature.");

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"

        this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1665 "LawT4.tt"

      break;
      }
    }
    break;
    }
  }
}
private void CopyGlobalValuesOutputToLocalValues (string op, bool vectorial_no_op = false)
{ 
        #line default
        #line hidden
        
        
        #line 1675 "LawT4.tt"

        this.Write("      // Copy global inputs values to local values\n");

        #line default
        #line hidden
        
        
        #line 1676 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1680 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1680 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1680 "LawT4.tt"

        this.Write("_ref = var_");

        #line default
        #line hidden
        
        
        #line 1680 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1680 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1680 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1681 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1684 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1684 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1684 "LawT4.tt"

        this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1685 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1685 "LawT4.tt"

        this.Write("_ref[i] = var_");

        #line default
        #line hidden
        
        
        #line 1685 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1685 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1685 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1685 "LawT4.tt"

        this.Write(";\n      }\n");

        #line default
        #line hidden
        
        
        #line 1687 "LawT4.tt"
 
    break;
    }
  }
}
private void ComputeDifferenceFiniteDerivatives ()
{
  foreach(var i in Inputs) { 
        #line default
        #line hidden
        
        
        #line 1695 "LawT4.tt"

        this.Write("      // compute difference finite derivatives through ");

        #line default
        #line hidden
        
        
        #line 1695 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1695 "LawT4.tt"

        this.Write("\n");

        #line default
        #line hidden
        
        
        #line 1696 "LawT4.tt"
 
    switch(i.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1699 "LawT4.tt"

        this.Write("      {\n        ");

        #line default
        #line hidden
        
        
        #line 1700 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1700 "LawT4.tt"

        this.Write(" += m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1700 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1700 "LawT4.tt"

        this.Write(";\n        // Invoke user kernel\n        m_invoker(\n          ");

        #line default
        #line hidden
        
        
        #line 1703 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));

        #line default
        #line hidden
        
        
        #line 1703 "LawT4.tt"

        this.Write("\n        );\n        ");

        #line default
        #line hidden
        
        
        #line 1705 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1705 "LawT4.tt"

        this.Write(" -= m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1705 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1705 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1706 "LawT4.tt"
 
    foreach(var o in Outputs) {
      switch(o.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1710 "LawT4.tt"

        this.Write("        ");

        #line default
        #line hidden
        
        
        #line 1710 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1710 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1710 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1710 "LawT4.tt"

        this.Write("_diff = (");

        #line default
        #line hidden
        
        
        #line 1710 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1710 "LawT4.tt"

        this.Write(" - ");

        #line default
        #line hidden
        
        
        #line 1710 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1710 "LawT4.tt"

        this.Write("_ref) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1710 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1710 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1711 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1714 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1714 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1714 "LawT4.tt"

        this.Write(".size(); ++i)\n          ");

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"

        this.Write("_diff[i] = (");

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"

        this.Write("[i] - ");

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"

        this.Write("_ref[i]) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1716 "LawT4.tt"

      break;
      }
    } 
        #line default
        #line hidden
        
        
        #line 1720 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1721 "LawT4.tt"

    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1724 "LawT4.tt"

        this.Write("      for(int i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1724 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1724 "LawT4.tt"

        this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1725 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1725 "LawT4.tt"

        this.Write("[i] += m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1725 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1725 "LawT4.tt"

        this.Write(";\n        // Invoke user kernel\n        m_invoker(\n          ");

        #line default
        #line hidden
        
        
        #line 1728 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));

        #line default
        #line hidden
        
        
        #line 1728 "LawT4.tt"

        this.Write("\n        );\n        ");

        #line default
        #line hidden
        
        
        #line 1730 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1730 "LawT4.tt"

        this.Write("[i] -= m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1730 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1730 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1731 "LawT4.tt"

    foreach(var o in Outputs) {
      switch(o.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1735 "LawT4.tt"

        this.Write("        ");

        #line default
        #line hidden
        
        
        #line 1735 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1735 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1735 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1735 "LawT4.tt"

        this.Write("_diff[i] = (");

        #line default
        #line hidden
        
        
        #line 1735 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1735 "LawT4.tt"

        this.Write(" - ");

        #line default
        #line hidden
        
        
        #line 1735 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1735 "LawT4.tt"

        this.Write("_ref) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1735 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1735 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1736 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1739 "LawT4.tt"

        this.Write("        for(int j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1739 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1739 "LawT4.tt"

        this.Write(".size(); ++j)\n          ");

        #line default
        #line hidden
        
        
        #line 1740 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1740 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1740 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1740 "LawT4.tt"

        this.Write("_diff[j][i] = (");

        #line default
        #line hidden
        
        
        #line 1740 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1740 "LawT4.tt"

        this.Write("[j] - ");

        #line default
        #line hidden
        
        
        #line 1740 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1740 "LawT4.tt"

        this.Write("_ref[j]) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1740 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1740 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1741 "LawT4.tt"

      break;
      }
    } 
        #line default
        #line hidden
        
        
        #line 1745 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1746 "LawT4.tt"
           
    break;
    } 
  }
}
private void CopyLocalOutputsDerivativesDiffToGlobalDerivatives (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1753 "LawT4.tt"

        this.Write("      // Overwrite global derivatives by difference finite ones\n      {\n");

        #line default
        #line hidden
        
        
        #line 1755 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"

        this.Write("        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"

        this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"

        this.Write("_diff;\n");

        #line default
        #line hidden
        
        
        #line 1763 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1766 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1766 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1766 "LawT4.tt"

        this.Write(".size(); ++i)\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"

        this.Write("+i] = ");

        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"

        this.Write("_diff[i];\n");

        #line default
        #line hidden
        
        
        #line 1768 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1774 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1774 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1774 "LawT4.tt"

        this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 1775 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write("_diff[i];\n");

        #line default
        #line hidden
        
        
        #line 1780 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1783 "LawT4.tt"

        this.Write("          for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1783 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1783 "LawT4.tt"

        this.Write(".size(); ++j)\n            var_deriv_");

        #line default
        #line hidden
        
        
        #line 1784 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1784 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1784 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1784 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1784 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1784 "LawT4.tt"

        this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1784 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1784 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1784 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1784 "LawT4.tt"

        this.Write("_diff[i][j];\n");

        #line default
        #line hidden
        
        
        #line 1785 "LawT4.tt"

      break;
      } 
    } 
        #line default
        #line hidden
        
        
        #line 1789 "LawT4.tt"

        this.Write("        }\n");

        #line default
        #line hidden
        
        
        #line 1790 "LawT4.tt"

    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 1794 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1795 "LawT4.tt"

}
private void PrintDebugValuesInfos (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1799 "LawT4.tt"

        this.Write("      // Print debug values\n      {\n");

        #line default
        #line hidden
        
        
        #line 1801 "LawT4.tt"

  foreach(var o in InOutputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1805 "LawT4.tt"

        this.Write("        _print_value(\"");

        #line default
        #line hidden
        
        
        #line 1805 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1805 "LawT4.tt"

        this.Write("\", var_");

        #line default
        #line hidden
        
        
        #line 1805 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1805 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1805 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1806 "LawT4.tt"

    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1809 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1809 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1809 "LawT4.tt"

        this.Write(".size(); ++i)\n          _print_value(Arcane::String::format(\"");

        #line default
        #line hidden
        
        
        #line 1810 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1810 "LawT4.tt"

        this.Write("[{0}]\",i), var_");

        #line default
        #line hidden
        
        
        #line 1810 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1810 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1810 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1810 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1811 "LawT4.tt"

    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 1815 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1816 "LawT4.tt"
    
}
private void PrintDebugDerivativesInfos (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1820 "LawT4.tt"

        this.Write("      // Print derivatives debug informations\n      {\n");

        #line default
        #line hidden
        
        
        #line 1822 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write("        _print_derivatives(\"d");

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write("_d");

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write("\", var_deriv_");

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write("], ");

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1829 "LawT4.tt"

        this.Write("_diff);\n");

        #line default
        #line hidden
        
        
        #line 1830 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1833 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1833 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1833 "LawT4.tt"

        this.Write(".size(); ++i)\n          _print_derivatives(Arcane::String::format(\"d");

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write("_d");

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write("[{0}]\",i), var_deriv_");

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write("+i], ");

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

        this.Write("_diff[i]);\n");

        #line default
        #line hidden
        
        
        #line 1835 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1841 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1841 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1841 "LawT4.tt"

        this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 1842 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write("          _print_derivatives(Arcane::String::format(\"d");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write("[{0}]_d");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write("\",i), var_deriv_");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write("], ");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

        this.Write("_diff[i]);\n");

        #line default
        #line hidden
        
        
        #line 1847 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write("          for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write(".size(); ++j)\n            _print_derivatives(Arcane::String::format(\"d");

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write("[{0}]_d");

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write("[{1}]\",i,j), var_deriv_");

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write("+j], ");

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1851 "LawT4.tt"

        this.Write("_diff[i][j]);\n");

        #line default
        #line hidden
        
        
        #line 1852 "LawT4.tt"

      break;
      } 
    } 
        #line default
        #line hidden
        
        
        #line 1856 "LawT4.tt"

        this.Write("        }\n");

        #line default
        #line hidden
        
        
        #line 1857 "LawT4.tt"

    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 1861 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
    
}

        #line default
        #line hidden
        
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 3 "LawT4.tt"
            this.Write(@"// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool. 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

#ifndef ARCGEOSIM_GENERATED_");
            
            #line default
            #line hidden
            
            #line 13 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name.ToUpper() ));
            
            #line default
            #line hidden
            
            #line 13 "LawT4.tt"
            this.Write("_LAW_H\n#define ARCGEOSIM_GENERATED_");
            
            #line default
            #line hidden
            
            #line 14 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name.ToUpper() ));
            
            #line default
            #line hidden
            
            #line 14 "LawT4.tt"
            this.Write("_LAW_H\n\n/*-----------------------------------------------------------------------" +
                    "----*/\n/*-----------------------------------------------------------------------" +
                    "----*/\n\n");
            
            #line default
            #line hidden
            
            #line 19 "LawT4.tt"
 if(MultiThread == MultiThreadMode.ArcaneTBB){ 
            
            #line default
            #line hidden
            
            #line 20 "LawT4.tt"
            this.Write("#include <arcane/Concurrency.h>\n#include <arcane/utils/PlatformUtils.h>\n");
            
            #line default
            #line hidden
            
            #line 22 "LawT4.tt"
 }
   if(MultiThread == MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 24 "LawT4.tt"
            this.Write("#include <Kokkos_Core.hpp>\n");
            
            #line default
            #line hidden
            
            #line 25 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 26 "LawT4.tt"
            this.Write("#include \"ArcGeoSim/Physics/Law2/IFunction.h\"\n");
            
            #line default
            #line hidden
            
            #line 27 "LawT4.tt"
 if(Debug) { 
            
            #line default
            #line hidden
            
            #line 28 "LawT4.tt"
            this.Write("#include <arcane/utils/ITraceMng.h>\n");
            
            #line default
            #line hidden
            
            #line 29 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 30 "LawT4.tt"
 if(Inference == InferenceMode.ONNX){ 
            
            #line default
            #line hidden
            
            #line 31 "LawT4.tt"
            this.Write("#include <onnxruntime/core/session/onnxruntime_cxx_api.h>\n#include<algorithm>\n");
            
            #line default
            #line hidden
            
            #line 33 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 34 "LawT4.tt"
            this.Write("/*---------------------------------------------------------------------------*/\n/" +
                    "*---------------------------------------------------------------------------*/\n\n" +
                    "namespace ");
            
            #line default
            #line hidden
            
            #line 37 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 37 "LawT4.tt"
            this.Write(@" {

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

struct SignatureDescription
{
  struct ArgDescription {
    Arcane::String name;
    Arcane::String type;
    Arcane::String dim;
  };
  Arcane::UniqueArray<ArgDescription> inputs;
  Arcane::UniqueArray<ArgDescription> outputs;
  Arcane::UniqueArray<ArgDescription> parameters;
  SignatureDescription()
  {
");
            
            #line default
            #line hidden
            
            #line 54 "LawT4.tt"
 foreach(var p in Inputs) { 
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("    inputs.add({\"");
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.type ));
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.dim ));
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("\"});\n");
            
            #line default
            #line hidden
            
            #line 56 "LawT4.tt"
 } 
   foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("    outputs.add({\"");
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.type ));
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.dim ));
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("\"});\n");
            
            #line default
            #line hidden
            
            #line 59 "LawT4.tt"
 } 
   foreach(var p in Parameters) { 
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("    parameters.add({\"");
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.type ));
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.dim ));
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("\"});\n");
            
            #line default
            #line hidden
            
            #line 62 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 63 "LawT4.tt"
            this.Write("  }\n};\n\n/*-----------------------------------------------------------------------" +
                    "----*/\n/*-----------------------------------------------------------------------" +
                    "----*/\n\nstruct Signature\n{\n");
            
            #line default
            #line hidden
            
            #line 71 "LawT4.tt"
 foreach(var p in AllProperties) { 
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write("  ");
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.Type ));
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 73 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 74 "LawT4.tt"
            this.Write("  \n};\n\n/*------------------------------------------------------------------------" +
                    "---*/\n/*------------------------------------------------------------------------" +
                    "---*/\n\nclass Function\n  : public Law::IFunction\n{\npublic:\n");
            
            #line default
            #line hidden
            
            #line 84 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 85 "LawT4.tt"
            this.Write("  Function(const Signature& s, std::string& model_with_path)\n    : m_signature(s)" +
                    "\n  {\n    _ckeck_signature();\n    _init_onnx_session(model_with_path);\n    _check" +
                    "_onnx_conformity();\n  }\n");
            
            #line default
            #line hidden
            
            #line 92 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 93 "LawT4.tt"
            this.Write("  template<typename UserAlgo, typename Method>\n  Function(const Signature& s,\n   " +
                    "        UserAlgo& kernel,\n           Method method)\n    : m_signature(s)\n  {\n   " +
                    " _ckeck_signature();\n    \n    typedef void (UserAlgo::*requiredSignature)(\n     " +
                    " ");
            
            #line default
            #line hidden
            
            #line 102 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Signature ));
            
            #line default
            #line hidden
            
            #line 102 "LawT4.tt"
            this.Write("\n    );\n\n    typedef void (UserAlgo::*requiredConstSignature)(\n      ");
            
            #line default
            #line hidden
            
            #line 106 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Signature ));
            
            #line default
            #line hidden
            
            #line 106 "LawT4.tt"
            this.Write("\n    ) const;\n\n    static_assert(\n        std::is_same<Method,requiredSignature>:" +
                    ":value ||\n        std::is_same<Method,requiredConstSignature>::value,\n        \"R" +
                    "equired signature and method given mismatch !!\");\n\n    m_invoker = [&,method](\n " +
                    "     ");
            
            #line default
            #line hidden
            
            #line 115 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( CallSignature ));
            
            #line default
            #line hidden
            
            #line 115 "LawT4.tt"
            this.Write("\n    ) { (kernel.*method)(");
            
            #line default
            #line hidden
            
            #line 116 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( ArgSignature ));
            
            #line default
            #line hidden
            
            #line 116 "LawT4.tt"
            this.Write("); };\n  }\n");
            
            #line default
            #line hidden
            
            #line 118 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 119 "LawT4.tt"
            this.Write("\n  ~Function() {}\n\npublic:\n\n  Arcane::Integer id() const { return out()[0].id(); " +
                    "}\n  \n  Arcane::String name() const { return \"");
            
            #line default
            #line hidden
            
            #line 126 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 126 "LawT4.tt"
            this.Write("\"; }\n\n  Law::PropertyVector in() const\n  {\n    Law::PropertyVector v;\n");
            
            #line default
            #line hidden
            
            #line 131 "LawT4.tt"
 foreach(var p in Inputs) { 
            
            #line default
            #line hidden
            
            #line 132 "LawT4.tt"
            this.Write("    v << m_signature.");
            
            #line default
            #line hidden
            
            #line 132 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 132 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 133 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 134 "LawT4.tt"
            this.Write("    return v;\n  }\n\n  Law::PropertyVector out() const\n  {\n    Law::PropertyVector " +
                    "v;\n");
            
            #line default
            #line hidden
            
            #line 140 "LawT4.tt"
 foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 141 "LawT4.tt"
            this.Write("    v << m_signature.");
            
            #line default
            #line hidden
            
            #line 141 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 141 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 142 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 143 "LawT4.tt"
            this.Write("    return v;\n  }\n\n  Law::PropertyVector parameters() const\n  {\n    Law::Property" +
                    "Vector v;\n");
            
            #line default
            #line hidden
            
            #line 149 "LawT4.tt"
 foreach(var p in Parameters) { 
            
            #line default
            #line hidden
            
            #line 150 "LawT4.tt"
            this.Write("    v << m_signature.");
            
            #line default
            #line hidden
            
            #line 150 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 150 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 151 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 152 "LawT4.tt"
            this.Write("    return v;\n  }\n\n");
            
            #line default
            #line hidden
            
            #line 155 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 156 "LawT4.tt"
            this.Write("  // Not yet differentiable\n  bool isDifferentiable() const { return false; }\n");
            
            #line default
            #line hidden
            
            #line 158 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 159 "LawT4.tt"
            this.Write("  bool isDifferentiable() const { return true; }\n");
            
            #line default
            #line hidden
            
            #line 160 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 161 "LawT4.tt"
            this.Write("  bool isParameter() const { return false; }\n\n  const Signature& signature() { re" +
                    "turn m_signature; }\n  \nprivate:\n\n");
            
            #line default
            #line hidden
            
            #line 167 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 168 "LawT4.tt"
            this.Write(@"  // onnxruntime setup environment and session
  void _init_onnx_session(std::string& model_with_path)
  {
    Ort::Env env(OrtLoggingLevel::ORT_LOGGING_LEVEL_WARNING);
    Ort::SessionOptions session_options;
    session_options.SetIntraOpNumThreads(1);
    session_options.SetGraphOptimizationLevel(GraphOptimizationLevel::ORT_ENABLE_EXTENDED);
    m_session = std::make_unique<Ort::Session>(env, model_with_path.c_str(), session_options);
  }
  
  void _check_onnx_conformity()
  {
    _check_onnx_inputs_size_and_name();
    _check_onnx_input_tensor_shape_and_type();
    _check_onnx_outputs_size_and_name();
    _check_onnx_output_tensor_shape_and_type();
  }
  
  void _check_onnx_inputs_size_and_name()
  {
    // number of inputs
    if(m_session->GetInputCount()!=1)
      throw Arcane::FatalErrorException(""");
            
            #line default
            #line hidden
            
            #line 190 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 190 "LawT4.tt"
            this.Write(" onnx input size must be 1\");\n\n    // input names convention ");
            
            #line default
            #line hidden
            
            #line 192 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( inputOnnx ));
            
            #line default
            #line hidden
            
            #line 192 "LawT4.tt"
            this.Write("\n    std::string  input_name = m_session->GetInputNameAllocated(0, Ort::Allocator" +
                    "WithDefaultOptions()).get();\n    input_name.erase(std::remove(input_name.begin()" +
                    ", input_name.end(), \' \'), input_name.end());\n    if(input_name.compare(\"");
            
            #line default
            #line hidden
            
            #line 195 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( inputOnnx ));
            
            #line default
            #line hidden
            
            #line 195 "LawT4.tt"
            this.Write("\") != 0)\n      throw Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 196 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 196 "LawT4.tt"
            this.Write(" onnx input name is \" + input_name + \" must be ");
            
            #line default
            #line hidden
            
            #line 196 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( inputOnnx ));
            
            #line default
            #line hidden
            
            #line 196 "LawT4.tt"
            this.Write(@""");
  }
  
  void _check_onnx_input_tensor_shape_and_type()
  {
    Ort::TypeInfo type_info = m_session->GetInputTypeInfo(0);
    auto tensor_info = type_info.GetTensorTypeAndShapeInfo();
    
    // tensor 3 axis
    if(tensor_info.GetDimensionsCount()!=3)
      throw Arcane::FatalErrorException(""");
            
            #line default
            #line hidden
            
            #line 206 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 206 "LawT4.tt"
            this.Write(" onnx dimension must be 3\");\n      \n    // -1 on axis 1: batch size variable, ");
            
            #line default
            #line hidden
            
            #line 208 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Inputs.Count() ));
            
            #line default
            #line hidden
            
            #line 208 "LawT4.tt"
            this.Write(" on axis 3: number law inputs\n    if(tensor_info.GetShape() != std::vector<int64_" +
                    "t>{ -1, 1, ");
            
            #line default
            #line hidden
            
            #line 209 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Inputs.Count() ));
            
            #line default
            #line hidden
            
            #line 209 "LawT4.tt"
            this.Write("} )\n      throw Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 210 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 210 "LawT4.tt"
            this.Write(" onnx shape must be {-1, 1, ");
            
            #line default
            #line hidden
            
            #line 210 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Inputs.Count() ));
            
            #line default
            #line hidden
            
            #line 210 "LawT4.tt"
            this.Write("}\");\n      \n    // float precision model our convention\n    if(tensor_info.GetEle" +
                    "mentType()!=ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT)\n      throw Arcane::FatalErrorE" +
                    "xception(\"");
            
            #line default
            #line hidden
            
            #line 214 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 214 "LawT4.tt"
            this.Write(" onnx element type must be float\");\n  }\n  \n  void _check_onnx_outputs_size_and_na" +
                    "me()\n  {\n    // number of outputs\n    if(m_session->GetOutputCount()!=1)\n      t" +
                    "hrow Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 221 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 221 "LawT4.tt"
            this.Write(" onnx output size must be 1\");\n\n    // Output name: ");
            
            #line default
            #line hidden
            
            #line 223 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( outputOnnx ));
            
            #line default
            #line hidden
            
            #line 223 "LawT4.tt"
            this.Write(@" our law convention
    std::string  output_name = m_session->GetOutputNameAllocated(0, Ort::AllocatorWithDefaultOptions()).get();
    output_name.erase(std::remove(output_name.begin(), output_name.end(), ' '), output_name.end());
    if(output_name.compare(""");
            
            #line default
            #line hidden
            
            #line 226 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( outputOnnx ));
            
            #line default
            #line hidden
            
            #line 226 "LawT4.tt"
            this.Write("\") != 0)\n      throw Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 227 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 227 "LawT4.tt"
            this.Write(" onnx output 0 name is \" + output_name + \"must be ");
            
            #line default
            #line hidden
            
            #line 227 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( outputOnnx ));
            
            #line default
            #line hidden
            
            #line 227 "LawT4.tt"
            this.Write(@""");
  }
  
  void _check_onnx_output_tensor_shape_and_type()
  {
    Ort::TypeInfo type_info = m_session->GetOutputTypeInfo(0);
    auto tensor_info = type_info.GetTensorTypeAndShapeInfo();
    
    // tensor 3 axis
    if(tensor_info.GetDimensionsCount()!=3)
      throw Arcane::FatalErrorException(""");
            
            #line default
            #line hidden
            
            #line 237 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 237 "LawT4.tt"
            this.Write(" onnx dimension must be 3\");\n      \n    // -1 on axis 1: batch size variable, ");
            
            #line default
            #line hidden
            
            #line 239 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Outputs.Count() ));
            
            #line default
            #line hidden
            
            #line 239 "LawT4.tt"
            this.Write(" on axis 3: number law outputs\n    if(tensor_info.GetShape() != std::vector<int64" +
                    "_t>{ -1, 1, ");
            
            #line default
            #line hidden
            
            #line 240 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Outputs.Count() ));
            
            #line default
            #line hidden
            
            #line 240 "LawT4.tt"
            this.Write("} )\n      throw Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 241 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 241 "LawT4.tt"
            this.Write(" onnx shape must be {-1, 1, ");
            
            #line default
            #line hidden
            
            #line 241 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Outputs.Count() ));
            
            #line default
            #line hidden
            
            #line 241 "LawT4.tt"
            this.Write("}\");\n      \n    // float precision model our convention\n    if(tensor_info.GetEle" +
                    "mentType()!=ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT)\n      throw Arcane::FatalErrorE" +
                    "xception(\"");
            
            #line default
            #line hidden
            
            #line 245 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 245 "LawT4.tt"
            this.Write(" onnx element type must be float\");\n  }\n  \n");
            
            #line default
            #line hidden
            
            #line 248 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 249 "LawT4.tt"
            this.Write("  void _ckeck_signature()\n  {\n    Law::PropertyVector v;\n");
            
            #line default
            #line hidden
            
            #line 252 "LawT4.tt"
 foreach(var p in InOutputs) { 
            
            #line default
            #line hidden
            
            #line 253 "LawT4.tt"
   if(p.dim == PropertyDim.multiscalar) { 
            
            #line default
            #line hidden
            
            #line 254 "LawT4.tt"
            this.Write("    for(auto i = 0; i < m_signature.");
            
            #line default
            #line hidden
            
            #line 254 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 254 "LawT4.tt"
            this.Write(".size(); ++i)\n      _check_prop_uniq(v, m_signature.");
            
            #line default
            #line hidden
            
            #line 255 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 255 "LawT4.tt"
            this.Write("[i], \"");
            
            #line default
            #line hidden
            
            #line 255 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 255 "LawT4.tt"
            this.Write("[\"+std::to_string(i)+\"]\");\n");
            
            #line default
            #line hidden
            
            #line 256 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 257 "LawT4.tt"
            this.Write("    _check_prop_uniq(v, m_signature.");
            
            #line default
            #line hidden
            
            #line 257 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 257 "LawT4.tt"
            this.Write(", \"");
            
            #line default
            #line hidden
            
            #line 257 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 257 "LawT4.tt"
            this.Write("\");\n");
            
            #line default
            #line hidden
            
            #line 258 "LawT4.tt"
   } 
            
            #line default
            #line hidden
            
            #line 259 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 260 "LawT4.tt"
            this.Write(@"  }
  
  void _check_prop_uniq(Law::PropertyVector& v, const Law::Property& p, const std::string& p_name)
  {
    if(v.contains(p)) _error_signature(p_name);
    v << p;
  }
  
  void _error_signature(const std::string& prop_name)
  {
    throw Arcane::FatalErrorException(
       """);
            
            #line default
            #line hidden
            
            #line 271 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 271 "LawT4.tt"
            this.Write(@"::Signature property uniqueness error, check "" + prop_name + "" property signature assignment""
    );
  }

public:

  void evaluate(const Law::VariableAccessor& accessor,
                const Arcane::ItemGroup& group,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    _evaluate(mode, static_size, accessor, group);
  }

  void evaluate(const Law::PartialVariableAccessor& accessor,
                const Arcane::ItemGroup& group,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    _evaluate(mode, static_size, accessor, group);
  }

  void evaluate(const Law::ArrayAccessor& accessor,
                const Arcane::Integer& begin,
                const Arcane::Integer& end,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    _evaluate(mode, static_size, accessor, begin, end);
  }

  void evaluate(const Law::ScalarAccessor& accessor,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    _evaluate(mode, static_size, accessor);
  }

private:

");
            
            #line default
            #line hidden
            
            #line 311 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 312 "LawT4.tt"
            this.Write("  void _computeOnnxInference(std::vector<float>& onnx_input_buffer, \n            " +
                    "                 std::vector<float>& onnx_output_buffer, \n                      " +
                    "       const int batch_size) const\n  {\n\t// input output dims + batch size all gr" +
                    "oup\n    Ort::TypeInfo input_type_info = m_session->GetInputTypeInfo(0);\n    auto" +
                    " input_tensor_info = input_type_info.GetTensorTypeAndShapeInfo();\n    std::vecto" +
                    "r<int64_t> input_dims = input_tensor_info.GetShape();\n    input_dims[0] = batch_" +
                    "size;\n\t\n    // output dims + batch size all group\n    Ort::TypeInfo output_type_" +
                    "info = m_session->GetOutputTypeInfo(0);\n    auto output_tensor_info = output_typ" +
                    "e_info.GetTensorTypeAndShapeInfo();\n    std::vector<int64_t> output_dims = outpu" +
                    "t_tensor_info.GetShape();\n    output_dims[0] = batch_size;\n\t\n\t// tensors creatio" +
                    "n\n    std::vector<Ort::Value> input_tensors;\n    std::vector<Ort::Value> output_" +
                    "tensors;\n\n    Ort::MemoryInfo memory_info = Ort::MemoryInfo::CreateCpu( \n       " +
                    "                           OrtAllocatorType::OrtArenaAllocator, \n               " +
                    "                   OrtMemType::OrtMemTypeDefault);   \n               \n    input_" +
                    "tensors.push_back(Ort::Value::CreateTensor<float>(memory_info, \n                " +
                    "              onnx_input_buffer.data(), onnx_input_buffer.size(),\n              " +
                    "                input_dims.data(), input_dims.size()));      \n    \n    output_te" +
                    "nsors.push_back(Ort::Value::CreateTensor<float>(memory_info,\n                   " +
                    "           onnx_output_buffer.data(), onnx_output_buffer.size(), \n              " +
                    "                output_dims.data(), output_dims.size()));\n            \n    // se" +
                    "rving names\n    std::string input_name = m_session->GetInputNameAllocated(0, Ort" +
                    "::AllocatorWithDefaultOptions()).get();\n    std::vector<const char*>  input_name" +
                    "s{input_name.c_str()};\n    std::string output_name = m_session->GetOutputNameAll" +
                    "ocated(0, Ort::AllocatorWithDefaultOptions()).get();\n    std::vector<const char*" +
                    "> output_names{output_name.c_str()};\n    \n    // model inference\n    m_session->" +
                    "Run(Ort::RunOptions{nullptr}, \n\t               input_names.data(), input_tensors" +
                    ".data(), 1, \n\t               output_names.data(),output_tensors.data(), 1);\n  }\n" +
                    "\n  void _evaluateOnlyValues(const Law::VariableAccessor& accessor,\n             " +
                    "              const Arcane::ItemGroup& group) const\n  {\n\n");
            
            #line default
            #line hidden
            
            #line 360 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 361 "LawT4.tt"
            this.Write("  \n    // change to constructor for less memory create\n    const int group_size =" +
                    " group.size();\n    std::vector<float> onnx_input_buffer(");
            
            #line default
            #line hidden
            
            #line 364 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Inputs.Count() ));
            
            #line default
            #line hidden
            
            #line 364 "LawT4.tt"
            this.Write("*group_size);\n    std::vector<float> onnx_output_buffer(");
            
            #line default
            #line hidden
            
            #line 365 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Outputs.Count() ));
            
            #line default
            #line hidden
            
            #line 365 "LawT4.tt"
            this.Write("*group_size);\n    \n    // copy + cast\n    int in_index = 0;\n    ENUMERATE_ITEM(ii" +
                    "tem, group)\n    {\n");
            
            #line default
            #line hidden
            
            #line 371 "LawT4.tt"
 foreach(var p in Inputs) { 
            
            #line default
            #line hidden
            
            #line 372 "LawT4.tt"
            this.Write("      onnx_input_buffer[in_index++] = var_");
            
            #line default
            #line hidden
            
            #line 372 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 372 "LawT4.tt"
            this.Write("[iitem];\n");
            
            #line default
            #line hidden
            
            #line 373 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 374 "LawT4.tt"
            this.Write("    } \n\n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, group_si" +
                    "ze);\n                    \n    // copy onnx results into law data             \n  " +
                    "  int out_index = 0;\n    ENUMERATE_ITEM(iitem, group) \n    {\n");
            
            #line default
            #line hidden
            
            #line 382 "LawT4.tt"
 foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 383 "LawT4.tt"
            this.Write("      var_");
            
            #line default
            #line hidden
            
            #line 383 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 383 "LawT4.tt"
            this.Write("[iitem] = onnx_output_buffer[out_index++]; \n");
            
            #line default
            #line hidden
            
            #line 384 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 385 "LawT4.tt"
            this.Write("    }                    \n  }\n\n  void _evaluateOnlyValues(const Law::PartialVaria" +
                    "bleAccessor& accessor,\n                           const Arcane::ItemGroup& group" +
                    ") const\n  {\n  \n");
            
            #line default
            #line hidden
            
            #line 392 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 393 "LawT4.tt"
            this.Write("\n    // change to constructor for less memory create\n    const int group_size = g" +
                    "roup.size();\n    std::vector<float> onnx_input_buffer(");
            
            #line default
            #line hidden
            
            #line 396 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Inputs.Count() ));
            
            #line default
            #line hidden
            
            #line 396 "LawT4.tt"
            this.Write("*group_size);\n    std::vector<float> onnx_output_buffer(");
            
            #line default
            #line hidden
            
            #line 397 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Outputs.Count() ));
            
            #line default
            #line hidden
            
            #line 397 "LawT4.tt"
            this.Write("*group_size);\n    \n    // copy + cast\n    int in_index = 0;\n    ENUMERATE_ITEM(ii" +
                    "tem, group)\n    {\n");
            
            #line default
            #line hidden
            
            #line 403 "LawT4.tt"
 foreach(var p in Inputs) { 
            
            #line default
            #line hidden
            
            #line 404 "LawT4.tt"
            this.Write("      onnx_input_buffer[in_index++] = var_");
            
            #line default
            #line hidden
            
            #line 404 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 404 "LawT4.tt"
            this.Write("[iitem];\n");
            
            #line default
            #line hidden
            
            #line 405 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 406 "LawT4.tt"
            this.Write("    }\n \n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, group_si" +
                    "ze);\n                    \n    // copy onnx results into law data             \n  " +
                    "  int out_index = 0;\n    ENUMERATE_ITEM(iitem, group) \n    {\n");
            
            #line default
            #line hidden
            
            #line 414 "LawT4.tt"
 foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 415 "LawT4.tt"
            this.Write("      var_");
            
            #line default
            #line hidden
            
            #line 415 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 415 "LawT4.tt"
            this.Write("[iitem] = onnx_output_buffer[out_index++]; \n");
            
            #line default
            #line hidden
            
            #line 416 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 417 "LawT4.tt"
            this.Write(@"    }

  }
  
  void _evaluateOnlyValues(const Law::ArrayAccessor& accessor,
                           const Arcane::Integer& begin,
                           const Arcane::Integer& end) const
  {
    // change to constructor for less memory create
    const int vector_size = end - begin;
    std::vector<float> onnx_input_buffer(");
            
            #line default
            #line hidden
            
            #line 427 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Inputs.Count() ));
            
            #line default
            #line hidden
            
            #line 427 "LawT4.tt"
            this.Write("*vector_size);\n    std::vector<float> onnx_output_buffer(");
            
            #line default
            #line hidden
            
            #line 428 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Outputs.Count() ));
            
            #line default
            #line hidden
            
            #line 428 "LawT4.tt"
            this.Write("*vector_size);\n  \n");
            
            #line default
            #line hidden
            
            #line 430 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 431 "LawT4.tt"
            this.Write("    \n    // copy + cast\n    int in_index=0;\n    for(int index = begin; index < en" +
                    "d; ++index) {\n");
            
            #line default
            #line hidden
            
            #line 435 "LawT4.tt"
 foreach(var p in Inputs) { 
            
            #line default
            #line hidden
            
            #line 436 "LawT4.tt"
            this.Write("    onnx_input_buffer[in_index++] = var_");
            
            #line default
            #line hidden
            
            #line 436 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 436 "LawT4.tt"
            this.Write("[index];\n");
            
            #line default
            #line hidden
            
            #line 437 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 438 "LawT4.tt"
            this.Write("    }\n    \n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, vecto" +
                    "r_size);\n    \n    // copy onnx results into law data\n    int out_index=0;\n    fo" +
                    "r(int index = begin; index < end; ++index) {\n");
            
            #line default
            #line hidden
            
            #line 445 "LawT4.tt"
 foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 446 "LawT4.tt"
            this.Write("       var_");
            
            #line default
            #line hidden
            
            #line 446 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 446 "LawT4.tt"
            this.Write("[index] = onnx_output_buffer[out_index++];\n");
            
            #line default
            #line hidden
            
            #line 447 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 448 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _evaluateOnlyValues(const Law::ScalarAccessor& accessor) cons" +
                    "t\n  {\n    // change to constructor for less memory create\n    std::vector<float>" +
                    " onnx_input_buffer(");
            
            #line default
            #line hidden
            
            #line 454 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Inputs.Count() ));
            
            #line default
            #line hidden
            
            #line 454 "LawT4.tt"
            this.Write(");\n    std::vector<float> onnx_output_buffer(");
            
            #line default
            #line hidden
            
            #line 455 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Outputs.Count() ));
            
            #line default
            #line hidden
            
            #line 455 "LawT4.tt"
            this.Write(");\n    \n");
            
            #line default
            #line hidden
            
            #line 457 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 458 "LawT4.tt"
            this.Write("    \n    // copy + cast\n    int in_index=0;\n");
            
            #line default
            #line hidden
            
            #line 461 "LawT4.tt"
 foreach(var p in Inputs) { 
            
            #line default
            #line hidden
            
            #line 462 "LawT4.tt"
            this.Write("    onnx_input_buffer[in_index++] = var_");
            
            #line default
            #line hidden
            
            #line 462 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 462 "LawT4.tt"
            this.Write("();\n");
            
            #line default
            #line hidden
            
            #line 463 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 464 "LawT4.tt"
            this.Write("    \n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, 1);\n    \n  " +
                    "  // copy onnx results into law data\n    int out_index=0;\n");
            
            #line default
            #line hidden
            
            #line 469 "LawT4.tt"
 foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 470 "LawT4.tt"
            this.Write("    var_");
            
            #line default
            #line hidden
            
            #line 470 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 470 "LawT4.tt"
            this.Write(" = onnx_input_buffer[out_index++];\n");
            
            #line default
            #line hidden
            
            #line 471 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 472 "LawT4.tt"
            this.Write("\n  }\n\n");
            
            #line default
            #line hidden
            
            #line 475 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 476 "LawT4.tt"
            this.Write("\n  void _evaluateOnlyValues(const Law::VariableAccessor& accessor,\n              " +
                    "             const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 480 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 481 "LawT4.tt"
 String groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 482 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 483 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 484 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 484 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 485 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 486 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 488 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 488 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 490 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 491 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluateOnlyValues(const Law::PartialVariableAccessor& accesso" +
                    "r,\n                           const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 497 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 498 "LawT4.tt"
 groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 499 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 500 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 501 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 501 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 502 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 503 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 505 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 505 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 507 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 508 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluateOnlyValues(const Law::ArrayAccessor& accessor,\n       " +
                    "                    const Arcane::Integer& begin,\n                           con" +
                    "st Arcane::Integer& end) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 515 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 516 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 517 "LawT4.tt"
            this.Write("    // Evaluation loop\n    for(Arcane::Integer index = begin; index < end; ++inde" +
                    "x) {\n");
            
            #line default
            #line hidden
            
            #line 519 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 520 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 522 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 522 "LawT4.tt"
            this.Write("\n      ); \n");
            
            #line default
            #line hidden
            
            #line 524 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 525 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluateOnlyValues(const Law::ScalarAccessor& accessor) const\n" +
                    "  {\n");
            
            #line default
            #line hidden
            
            #line 530 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 531 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 532 "LawT4.tt"
            this.Write("    {\n");
            
            #line default
            #line hidden
            
            #line 533 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 534 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 536 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 536 "LawT4.tt"
            this.Write("\n      ); \n");
            
            #line default
            #line hidden
            
            #line 538 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues (""); 
            
            #line default
            #line hidden
            
            #line 539 "LawT4.tt"
            this.Write("    }\n  }\n\nprotected:\n  void _evaluate(Arcane::Integer size,\n                 con" +
                    "st Law::VariableAccessor& accessor,\n                 const Arcane::ItemGroup& gr" +
                    "oup) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 547 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 548 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 549 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 550 "LawT4.tt"
 groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 551 "LawT4.tt"
 
  
   if(MultiThread == MultiThreadMode.ArcaneTBB) { 
     groupName = "items"; 
            
            #line default
            #line hidden
            
            #line 555 "LawT4.tt"
            this.Write("    auto partialEvaluateItem = [&](Arcane::ItemVectorView items) {\n");
            
            #line default
            #line hidden
            
            #line 556 "LawT4.tt"
 }
   else if(MultiThread == MultiThreadMode.Kokkos) {

            
            #line default
            #line hidden
            
            #line 559 "LawT4.tt"
            this.Write("     auto group_view = group.view();\n     auto partialEvaluateItem = [&](const in" +
                    "t i) {\n     auto iitem = group_view[i];\n");
            
            #line default
            #line hidden
            
            #line 562 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 563 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 564 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 565 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos) { 
            
            #line default
            #line hidden
            
            #line 566 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 567 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 567 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 568 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 569 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 570 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 572 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 572 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 574 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 575 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 576 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 577 "LawT4.tt"
            this.Write("    }\n");
            
            #line default
            #line hidden
            
            #line 578 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 579 "LawT4.tt"
 if(MultiThread == MultiThreadMode.ArcaneTBB){ 
            
            #line default
            #line hidden
            
            #line 580 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 581 "LawT4.tt"
 parallelEnumerate("group","partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 583 "LawT4.tt"
 if(MultiThread == MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 584 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 585 "LawT4.tt"
 parallelEnumerate(Model.name, "partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 587 "LawT4.tt"
            this.Write("  }\n\n  void _evaluate(Arcane::Integer size,\n                 const Law::PartialVa" +
                    "riableAccessor& accessor,\n                 const Arcane::ItemGroup& group) const" +
                    "\n  {\n");
            
            #line default
            #line hidden
            
            #line 593 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 594 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 595 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 596 "LawT4.tt"
 groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 597 "LawT4.tt"
 
  
   if(MultiThread == MultiThreadMode.ArcaneTBB) { 
     groupName = "items"; 
            
            #line default
            #line hidden
            
            #line 601 "LawT4.tt"
            this.Write("    auto partialEvaluateItem = [&](Arcane::ItemVectorView items) {\n");
            
            #line default
            #line hidden
            
            #line 602 "LawT4.tt"
 }
   else if(MultiThread == MultiThreadMode.Kokkos) {

            
            #line default
            #line hidden
            
            #line 605 "LawT4.tt"
            this.Write("     auto group_view = group.view();\n     auto partialEvaluateItem = [&](const in" +
                    "t i) {\n     auto iitem = group_view[i];\n");
            
            #line default
            #line hidden
            
            #line 608 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 609 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 610 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 611 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos) { 
            
            #line default
            #line hidden
            
            #line 612 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 613 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 613 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 614 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 615 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 616 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 618 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 618 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 620 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 621 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 622 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 623 "LawT4.tt"
            this.Write("    }\n");
            
            #line default
            #line hidden
            
            #line 624 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 625 "LawT4.tt"
 if(MultiThread == MultiThreadMode.ArcaneTBB){ 
            
            #line default
            #line hidden
            
            #line 626 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 627 "LawT4.tt"
 parallelEnumerate("group","partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 629 "LawT4.tt"
 if(MultiThread == MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 630 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 631 "LawT4.tt"
 parallelEnumerate(Model.name, "partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 633 "LawT4.tt"
            this.Write("  }\n\n  void _evaluate(Arcane::Integer size,\n                 const Law::ArrayAcce" +
                    "ssor& accessor,\n                 const Arcane::Integer& begin,\n                 " +
                    "const Arcane::Integer& end) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 640 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 641 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 642 "LawT4.tt"
 ResizeGlobalDerivatives (true); 
            
            #line default
            #line hidden
            
            #line 643 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 644 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 645 "LawT4.tt"
            this.Write("    // Evaluation loop\n    for(Arcane::Integer index = begin; index < end; ++inde" +
                    "x) {\n");
            
            #line default
            #line hidden
            
            #line 647 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 648 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 650 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 650 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 652 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 653 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives ("[index]"); 
            
            #line default
            #line hidden
            
            #line 654 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluate(Arcane::Integer size,\n                 const Law::Sca" +
                    "larAccessor& accessor) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 660 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 661 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 662 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 663 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 664 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 665 "LawT4.tt"
            this.Write("    {\n");
            
            #line default
            #line hidden
            
            #line 666 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 667 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 669 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 669 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 671 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues (""); 
            
            #line default
            #line hidden
            
            #line 672 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives (""); 
            
            #line default
            #line hidden
            
            #line 673 "LawT4.tt"
            this.Write("    }\n  }\n\n");
            
            #line default
            #line hidden
            
            #line 676 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 677 "LawT4.tt"
            this.Write(@"//
// split and pass private

public:

  void derivativesCorrection(const Law::VariableAccessor& accessor,
                             const Arcane::ItemGroup& group,
                             Law::PropertyVector graph_dependencies,
                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,
                             Arcane::Integer nb_unknown_resize) const
");
            
            #line default
            #line hidden
            
            #line 687 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) {  
            
            #line default
            #line hidden
            
            #line 688 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not avalaible with onnx\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 691 "LawT4.tt"
 } else if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 692 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 695 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 696 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 697 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 698 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 699 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done di" +
                    "rectly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 702 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 703 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {" +
                    "\n");
            
            #line default
            #line hidden
            
            #line 706 "LawT4.tt"
 ReorderDerivativesAndNullify ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 707 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_com" +
                    "posed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_deriva" +
                    "tive_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 714 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 715 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {" +
                    "\n");
            
            #line default
            #line hidden
            
            #line 718 "LawT4.tt"
  ApplyDerivativesCorrection("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 719 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Resize to root prop \n    const Arcane::Integer size =" +
                    " nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 724 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 725 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 726 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 727 "LawT4.tt"
            this.Write(@" 

  void derivativesCorrection(const Law::PartialVariableAccessor& accessor,
                             const Arcane::ItemGroup& group,
                             Law::PropertyVector graph_dependencies,
                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,
                             Arcane::Integer nb_unknown_resize) const
");
            
            #line default
            #line hidden
            
            #line 734 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) {  
            
            #line default
            #line hidden
            
            #line 735 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not avalaible with onnx\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 738 "LawT4.tt"
 } else if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 739 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 742 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 743 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 744 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 745 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 746 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done di" +
                    "rectly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 749 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 750 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {" +
                    "\n");
            
            #line default
            #line hidden
            
            #line 753 "LawT4.tt"
 ReorderDerivativesAndNullify ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 754 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_com" +
                    "posed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_deriva" +
                    "tive_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 761 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 762 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {" +
                    "\n");
            
            #line default
            #line hidden
            
            #line 765 "LawT4.tt"
  ApplyDerivativesCorrection("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 766 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Resize to root prop \n    const Arcane::Integer size =" +
                    " nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 771 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 772 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 773 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 774 "LawT4.tt"
            this.Write(@" 

  void derivativesCorrection(const Law::ArrayAccessor& accessor,
                             const Arcane::Integer& begin,
                             const Arcane::Integer& end,
                             Law::PropertyVector graph_dependencies,
                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,
                             Arcane::Integer nb_unknown_resize) const
");
            
            #line default
            #line hidden
            
            #line 782 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) {  
            
            #line default
            #line hidden
            
            #line 783 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not avalaible with onnx\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 786 "LawT4.tt"
 } else if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 787 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 790 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 791 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 792 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 793 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 794 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done di" +
                    "rectly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 797 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 798 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop\n      for(Arcane::Integer i = begin; i < end; +" +
                    "+i) {\n");
            
            #line default
            #line hidden
            
            #line 801 "LawT4.tt"
 ReorderDerivativesAndNullify ("[i]"); 
            
            #line default
            #line hidden
            
            #line 802 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_com" +
                    "posed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_deriva" +
                    "tive_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 809 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 810 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop\n      for(Arcane::Integer i = begin; i < end; +" +
                    "+i) {\n");
            
            #line default
            #line hidden
            
            #line 813 "LawT4.tt"
  ApplyDerivativesCorrection("[i]"); 
            
            #line default
            #line hidden
            
            #line 814 "LawT4.tt"
            this.Write("      }\n    }  \n    //\n    // Resize to root prop \n    const Arcane::Integer size" +
                    " = nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 819 "LawT4.tt"
 ResizeGlobalDerivatives (true); 
            
            #line default
            #line hidden
            
            #line 820 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 821 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 822 "LawT4.tt"
            this.Write(@" 

  void derivativesCorrection(const Law::ScalarAccessor& accessor,
                             Law::PropertyVector graph_dependencies,
                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,
                             Arcane::Integer nb_unknown_resize) const
");
            
            #line default
            #line hidden
            
            #line 828 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) {  
            
            #line default
            #line hidden
            
            #line 829 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not avalaible with onnx\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 832 "LawT4.tt"
 } else if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 833 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 836 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 837 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 838 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 839 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 840 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done di" +
                    "rectly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 843 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 844 "LawT4.tt"
            this.Write("      //\n      //\n      {\n");
            
            #line default
            #line hidden
            
            #line 847 "LawT4.tt"
 ReorderDerivativesAndNullify (""); 
            
            #line default
            #line hidden
            
            #line 848 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_com" +
                    "posed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_deriva" +
                    "tive_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 855 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 856 "LawT4.tt"
            this.Write("      //\n      // \n      {\n");
            
            #line default
            #line hidden
            
            #line 859 "LawT4.tt"
  ApplyDerivativesCorrection(""); 
            
            #line default
            #line hidden
            
            #line 860 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Resize to root prop \n    const Arcane::Integer size =" +
                    " nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 865 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 866 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 867 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 868 "LawT4.tt"
            this.Write(" \n\nprotected:\n\n  template<typename... T>\n  void _evaluate(const Law::EvaluationMo" +
                    "de mode, Arcane::Integer static_size, const T&... args) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 875 "LawT4.tt"
 if(Inference == InferenceMode.ONNX){ 
            
            #line default
            #line hidden
            
            #line 876 "LawT4.tt"
            this.Write("    _evaluateOnlyValues(args...);\n");
            
            #line default
            #line hidden
            
            #line 877 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 878 "LawT4.tt"
            this.Write(@"    switch(mode)
    {
    case Law::eWithoutDerivative :
      _evaluateOnlyValues(args...);
      break;
    case Law::eWithDerivative :
      if(static_size != 0) {
        _evaluate(static_size, args...);
      } else {
        _evaluate(in().dataSize(), args...);
      }
      break;
    default:
      throw Arcane::FatalErrorException(""evaluation case default error"");
    }
");
            
            #line default
            #line hidden
            
            #line 893 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 894 "LawT4.tt"
            this.Write(" \n  }\n\nprotected:\n\n  Signature m_signature;\n");
            
            #line default
            #line hidden
            
            #line 900 "LawT4.tt"
 if(Inference == InferenceMode.ONNX){ 
            
            #line default
            #line hidden
            
            #line 901 "LawT4.tt"
            this.Write(" \n  std::unique_ptr<Ort::Session> m_session;\n");
            
            #line default
            #line hidden
            
            #line 903 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 904 "LawT4.tt"
            this.Write("  std::function<\n    void(");
            
            #line default
            #line hidden
            
            #line 905 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Signature ));
            
            #line default
            #line hidden
            
            #line 905 "LawT4.tt"
            this.Write(")\n  > m_invoker;\n");
            
            #line default
            #line hidden
            
            #line 907 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 908 "LawT4.tt"
            this.Write("  \n};\n\n/*------------------------------------------------------------------------" +
                    "---*/\n/*------------------------------------------------------------------------" +
                    "---*/\n");
            
            #line default
            #line hidden
            
            #line 913 "LawT4.tt"
 if(Debug) { 
            
            #line default
            #line hidden
            
            #line 914 "LawT4.tt"
            this.Write("struct EpsilonDerivatives\n{\n");
            
            #line default
            #line hidden
            
            #line 916 "LawT4.tt"
 foreach(var i in Inputs) { 
            
            #line default
            #line hidden
            
            #line 917 "LawT4.tt"
            this.Write("  Arcane::Real ");
            
            #line default
            #line hidden
            
            #line 917 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));
            
            #line default
            #line hidden
            
            #line 917 "LawT4.tt"
            this.Write(" = 1.e-6;\n");
            
            #line default
            #line hidden
            
            #line 918 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 919 "LawT4.tt"
            this.Write(@"};

class DebugFunction
  : public Function
{
public:

  template<typename UserAlgo, typename Method>
  DebugFunction(const Signature& s,
                UserAlgo& kernel,
                Method method,
                const EpsilonDerivatives& epsilon,
                Arcane::ITraceMng* trace_mng):
                Function(s,kernel,method),
                m_epsilon(epsilon),
                m_trace_mng(trace_mng)
                {};

protected:
  
  void evaluate(const Law::VariableAccessor& accessor,
                const Arcane::ItemGroup& group,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    Function::evaluate(accessor, group, mode, static_size);
");
            
            #line default
            #line hidden
            
            #line 945 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 947 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor, group);\n");
            
            #line default
            #line hidden
            
            #line 949 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 950 "LawT4.tt"
            this.Write(@"  }
  
  void evaluate(const Law::PartialVariableAccessor& accessor,
                const Arcane::ItemGroup& group,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    Function::evaluate(accessor, group, mode, static_size);
");
            
            #line default
            #line hidden
            
            #line 958 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 960 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor, group);\n");
            
            #line default
            #line hidden
            
            #line 962 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 963 "LawT4.tt"
            this.Write(@"  }
  
  void evaluate(const Law::ArrayAccessor& accessor,
                const Arcane::Integer& begin,
                const Arcane::Integer& end,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    Function::evaluate(accessor, begin, end, mode, static_size);
");
            
            #line default
            #line hidden
            
            #line 972 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 974 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor,  begin, en" +
                    "d);\n");
            
            #line default
            #line hidden
            
            #line 976 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 977 "LawT4.tt"
            this.Write("  }\n  \n  void evaluate(const Law::ScalarAccessor& accessor,\n                const" +
                    " Law::EvaluationMode mode,\n                Arcane::Integer static_size = 0) cons" +
                    "t\n  {\n    Function::evaluate(accessor, mode, static_size);\n");
            
            #line default
            #line hidden
            
            #line 984 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 986 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor);\n");
            
            #line default
            #line hidden
            
            #line 988 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 989 "LawT4.tt"
            this.Write("  }\n\n");
            
            #line default
            #line hidden
            
            #line 991 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 993 "LawT4.tt"
            this.Write("private:\n\n  void _check_derivatives(const Law::VariableAccessor& accessor,\n      " +
                    "                    const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 998 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 999 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1000 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1001 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1002 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1003 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1003 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1003 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law " +
                    "derivatives and finite difference ones\";\n    // Evaluation loop over items\n    E" +
                    "NUMERATE_ITEM(iitem, group) {\n");
            
            #line default
            #line hidden
            
            #line 1007 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1008 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1009 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1010 "LawT4.tt"
 PrintDebugValuesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1011 "LawT4.tt"
 PrintDebugDerivativesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1012 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1013 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _check_derivatives(const Law::PartialVariableAccessor& access" +
                    "or,\n                          const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 1019 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 1020 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1021 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1022 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1023 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1024 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1024 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1024 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law " +
                    "derivatives and finite difference ones\";\n    // Evaluation loop over items\n    E" +
                    "NUMERATE_ITEM(iitem, group) {\n");
            
            #line default
            #line hidden
            
            #line 1028 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1029 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1030 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1031 "LawT4.tt"
 PrintDebugValuesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1032 "LawT4.tt"
 PrintDebugDerivativesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1033 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1034 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _check_derivatives(const Law::ArrayAccessor& accessor,\n      " +
                    "                    const Arcane::Integer& begin,\n                          cons" +
                    "t Arcane::Integer& end) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 1041 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 1042 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1043 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1044 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1045 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1046 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1046 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1046 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law " +
                    "derivatives and finite difference ones\";\n    // Evaluation loop\n    for(Arcane::" +
                    "Integer index = begin; index < end; ++index) {\n");
            
            #line default
            #line hidden
            
            #line 1050 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1051 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1052 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1053 "LawT4.tt"
 PrintDebugValuesInfos ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1054 "LawT4.tt"
 PrintDebugDerivativesInfos ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1055 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1056 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _check_derivatives(const Law::ScalarAccessor& accessor) const" +
                    "\n  {\n");
            
            #line default
            #line hidden
            
            #line 1061 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 1062 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1063 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1064 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1065 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1066 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1066 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1066 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law " +
                    "derivatives and finite difference ones\";\n    // Evaluation\n    {\n");
            
            #line default
            #line hidden
            
            #line 1070 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 1071 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 1072 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1073 "LawT4.tt"
 PrintDebugValuesInfos ("()"); 
            
            #line default
            #line hidden
            
            #line 1074 "LawT4.tt"
 PrintDebugDerivativesInfos (""); 
            
            #line default
            #line hidden
            
            #line 1075 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives (""); 
            
            #line default
            #line hidden
            
            #line 1076 "LawT4.tt"
            this.Write("    }\n  }\n");
            
            #line default
            #line hidden
            
            #line 1078 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1079 "LawT4.tt"
            this.Write("private:\n\n");
            
            #line default
            #line hidden
            
            #line 1081 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1083 "LawT4.tt"
            this.Write(@"  void _print_value(const Arcane::String value_name, const Arcane::Real& value) const
  {
    m_trace_mng->info() << value_name <<"" value   = ""<< value ;
  }

  void _print_derivatives(const Arcane::String deriv_name, const Arcane::Real& deriv_ref, const Arcane::Real& deriv_test) const
  {
    m_trace_mng->info() << deriv_name <<"" ref   = ""<< deriv_ref ;
    m_trace_mng->info() << deriv_name <<"" test  = ""<< deriv_test ;
    m_trace_mng->info() << deriv_name <<"" error = ""<< (deriv_ref - deriv_test) / (fabs(deriv_ref) + 1.e-20);
  }
");
            
            #line default
            #line hidden
            
            #line 1094 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1095 "LawT4.tt"
            this.Write(@"
private:

  //! Epsilon values to compute derivatives
  EpsilonDerivatives m_epsilon;
  
  //! Manager de trace
  Arcane::ITraceMng* m_trace_mng;

};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/
");
            
            #line default
            #line hidden
            
            #line 1108 "LawT4.tt"
  } 
            
            #line default
            #line hidden
            
            #line 1109 "LawT4.tt"
            this.Write("\n}\n\n#endif\n\n/*-------------------------------------------------------------------" +
                    "--------*/\n/*-------------------------------------------------------------------" +
                    "--------*/\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class LawT4Base {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
