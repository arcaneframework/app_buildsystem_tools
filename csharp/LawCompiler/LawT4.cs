//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LawCompiler {
    using System.Linq;
    using System;
    
    
    public partial class LawT4 : LawT4Base {
        
        
        #line 1289 "LawT4.tt"

private bool containsVectorProperty () 
{
  foreach(var p in AllProperties) { 
  	if(p.dim == PropertyDim.vectorial)
  	  return true;
  }
  return false;
}
private void StaticGlobalDependenciesSize () 
{ 
        #line default
        #line hidden
        
        
        #line 1300 "LawT4.tt"

        this.Write("   \n    // Derivatives dependencies sizes\n    const Arcane::Integer nb_graph_prop" +
        " = graph_dependencies.size();\n    const Arcane::Integer nb_direct_prop = in().si" +
        "ze();\n");

        #line default
        #line hidden
        
        
        #line 1304 "LawT4.tt"
 
}

private void ComputeDerivativesReorderOffset () 
{ 
        #line default
        #line hidden
        
        
        #line 1309 "LawT4.tt"

        this.Write(@"      Arcane::IntegerUniqueArray static_ofs(nb_direct_prop);
      Arcane::Integer graph_composed_ofs = nb_graph_prop;
      auto in_prop = in();
      Arcane::Integer nb_root_prop = 0;
      for(Arcane::Integer static_index = 0; static_index<nb_direct_prop;++static_index)
      {
        auto prop = in_prop[static_index];
        // Move composed derivatives to the end
        if(in_composed_derivative_ofs.find(prop) != in_composed_derivative_ofs.end())
          static_ofs[static_index] = graph_composed_ofs++;
        // Move root properties to the consistent graph index
        else
        {
          static_ofs[static_index]=graph_dependencies[prop];
          nb_root_prop++;
        }
      }
      // Non root graph derivatives equals zero before correction
      const Arcane::Integer nb_inherited_prop = nb_graph_prop - nb_root_prop;
      Arcane::IntegerUniqueArray inherited_deriv_ofs(nb_inherited_prop);
      Arcane::Integer inherited_index = 0;
      for(Arcane::Integer graph_index = 0; graph_index<nb_graph_prop;++graph_index)
      {
        if(!in_prop.contains(graph_dependencies[graph_index]))
          inherited_deriv_ofs[inherited_index++]=graph_index;
      }
");

        #line default
        #line hidden
        
        
        #line 1335 "LawT4.tt"
 
}
private void ReorderDerivativesAndNullify (string op) 
{ 
        #line default
        #line hidden
        
        
        #line 1339 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1343 "LawT4.tt"

        this.Write("        Arcane::");

        #line default
        #line hidden
        
        
        #line 1343 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1343 "LawT4.tt"

        this.Write("UniqueArray var_deriv_");

        #line default
        #line hidden
        
        
        #line 1343 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1343 "LawT4.tt"

        this.Write("_ini(var_deriv_");

        #line default
        #line hidden
        
        
        #line 1343 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1343 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1343 "LawT4.tt"

        this.Write(".constView());\n");

        #line default
        #line hidden
        
        
        #line 1344 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1347 "LawT4.tt"

        this.Write("        Arcane::Integer size_");

        #line default
        #line hidden
        
        
        #line 1347 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1347 "LawT4.tt"

        this.Write(" = m_signature.");

        #line default
        #line hidden
        
        
        #line 1347 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1347 "LawT4.tt"

        this.Write(".size();\n        Arcane::UniqueArray<Arcane::");

        #line default
        #line hidden
        
        
        #line 1348 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1348 "LawT4.tt"

        this.Write("ConstArrayView> var_deriv_");

        #line default
        #line hidden
        
        
        #line 1348 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1348 "LawT4.tt"

        this.Write("_ini(size_");

        #line default
        #line hidden
        
        
        #line 1348 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1348 "LawT4.tt"

        this.Write(");\n        for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1349 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1349 "LawT4.tt"

        this.Write("; ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1350 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1350 "LawT4.tt"

        this.Write("_ini[j] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1350 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1350 "LawT4.tt"

        this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1350 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1350 "LawT4.tt"

        this.Write(";\n        }\n");

        #line default
        #line hidden
        
        
        #line 1352 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1356 "LawT4.tt"

        this.Write("        for(Arcane::Integer static_index=0;static_index<nb_direct_prop;++static_i" +
        "ndex)\n        {\n");

        #line default
        #line hidden
        
        
        #line 1358 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1362 "LawT4.tt"

        this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1362 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1362 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1362 "LawT4.tt"

        this.Write("[static_ofs[static_index]] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1362 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1362 "LawT4.tt"

        this.Write("_ini[static_index];\n");

        #line default
        #line hidden
        
        
        #line 1363 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1366 "LawT4.tt"

        this.Write("         for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1366 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1366 "LawT4.tt"

        this.Write("; ++j) {\n              var_deriv_");

        #line default
        #line hidden
        
        
        #line 1367 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1367 "LawT4.tt"

        this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1367 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1367 "LawT4.tt"

        this.Write("[static_ofs[static_index]] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1367 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1367 "LawT4.tt"

        this.Write("_ini[j][static_index];\n         }\n");

        #line default
        #line hidden
        
        
        #line 1369 "LawT4.tt"
    
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1373 "LawT4.tt"

        this.Write("        }\n        for(Arcane::Integer inherited_index=0;inherited_index<nb_inheri" +
        "ted_prop;++inherited_index)\n        {\n");

        #line default
        #line hidden
        
        
        #line 1376 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1380 "LawT4.tt"

        this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1380 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1380 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1380 "LawT4.tt"

        this.Write("[inherited_deriv_ofs[inherited_index]]=0;\n");

        #line default
        #line hidden
        
        
        #line 1381 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1384 "LawT4.tt"

        this.Write("         for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1384 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1384 "LawT4.tt"

        this.Write("; ++j) {\n              var_deriv_");

        #line default
        #line hidden
        
        
        #line 1385 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1385 "LawT4.tt"

        this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1385 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1385 "LawT4.tt"

        this.Write("[inherited_deriv_ofs[inherited_index]] = 0;\n         }\n");

        #line default
        #line hidden
        
        
        #line 1387 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1391 "LawT4.tt"

        this.Write("       }\n");

        #line default
        #line hidden
        
        
        #line 1392 "LawT4.tt"

}
private void ComputeDerivativesCorrectionOffset () 
{
        #line default
        #line hidden
        
        
        #line 1396 "LawT4.tt"

        this.Write(@"      direct_composed_index++;
      // Derivatives correction through in derivatives properties
      Law::PropertyVector composed_prop_deriv = iter_composed.second;
      Arcane::Integer nb_composed_prop_deriv = composed_prop_deriv.size();
      Arcane::IntegerUniqueArray composed_prop_deriv_ofs(nb_composed_prop_deriv);
      for(Arcane::Integer composed_deriv_index=0;composed_deriv_index<nb_composed_prop_deriv;++composed_deriv_index){
        auto current_in_derived_prop = composed_prop_deriv[composed_deriv_index];
        composed_prop_deriv_ofs[composed_deriv_index] = graph_dependencies[current_in_derived_prop];
      }
      // Only real scalar avalaible in this version (external check)
      Law::Property composed_prop = iter_composed.first;
      Law::ScalarRealProperty& scalar_composed_prop = static_cast<Law::ScalarRealProperty&>(composed_prop);
      // In proproperties has derivatives (external check)
      auto deriv_composed = accessor.derivatives(scalar_composed_prop);
");

        #line default
        #line hidden
        
        
        #line 1410 "LawT4.tt"

}
private void parallelEnumerate(string groupName, string lambdaName) 
{
    if(MultiThread == MultiThreadMode.ArcaneTBB) {

        #line default
        #line hidden
        
        
        #line 1416 "LawT4.tt"

        this.Write(@"      int nb_thread = Arcane::TaskFactory::nbAllowedThread();
      Arcane::ParallelLoopOptions para_options;
      para_options.setMaxThread(nb_thread);
      int grain_size = group.size()/nb_thread + 1;
      para_options.setGrainSize(grain_size);
      Arcane::Parallel::Foreach(");

        #line default
        #line hidden
        
        
        #line 1421 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( groupName ));

        #line default
        #line hidden
        
        
        #line 1421 "LawT4.tt"

        this.Write(", para_options, ");

        #line default
        #line hidden
        
        
        #line 1421 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( lambdaName ));

        #line default
        #line hidden
        
        
        #line 1421 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1422 "LawT4.tt"

    }
    else if(MultiThread == MultiThreadMode.Kokkos) {

        #line default
        #line hidden
        
        
        #line 1426 "LawT4.tt"

        this.Write("      Kokkos::parallel_for(\"");

        #line default
        #line hidden
        
        
        #line 1426 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( groupName ));

        #line default
        #line hidden
        
        
        #line 1426 "LawT4.tt"

        this.Write("\", group.size(), ");

        #line default
        #line hidden
        
        
        #line 1426 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( lambdaName ));

        #line default
        #line hidden
        
        
        #line 1426 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1427 "LawT4.tt"

    }
}
private void ApplyDerivativesCorrection(string op) 
{
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1435 "LawT4.tt"

        this.Write("        auto direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1435 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1435 "LawT4.tt"

        this.Write(" = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1435 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1435 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1435 "LawT4.tt"

        this.Write("[direct_composed_index];\n");

        #line default
        #line hidden
        
        
        #line 1436 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1439 "LawT4.tt"

        this.Write("        Arcane::Integer size_");

        #line default
        #line hidden
        
        
        #line 1439 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1439 "LawT4.tt"

        this.Write(" = m_signature.");

        #line default
        #line hidden
        
        
        #line 1439 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1439 "LawT4.tt"

        this.Write(".size();\n        Arcane::");

        #line default
        #line hidden
        
        
        #line 1440 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1440 "LawT4.tt"

        this.Write("UniqueArray direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1440 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1440 "LawT4.tt"

        this.Write("(size_");

        #line default
        #line hidden
        
        
        #line 1440 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1440 "LawT4.tt"

        this.Write(");\n        for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1441 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1441 "LawT4.tt"

        this.Write("; ++j) {\n          direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write("[j] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"

        this.Write("[direct_composed_index];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1444 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1448 "LawT4.tt"

        this.Write("        for(auto derived_index = 0; derived_index < nb_composed_prop_deriv; ++der" +
        "ived_index)\n        {\n");

        #line default
        #line hidden
        
        
        #line 1450 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1454 "LawT4.tt"

        this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1454 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1454 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1454 "LawT4.tt"

        this.Write("[composed_prop_deriv_ofs[derived_index]] += direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1454 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1454 "LawT4.tt"

        this.Write("*deriv_composed");

        #line default
        #line hidden
        
        
        #line 1454 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1454 "LawT4.tt"

        this.Write("[derived_index];\n");

        #line default
        #line hidden
        
        
        #line 1455 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1458 "LawT4.tt"

        this.Write("        for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1458 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1458 "LawT4.tt"

        this.Write("; ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write("[composed_prop_deriv_ofs[derived_index]] += direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write("[j]*deriv_composed");

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1459 "LawT4.tt"

        this.Write("[derived_index];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1461 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1465 "LawT4.tt"

        this.Write("        }\n");

        #line default
        #line hidden
        
        
        #line 1466 "LawT4.tt"

}
private void AccessGlobalValues () 
{ 
        #line default
        #line hidden
        
        
        #line 1470 "LawT4.tt"

        this.Write("    // Access to global values container\n");

        #line default
        #line hidden
        
        
        #line 1471 "LawT4.tt"

  foreach(var p in AllProperties) { 
        #line default
        #line hidden
        
        
        #line 1473 "LawT4.tt"

        this.Write("    auto var_");

        #line default
        #line hidden
        
        
        #line 1473 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1473 "LawT4.tt"

        this.Write(" = accessor.values(m_signature.");

        #line default
        #line hidden
        
        
        #line 1473 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1473 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1474 "LawT4.tt"

  }
}

private void AccessGlobalDerivatives () 
{ 
        #line default
        #line hidden
        
        
        #line 1480 "LawT4.tt"

        this.Write("    // Access to global derivatives container\n");

        #line default
        #line hidden
        
        
        #line 1481 "LawT4.tt"

  foreach(var o in Outputs) { 
        #line default
        #line hidden
        
        
        #line 1483 "LawT4.tt"

        this.Write("    auto var_deriv_");

        #line default
        #line hidden
        
        
        #line 1483 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1483 "LawT4.tt"

        this.Write(" = accessor.derivatives(m_signature.");

        #line default
        #line hidden
        
        
        #line 1483 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1483 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1484 "LawT4.tt"

  }
}

private void ResizeGlobalDerivatives (bool need_resize_array = false) 
{ 
        #line default
        #line hidden
        
        
        #line 1490 "LawT4.tt"

        this.Write("    // Resize global outputs\n");

        #line default
        #line hidden
        
        
        #line 1491 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1495 "LawT4.tt"

        this.Write("    var_deriv_");

        #line default
        #line hidden
        
        
        #line 1495 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1495 "LawT4.tt"

        this.Write(".resize(size);\n");

        #line default
        #line hidden
        
        
        #line 1496 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1499 "LawT4.tt"

        this.Write("    for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1499 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1499 "LawT4.tt"

        this.Write(".size(); ++i) {\n      var_deriv_");

        #line default
        #line hidden
        
        
        #line 1500 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1500 "LawT4.tt"

        this.Write("[i].resize(size);\n    }\n");

        #line default
        #line hidden
        
        
        #line 1502 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
    if(need_resize_array) { 
        #line default
        #line hidden
        
        
        #line 1506 "LawT4.tt"

        this.Write("    var_deriv_");

        #line default
        #line hidden
        
        
        #line 1506 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1506 "LawT4.tt"

        this.Write(".resize(var_deriv_");

        #line default
        #line hidden
        
        
        #line 1506 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1506 "LawT4.tt"

        this.Write(".dim1Size(), m_signature.");

        #line default
        #line hidden
        
        
        #line 1506 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1506 "LawT4.tt"

        this.Write(".size(),size);\n");

        #line default
        #line hidden
        
        
        #line 1507 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1509 "LawT4.tt"

        this.Write("    var_deriv_");

        #line default
        #line hidden
        
        
        #line 1509 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1509 "LawT4.tt"

        this.Write(".resize(m_signature.");

        #line default
        #line hidden
        
        
        #line 1509 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1509 "LawT4.tt"

        this.Write(".size(),size);\n");

        #line default
        #line hidden
        
        
        #line 1510 "LawT4.tt"
 
    }
    break;
    } 
  }
}

private void CreateDerivativesOffsets () 
{ 
        #line default
        #line hidden
        
        
        #line 1519 "LawT4.tt"

        this.Write("    // Create derivatives offsets\n");

        #line default
        #line hidden
        
        
        #line 1520 "LawT4.tt"

  Property prev = null;
  foreach(var p in Inputs) {
    if(prev == null) { 
        #line default
        #line hidden
        
        
        #line 1524 "LawT4.tt"

        this.Write("    auto ofs_");

        #line default
        #line hidden
        
        
        #line 1524 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1524 "LawT4.tt"

        this.Write(" = 0;\n");

        #line default
        #line hidden
        
        
        #line 1525 "LawT4.tt"
 
    } else if (prev.dim != PropertyDim.scalar) { 
        #line default
        #line hidden
        
        
        #line 1527 "LawT4.tt"

        this.Write("    auto ofs_");

        #line default
        #line hidden
        
        
        #line 1527 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1527 "LawT4.tt"

        this.Write(" = ofs_");

        #line default
        #line hidden
        
        
        #line 1527 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( prev.name ));

        #line default
        #line hidden
        
        
        #line 1527 "LawT4.tt"

        this.Write(" + m_signature.");

        #line default
        #line hidden
        
        
        #line 1527 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( prev.name ));

        #line default
        #line hidden
        
        
        #line 1527 "LawT4.tt"

        this.Write(".size();\n");

        #line default
        #line hidden
        
        
        #line 1528 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1530 "LawT4.tt"

        this.Write("    auto ofs_");

        #line default
        #line hidden
        
        
        #line 1530 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1530 "LawT4.tt"

        this.Write(" = ofs_");

        #line default
        #line hidden
        
        
        #line 1530 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( prev.name ));

        #line default
        #line hidden
        
        
        #line 1530 "LawT4.tt"

        this.Write(" + 1;\n");

        #line default
        #line hidden
        
        
        #line 1531 "LawT4.tt"

    }
    prev = p;
  }
}

private void AllocateOnnxLocalData (string multSize)
{ 
        #line default
        #line hidden
        
        
        #line 1539 "LawT4.tt"

        this.Write("    const int nb_law_input_prop =  _get_nb_input_properties();\n    std::vector<In" +
        "ferenceInT> onnx_input_buffer(nb_law_input_prop");

        #line default
        #line hidden
        
        
        #line 1540 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture(multSize));

        #line default
        #line hidden
        
        
        #line 1540 "LawT4.tt"

        this.Write(@");
    const int nb_law_output_prop =  _get_nb_output_properties();
    const int nb_law_derivatives = m_is_differentiable ? (nb_law_input_prop*nb_law_output_prop) : 0;
    const int nb_law_output = nb_law_output_prop + nb_law_derivatives;
    std::vector<InferenceOutT> onnx_output_buffer(nb_law_output");

        #line default
        #line hidden
        
        
        #line 1544 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture(multSize));

        #line default
        #line hidden
        
        
        #line 1544 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1545 "LawT4.tt"
 }
    
private void AllocateLocalData ()
{ 
        #line default
        #line hidden
        
        
        #line 1549 "LawT4.tt"

        this.Write("    // Allocate local inputs\n");

        #line default
        #line hidden
        
        
        #line 1550 "LawT4.tt"

  foreach(var i in Inputs) { 
    switch(i.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1554 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1554 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1554 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1554 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1554 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1555 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1558 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1558 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1558 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1558 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1558 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1558 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1558 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1559 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1562 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1562 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1562 "LawT4.tt"

        this.Write("ConstArrayView ");

        #line default
        #line hidden
        
        
        #line 1562 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1562 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1563 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1567 "LawT4.tt"

        this.Write("    // Allocate local outputs\n");

        #line default
        #line hidden
        
        
        #line 1568 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1572 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1572 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1572 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1572 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1572 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1573 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1577 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1577 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1577 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1577 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1577 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1577 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1577 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1578 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1581 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1581 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1581 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1581 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1581 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1581 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1581 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1581 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1581 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1582 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1585 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1585 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1585 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1585 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1585 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1585 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1585 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1585 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1585 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1586 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1592 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1592 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1592 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1592 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1592 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1592 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1592 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1593 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1598 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

        this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

        this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1601 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1602 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

        this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

        this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1605 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1606 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1612 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1612 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1612 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1612 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1612 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1612 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1612 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1613 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1617 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1617 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1617 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1617 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1617 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1617 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1617 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1617 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1617 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1618 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1621 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1621 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1621 "LawT4.tt"

        this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1621 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1621 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1621 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1621 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1621 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1621 "LawT4.tt"

        this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1621 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1621 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1622 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1625 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1625 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1625 "LawT4.tt"

        this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1625 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1625 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1625 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1625 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1625 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1625 "LawT4.tt"

        this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1625 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1625 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1626 "LawT4.tt"

      break;
      }
    }
    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 1633 "LawT4.tt"

        this.Write("    // Allocate local parameters\n");

        #line default
        #line hidden
        
        
        #line 1634 "LawT4.tt"

  foreach(var p in Parameters) { 
    switch(p.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1638 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1638 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1638 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1638 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1638 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1639 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"

        this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1643 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1646 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1646 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1646 "LawT4.tt"

        this.Write("ConstArrayView ");

        #line default
        #line hidden
        
        
        #line 1646 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1646 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1647 "LawT4.tt"
 
    break;
    }
  }
}

private void CopyGlobalValuesToLocalOnnxValues (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1655 "LawT4.tt"
 foreach(var p in Inputs) {
    switch(p.dim) {
     case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1658 "LawT4.tt"

        this.Write("      onnx_input_buffer[in_index++] = var_");

        #line default
        #line hidden
        
        
        #line 1658 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1658 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1658 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1659 "LawT4.tt"
   break;
     case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1661 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1661 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1661 "LawT4.tt"

        this.Write(".size(); ++i) {\n        onnx_input_buffer[in_index++] = var_");

        #line default
        #line hidden
        
        
        #line 1662 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1662 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1662 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1662 "LawT4.tt"

        this.Write(";\n      } \n");

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"
  break;
   }
  }
}

private void CopyLocalOnnxValuesToGlobalValues (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1671 "LawT4.tt"
 foreach(var p in Outputs) {
    switch(p.dim) {
     case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1674 "LawT4.tt"

        this.Write("      var_");

        #line default
        #line hidden
        
        
        #line 1674 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1674 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1674 "LawT4.tt"

        this.Write(" = onnx_output_buffer[out_index++];\n");

        #line default
        #line hidden
        
        
        #line 1675 "LawT4.tt"
   break;
     case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1677 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1677 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1677 "LawT4.tt"

        this.Write(".size(); ++i) {\n        var_");

        #line default
        #line hidden
        
        
        #line 1678 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1678 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1678 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1678 "LawT4.tt"

        this.Write(" = onnx_output_buffer[out_index++];\n      } \n");

        #line default
        #line hidden
        
        
        #line 1680 "LawT4.tt"
  break;
   }
  }
}

private void CopyGlobalValuesToLocalValues (string op, bool vectorial_no_op = false)
{ 
        #line default
        #line hidden
        
        
        #line 1687 "LawT4.tt"

        this.Write("      // Copy global inputs values to local values\n");

        #line default
        #line hidden
        
        
        #line 1688 "LawT4.tt"

  foreach(var i in Inputs) { 
    switch(i.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1692 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1692 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1692 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1692 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1692 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1692 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1693 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1696 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1696 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1696 "LawT4.tt"

        this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1697 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1697 "LawT4.tt"

        this.Write("[i] = var_");

        #line default
        #line hidden
        
        
        #line 1697 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1697 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1697 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1697 "LawT4.tt"

        this.Write(";\n      }\n");

        #line default
        #line hidden
        
        
        #line 1699 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
    if(vectorial_no_op) { 
        #line default
        #line hidden
        
        
        #line 1703 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1703 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1703 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1703 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1703 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1704 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1706 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1706 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1706 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1706 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1706 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1706 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1707 "LawT4.tt"
 
    }
    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 1712 "LawT4.tt"

        this.Write("      // Copy global parameters values to local values\n");

        #line default
        #line hidden
        
        
        #line 1713 "LawT4.tt"

  foreach(var p in Parameters) { 
    switch(p.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1717 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1717 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1717 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1717 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1717 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1717 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1718 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1721 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1721 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1721 "LawT4.tt"

        this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1722 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1722 "LawT4.tt"

        this.Write("[i] = var_");

        #line default
        #line hidden
        
        
        #line 1722 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1722 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1722 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1722 "LawT4.tt"

        this.Write(";\n      }\n");

        #line default
        #line hidden
        
        
        #line 1724 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
    if(vectorial_no_op) { 
        #line default
        #line hidden
        
        
        #line 1728 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1728 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1728 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1728 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1728 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1729 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1731 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1731 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1731 "LawT4.tt"

        this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1731 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1731 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1731 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1732 "LawT4.tt"

    }
    break;
    }
  }
} 

private void CopyLocalOutputsValuesToGlobalValues (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1741 "LawT4.tt"

        this.Write("      // Copy local outputs values to global values\n");

        #line default
        #line hidden
        
        
        #line 1742 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1746 "LawT4.tt"

        this.Write("      var_");

        #line default
        #line hidden
        
        
        #line 1746 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1746 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1746 "LawT4.tt"

        this.Write(" = ");

        #line default
        #line hidden
        
        
        #line 1746 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1746 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1747 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1750 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1750 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1750 "LawT4.tt"

        this.Write(".size(); ++i) {\n        var_");

        #line default
        #line hidden
        
        
        #line 1751 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1751 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1751 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1751 "LawT4.tt"

        this.Write(" = ");

        #line default
        #line hidden
        
        
        #line 1751 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1751 "LawT4.tt"

        this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1753 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1756 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1756 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1756 "LawT4.tt"

        this.Write(".size(); ++i) {\n        var_");

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"

        this.Write("[i] = ");

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"

        this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1759 "LawT4.tt"
 
    break;
    }
  }
} 

private void CopyLocalOnnxOutputsDerivativesToGlobalDerivatives (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"

        this.Write("      // Copy local outputs derivatives from onnx to global derivatives\n");

        #line default
        #line hidden
        
        
        #line 1768 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1775 "LawT4.tt"

        this.Write("      var_deriv_");

        #line default
        #line hidden
        
        
        #line 1775 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1775 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1775 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1775 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1775 "LawT4.tt"

        this.Write("] = onnx_output_buffer[out_index++];\n");

        #line default
        #line hidden
        
        
        #line 1776 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1779 "LawT4.tt"

        this.Write(".size(); ++i) {\n        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1780 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1780 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1780 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1780 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1780 "LawT4.tt"

        this.Write("+i] = onnx_output_buffer[out_index++];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1782 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1788 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1788 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1788 "LawT4.tt"

        this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 1789 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1793 "LawT4.tt"

        this.Write("        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1793 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1793 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1793 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1793 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1793 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1793 "LawT4.tt"

        this.Write("] = onnx_output_buffer[out_index++];\n");

        #line default
        #line hidden
        
        
        #line 1794 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1797 "LawT4.tt"

        this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1797 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1797 "LawT4.tt"

        this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1798 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1798 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1798 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1798 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1798 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1798 "LawT4.tt"

        this.Write("+j] = onnx_output_buffer[out_index++];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1800 "LawT4.tt"

      break;
      }
    } 
        #line default
        #line hidden
        
        
        #line 1804 "LawT4.tt"

        this.Write("      } \n");

        #line default
        #line hidden
        
        
        #line 1805 "LawT4.tt"

    break;
    }
  }
} 

private void CopyLocalOutputsDerivativesToGlobalDerivatives (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1813 "LawT4.tt"

        this.Write("      // Copy local outputs derivatives to global derivatives\n");

        #line default
        #line hidden
        
        
        #line 1814 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1821 "LawT4.tt"

        this.Write("      var_deriv_");

        #line default
        #line hidden
        
        
        #line 1821 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1821 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1821 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1821 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1821 "LawT4.tt"

        this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1821 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1821 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1821 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1821 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1822 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1825 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1825 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1825 "LawT4.tt"

        this.Write(".size(); ++i) {\n        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1826 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1826 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1826 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1826 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1826 "LawT4.tt"

        this.Write("+i] = ");

        #line default
        #line hidden
        
        
        #line 1826 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1826 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1826 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1826 "LawT4.tt"

        this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1828 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1831 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1831 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1831 "LawT4.tt"

        this.Write(".size(); ++i) {\n        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1832 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1832 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1832 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1832 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1832 "LawT4.tt"

        this.Write("+i] = ");

        #line default
        #line hidden
        
        
        #line 1832 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1832 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1832 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1832 "LawT4.tt"

        this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1834 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1840 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1840 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1840 "LawT4.tt"

        this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 1841 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1845 "LawT4.tt"

        this.Write("        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1845 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1845 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1845 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1845 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1845 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1845 "LawT4.tt"

        this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1845 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1845 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1845 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1845 "LawT4.tt"

        this.Write("[i];\n");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1849 "LawT4.tt"

        this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1849 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1849 "LawT4.tt"

        this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1850 "LawT4.tt"

        this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1852 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1855 "LawT4.tt"

        this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1855 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1855 "LawT4.tt"

        this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1856 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1856 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1856 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1856 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1856 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1856 "LawT4.tt"

        this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1856 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1856 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1856 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1856 "LawT4.tt"

        this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1858 "LawT4.tt"

      break;
      } 
    } 
        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1863 "LawT4.tt"

    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1866 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1866 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1866 "LawT4.tt"

        this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 1867 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1871 "LawT4.tt"

        this.Write("        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1871 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1871 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1871 "LawT4.tt"

        this.Write("[i][ofs_");

        #line default
        #line hidden
        
        
        #line 1871 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1871 "LawT4.tt"

        this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1871 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1871 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1871 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1871 "LawT4.tt"

        this.Write("[i];\n");

        #line default
        #line hidden
        
        
        #line 1872 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1875 "LawT4.tt"

        this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1875 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1875 "LawT4.tt"

        this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1876 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1876 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1876 "LawT4.tt"

        this.Write("[i][ofs_");

        #line default
        #line hidden
        
        
        #line 1876 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1876 "LawT4.tt"

        this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1876 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1876 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1876 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1876 "LawT4.tt"

        this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1878 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1881 "LawT4.tt"

        this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1881 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1881 "LawT4.tt"

        this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"

        this.Write("[i][ofs_");

        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"

        this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"

        this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1884 "LawT4.tt"

      break;
      }
    } 
        #line default
        #line hidden
        
        
        #line 1888 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1889 "LawT4.tt"

    break;
    }
  }
} 
private void AllocateLocalDataFiniteDiff ()
{ 
        #line default
        #line hidden
        
        
        #line 1896 "LawT4.tt"

        this.Write("    // Allocate local outputs values to compute difference finite derivatives\n");

        #line default
        #line hidden
        
        
        #line 1897 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1901 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1901 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1901 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1901 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1901 "LawT4.tt"

        this.Write("_ref;\n");

        #line default
        #line hidden
        
        
        #line 1902 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1906 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1906 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1906 "LawT4.tt"

        this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1906 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1906 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1906 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1906 "LawT4.tt"

        this.Write("_diff;\n");

        #line default
        #line hidden
        
        
        #line 1907 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1910 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1910 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1910 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1910 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1910 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1910 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1910 "LawT4.tt"

        this.Write("_diff(m_signature.");

        #line default
        #line hidden
        
        
        #line 1910 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1910 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1911 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1917 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1917 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1917 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1917 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1917 "LawT4.tt"

        this.Write("_ref(m_signature.");

        #line default
        #line hidden
        
        
        #line 1917 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1917 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1918 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"

        this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"

        this.Write("_diff(m_signature.");

        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1923 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"

        this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"

        this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"

        this.Write("_diff(m_signature.");

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"

        this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"

        this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1927 "LawT4.tt"

      break;
      }
    }
    break;
    }
  }
}
private void CopyGlobalValuesOutputToLocalValues (string op, bool vectorial_no_op = false)
{ 
        #line default
        #line hidden
        
        
        #line 1937 "LawT4.tt"

        this.Write("      // Copy global inputs values to local values\n");

        #line default
        #line hidden
        
        
        #line 1938 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1942 "LawT4.tt"

        this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1942 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1942 "LawT4.tt"

        this.Write("_ref = var_");

        #line default
        #line hidden
        
        
        #line 1942 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1942 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1942 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1943 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1946 "LawT4.tt"

        this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1946 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1946 "LawT4.tt"

        this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1947 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1947 "LawT4.tt"

        this.Write("_ref[i] = var_");

        #line default
        #line hidden
        
        
        #line 1947 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1947 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1947 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1947 "LawT4.tt"

        this.Write(";\n      }\n");

        #line default
        #line hidden
        
        
        #line 1949 "LawT4.tt"
 
    break;
    }
  }
}
private void ComputeDifferenceFiniteDerivatives ()
{
  foreach(var i in Inputs) { 
        #line default
        #line hidden
        
        
        #line 1957 "LawT4.tt"

        this.Write("      // compute difference finite derivatives through ");

        #line default
        #line hidden
        
        
        #line 1957 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1957 "LawT4.tt"

        this.Write("\n");

        #line default
        #line hidden
        
        
        #line 1958 "LawT4.tt"
 
    switch(i.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1961 "LawT4.tt"

        this.Write("      {\n        ");

        #line default
        #line hidden
        
        
        #line 1962 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1962 "LawT4.tt"

        this.Write(" += m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1962 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1962 "LawT4.tt"

        this.Write(";\n        // Invoke user kernel\n        m_invoker(\n          ");

        #line default
        #line hidden
        
        
        #line 1965 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));

        #line default
        #line hidden
        
        
        #line 1965 "LawT4.tt"

        this.Write("\n        );\n        ");

        #line default
        #line hidden
        
        
        #line 1967 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1967 "LawT4.tt"

        this.Write(" -= m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1967 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1967 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1968 "LawT4.tt"
 
    foreach(var o in Outputs) {
      switch(o.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"

        this.Write("        ");

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"

        this.Write("_diff = (");

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"

        this.Write(" - ");

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"

        this.Write("_ref) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1973 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1976 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1976 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1976 "LawT4.tt"

        this.Write(".size(); ++i)\n          ");

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"

        this.Write("_diff[i] = (");

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"

        this.Write("[i] - ");

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"

        this.Write("_ref[i]) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1978 "LawT4.tt"

      break;
      }
    } 
        #line default
        #line hidden
        
        
        #line 1982 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1983 "LawT4.tt"

    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1986 "LawT4.tt"

        this.Write("      for(int i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1986 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1986 "LawT4.tt"

        this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1987 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1987 "LawT4.tt"

        this.Write("[i] += m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1987 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1987 "LawT4.tt"

        this.Write(";\n        // Invoke user kernel\n        m_invoker(\n          ");

        #line default
        #line hidden
        
        
        #line 1990 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));

        #line default
        #line hidden
        
        
        #line 1990 "LawT4.tt"

        this.Write("\n        );\n        ");

        #line default
        #line hidden
        
        
        #line 1992 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1992 "LawT4.tt"

        this.Write("[i] -= m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1992 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1992 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1993 "LawT4.tt"

    foreach(var o in Outputs) {
      switch(o.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"

        this.Write("        ");

        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"

        this.Write("_diff[i] = (");

        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"

        this.Write(" - ");

        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"

        this.Write("_ref) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1998 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2001 "LawT4.tt"

        this.Write("        for(int j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 2001 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2001 "LawT4.tt"

        this.Write(".size(); ++j)\n          ");

        #line default
        #line hidden
        
        
        #line 2002 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2002 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2002 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2002 "LawT4.tt"

        this.Write("_diff[j][i] = (");

        #line default
        #line hidden
        
        
        #line 2002 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2002 "LawT4.tt"

        this.Write("[j] - ");

        #line default
        #line hidden
        
        
        #line 2002 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2002 "LawT4.tt"

        this.Write("_ref[j]) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 2002 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2002 "LawT4.tt"

        this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 2003 "LawT4.tt"

      break;
      }
    } 
        #line default
        #line hidden
        
        
        #line 2007 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 2008 "LawT4.tt"
           
    break;
    } 
  }
}
private void CopyLocalOutputsDerivativesDiffToGlobalDerivatives (string op)
{ 
        #line default
        #line hidden
        
        
        #line 2015 "LawT4.tt"

        this.Write("      // Overwrite global derivatives by difference finite ones\n      {\n");

        #line default
        #line hidden
        
        
        #line 2017 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 2024 "LawT4.tt"

        this.Write("        var_deriv_");

        #line default
        #line hidden
        
        
        #line 2024 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2024 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2024 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2024 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2024 "LawT4.tt"

        this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 2024 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2024 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2024 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2024 "LawT4.tt"

        this.Write("_diff;\n");

        #line default
        #line hidden
        
        
        #line 2025 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2028 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 2028 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2028 "LawT4.tt"

        this.Write(".size(); ++i)\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 2029 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2029 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2029 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2029 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2029 "LawT4.tt"

        this.Write("+i] = ");

        #line default
        #line hidden
        
        
        #line 2029 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2029 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2029 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2029 "LawT4.tt"

        this.Write("_diff[i];\n");

        #line default
        #line hidden
        
        
        #line 2030 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2036 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 2036 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2036 "LawT4.tt"

        this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 2037 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 2041 "LawT4.tt"

        this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 2041 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2041 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 2041 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2041 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2041 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2041 "LawT4.tt"

        this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 2041 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2041 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2041 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2041 "LawT4.tt"

        this.Write("_diff[i];\n");

        #line default
        #line hidden
        
        
        #line 2042 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2045 "LawT4.tt"

        this.Write("          for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 2045 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2045 "LawT4.tt"

        this.Write(".size(); ++j)\n            var_deriv_");

        #line default
        #line hidden
        
        
        #line 2046 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2046 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 2046 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2046 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2046 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2046 "LawT4.tt"

        this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 2046 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2046 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2046 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2046 "LawT4.tt"

        this.Write("_diff[i][j];\n");

        #line default
        #line hidden
        
        
        #line 2047 "LawT4.tt"

      break;
      } 
    } 
        #line default
        #line hidden
        
        
        #line 2051 "LawT4.tt"

        this.Write("        }\n");

        #line default
        #line hidden
        
        
        #line 2052 "LawT4.tt"

    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 2056 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 2057 "LawT4.tt"

}
private void PrintDebugValuesInfos (string op)
{ 
        #line default
        #line hidden
        
        
        #line 2061 "LawT4.tt"

        this.Write("      // Print debug values\n      {\n");

        #line default
        #line hidden
        
        
        #line 2063 "LawT4.tt"

  foreach(var o in InOutputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 2067 "LawT4.tt"

        this.Write("        _print_value(\"");

        #line default
        #line hidden
        
        
        #line 2067 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2067 "LawT4.tt"

        this.Write("\", var_");

        #line default
        #line hidden
        
        
        #line 2067 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2067 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2067 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 2068 "LawT4.tt"

    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2071 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 2071 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2071 "LawT4.tt"

        this.Write(".size(); ++i)\n          _print_value(Arcane::String::format(\"");

        #line default
        #line hidden
        
        
        #line 2072 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2072 "LawT4.tt"

        this.Write("[{0}]\",i), var_");

        #line default
        #line hidden
        
        
        #line 2072 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2072 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 2072 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2072 "LawT4.tt"

        this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 2073 "LawT4.tt"

    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 2077 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 2078 "LawT4.tt"
    
}
private void PrintDebugDerivativesInfos (string op)
{ 
        #line default
        #line hidden
        
        
        #line 2082 "LawT4.tt"

        this.Write("      // Print derivatives debug informations\n      {\n");

        #line default
        #line hidden
        
        
        #line 2084 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write("        _print_derivatives(\"d");

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write("_d");

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write("\", var_deriv_");

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write("], ");

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2091 "LawT4.tt"

        this.Write("_diff);\n");

        #line default
        #line hidden
        
        
        #line 2092 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2095 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 2095 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2095 "LawT4.tt"

        this.Write(".size(); ++i)\n          _print_derivatives(Arcane::String::format(\"d");

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write("_d");

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write("[{0}]\",i), var_deriv_");

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write("+i], ");

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2096 "LawT4.tt"

        this.Write("_diff[i]);\n");

        #line default
        #line hidden
        
        
        #line 2097 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2103 "LawT4.tt"

        this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 2103 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2103 "LawT4.tt"

        this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 2104 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write("          _print_derivatives(Arcane::String::format(\"d");

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write("[{0}]_d");

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write("\",i), var_deriv_");

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write("], ");

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2108 "LawT4.tt"

        this.Write("_diff[i]);\n");

        #line default
        #line hidden
        
        
        #line 2109 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2112 "LawT4.tt"

        this.Write("          for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 2112 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2112 "LawT4.tt"

        this.Write(".size(); ++j)\n            _print_derivatives(Arcane::String::format(\"d");

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write("[{0}]_d");

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write("[{1}]\",i,j), var_deriv_");

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write("+j], ");

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2113 "LawT4.tt"

        this.Write("_diff[i][j]);\n");

        #line default
        #line hidden
        
        
        #line 2114 "LawT4.tt"

      break;
      } 
    } 
        #line default
        #line hidden
        
        
        #line 2118 "LawT4.tt"

        this.Write("        }\n");

        #line default
        #line hidden
        
        
        #line 2119 "LawT4.tt"

    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 2123 "LawT4.tt"

        this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 2124 "LawT4.tt"
    
}

        #line default
        #line hidden
        
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 3 "LawT4.tt"
            this.Write(@"// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool. 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

#ifndef ARCGEOSIM_GENERATED_");
            
            #line default
            #line hidden
            
            #line 13 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name.ToUpper() ));
            
            #line default
            #line hidden
            
            #line 13 "LawT4.tt"
            this.Write("_LAW_H\n#define ARCGEOSIM_GENERATED_");
            
            #line default
            #line hidden
            
            #line 14 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name.ToUpper() ));
            
            #line default
            #line hidden
            
            #line 14 "LawT4.tt"
            this.Write("_LAW_H\n\n/*-----------------------------------------------------------------------" +
                    "----*/\n/*-----------------------------------------------------------------------" +
                    "----*/\n\n");
            
            #line default
            #line hidden
            
            #line 19 "LawT4.tt"
 if(MultiThread == MultiThreadMode.ArcaneTBB){ 
            
            #line default
            #line hidden
            
            #line 20 "LawT4.tt"
            this.Write("#include <arcane/Concurrency.h>\n#include <arcane/utils/PlatformUtils.h>\n");
            
            #line default
            #line hidden
            
            #line 22 "LawT4.tt"
 }
   if(MultiThread == MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 24 "LawT4.tt"
            this.Write("#include <Kokkos_Core.hpp>\n");
            
            #line default
            #line hidden
            
            #line 25 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 26 "LawT4.tt"
            this.Write("#include \"ArcGeoSim/Physics/Law2/IFunction.h\"\n");
            
            #line default
            #line hidden
            
            #line 27 "LawT4.tt"
 if(Debug) { 
            
            #line default
            #line hidden
            
            #line 28 "LawT4.tt"
            this.Write("#include <arcane/utils/ITraceMng.h>\n");
            
            #line default
            #line hidden
            
            #line 29 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 30 "LawT4.tt"
 if(Inference == InferenceMode.ONNX){ 
            
            #line default
            #line hidden
            
            #line 31 "LawT4.tt"
            this.Write("#include <onnxruntime/core/session/onnxruntime_cxx_api.h>\n#include <algorithm>\n");
            
            #line default
            #line hidden
            
            #line 33 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 34 "LawT4.tt"
            this.Write("/*---------------------------------------------------------------------------*/\n/" +
                    "*---------------------------------------------------------------------------*/\n\n" +
                    "namespace ");
            
            #line default
            #line hidden
            
            #line 37 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 37 "LawT4.tt"
            this.Write(@" {

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

struct SignatureDescription
{
  struct ArgDescription {
    Arcane::String name;
    Arcane::String type;
    Arcane::String dim;
  };
  Arcane::UniqueArray<ArgDescription> inputs;
  Arcane::UniqueArray<ArgDescription> outputs;
  Arcane::UniqueArray<ArgDescription> parameters;
  SignatureDescription()
  {
");
            
            #line default
            #line hidden
            
            #line 54 "LawT4.tt"
 foreach(var p in Inputs) { 
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("    inputs.add({\"");
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.type ));
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.dim ));
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("\"});\n");
            
            #line default
            #line hidden
            
            #line 56 "LawT4.tt"
 } 
   foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("    outputs.add({\"");
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.type ));
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.dim ));
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("\"});\n");
            
            #line default
            #line hidden
            
            #line 59 "LawT4.tt"
 } 
   foreach(var p in Parameters) { 
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("    parameters.add({\"");
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.type ));
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.dim ));
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("\"});\n");
            
            #line default
            #line hidden
            
            #line 62 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 63 "LawT4.tt"
            this.Write("  }\n};\n\n/*-----------------------------------------------------------------------" +
                    "----*/\n/*-----------------------------------------------------------------------" +
                    "----*/\n\nstruct Signature\n{\n");
            
            #line default
            #line hidden
            
            #line 71 "LawT4.tt"
 foreach(var p in AllProperties) { 
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write("  ");
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.Type ));
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 73 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 74 "LawT4.tt"
            this.Write("  \n};\n\n/*------------------------------------------------------------------------" +
                    "---*/\n/*------------------------------------------------------------------------" +
                    "---*/\n\nclass Function\n  : public Law::IFunction\n{\npublic:\n");
            
            #line default
            #line hidden
            
            #line 84 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 85 "LawT4.tt"
            this.Write("  Function(const Signature& s, std::string& model_with_path)\n    : m_signature(s)" +
                    "\n    , m_environment(OrtLoggingLevel::ORT_LOGGING_LEVEL_WARNING)\n  {\n    _ckeck_" +
                    "signature();\n    _init_onnx_session(model_with_path);\n    _check_onnx_conformity" +
                    "();\n  }\n");
            
            #line default
            #line hidden
            
            #line 93 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 94 "LawT4.tt"
            this.Write("  template<typename UserAlgo, typename Method>\n  Function(const Signature& s,\n   " +
                    "        UserAlgo& kernel,\n           Method method)\n    : m_signature(s)\n  {\n   " +
                    " _ckeck_signature();\n    \n    typedef void (UserAlgo::*requiredSignature)(\n     " +
                    " ");
            
            #line default
            #line hidden
            
            #line 103 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Signature ));
            
            #line default
            #line hidden
            
            #line 103 "LawT4.tt"
            this.Write("\n    );\n\n    typedef void (UserAlgo::*requiredConstSignature)(\n      ");
            
            #line default
            #line hidden
            
            #line 107 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Signature ));
            
            #line default
            #line hidden
            
            #line 107 "LawT4.tt"
            this.Write("\n    ) const;\n\n    static_assert(\n        std::is_same<Method,requiredSignature>:" +
                    ":value ||\n        std::is_same<Method,requiredConstSignature>::value,\n        \"R" +
                    "equired signature and method given mismatch !!\");\n\n    m_invoker = [&,method](\n " +
                    "     ");
            
            #line default
            #line hidden
            
            #line 116 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( CallSignature ));
            
            #line default
            #line hidden
            
            #line 116 "LawT4.tt"
            this.Write("\n    ) { (kernel.*method)(");
            
            #line default
            #line hidden
            
            #line 117 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( ArgSignature ));
            
            #line default
            #line hidden
            
            #line 117 "LawT4.tt"
            this.Write("); };\n  }\n");
            
            #line default
            #line hidden
            
            #line 119 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 120 "LawT4.tt"
            this.Write("\n  ~Function() {}\n\npublic:\n\n  Arcane::Integer id() const { return out()[0].id(); " +
                    "}\n  \n  Arcane::String name() const { return \"");
            
            #line default
            #line hidden
            
            #line 127 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 127 "LawT4.tt"
            this.Write("\"; }\n\n  Law::PropertyVector in() const\n  {\n    Law::PropertyVector v;\n");
            
            #line default
            #line hidden
            
            #line 132 "LawT4.tt"
 foreach(var p in Inputs) { 
            
            #line default
            #line hidden
            
            #line 133 "LawT4.tt"
            this.Write("    v << m_signature.");
            
            #line default
            #line hidden
            
            #line 133 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 133 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 134 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 135 "LawT4.tt"
            this.Write("    return v;\n  }\n\n  Law::PropertyVector out() const\n  {\n    Law::PropertyVector " +
                    "v;\n");
            
            #line default
            #line hidden
            
            #line 141 "LawT4.tt"
 foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 142 "LawT4.tt"
            this.Write("    v << m_signature.");
            
            #line default
            #line hidden
            
            #line 142 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 142 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 143 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 144 "LawT4.tt"
            this.Write("    return v;\n  }\n\n  Law::PropertyVector parameters() const\n  {\n    Law::Property" +
                    "Vector v;\n");
            
            #line default
            #line hidden
            
            #line 150 "LawT4.tt"
 foreach(var p in Parameters) { 
            
            #line default
            #line hidden
            
            #line 151 "LawT4.tt"
            this.Write("    v << m_signature.");
            
            #line default
            #line hidden
            
            #line 151 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 151 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 152 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 153 "LawT4.tt"
            this.Write("    return v;\n  }\n\n");
            
            #line default
            #line hidden
            
            #line 156 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 157 "LawT4.tt"
            this.Write("  bool isDifferentiable() const { return m_is_differentiable; }\n");
            
            #line default
            #line hidden
            
            #line 158 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 159 "LawT4.tt"
            this.Write("  bool isDifferentiable() const { return true; }\n");
            
            #line default
            #line hidden
            
            #line 160 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 161 "LawT4.tt"
            this.Write("  bool isParameter() const { return false; }\n\n  const Signature& signature() { re" +
                    "turn m_signature; }\n  \nprivate:\n\n");
            
            #line default
            #line hidden
            
            #line 167 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 168 "LawT4.tt"
            this.Write(@"  // onnxruntime setup environment and session
  void _init_onnx_session(std::string& model_with_path)
  {
    Ort::SessionOptions session_options;
    session_options.SetIntraOpNumThreads(1);
    session_options.SetGraphOptimizationLevel(GraphOptimizationLevel::ORT_ENABLE_EXTENDED);
    m_session = std::make_unique<Ort::Session>(m_environment, model_with_path.c_str(), session_options);
    Ort::TypeInfo type_info = m_session->GetOutputTypeInfo(0);
    auto tensor_info = type_info.GetTensorTypeAndShapeInfo();
    m_is_differentiable = (tensor_info.GetShape()[2] != _get_nb_output_properties());
  }
  
  void _check_onnx_conformity()
  {
    _check_onnx_input_tensor_shape_and_type();
    _check_onnx_output_tensor_shape_and_type();
  }

  void _check_onnx_input_tensor_shape_and_type()
  {
    // number of inputs
    if(m_session->GetInputCount()!=1)
      throw Arcane::FatalErrorException(""");
            
            #line default
            #line hidden
            
            #line 190 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 190 "LawT4.tt"
            this.Write(@" onnx input size must be 1"");
    Ort::TypeInfo type_info = m_session->GetInputTypeInfo(0);
    auto tensor_info = type_info.GetTensorTypeAndShapeInfo();
    
    // tensor 3 axis
    if(tensor_info.GetDimensionsCount()!=3)
      throw Arcane::FatalErrorException(""");
            
            #line default
            #line hidden
            
            #line 196 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 196 "LawT4.tt"
            this.Write(@" onnx dimension must be 3"");
    
    // -1 on axis 1: batch size variable, number of output properties on axis 3
    int nb_law_input_prop = _get_nb_input_properties();
    if(tensor_info.GetShape() != std::vector<int64_t>{ -1, 1, nb_law_input_prop } )
      throw Arcane::FatalErrorException(Arcane::String::format(""");
            
            #line default
            #line hidden
            
            #line 201 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 201 "LawT4.tt"
            this.Write(" onnx shape must be {-1, 1, {0}}\", nb_law_input_prop));\n  }\n  \n  void _check_onnx" +
                    "_output_tensor_shape_and_type()\n  {\n    // number of outputs\n    if(m_session->G" +
                    "etOutputCount()!=1)\n      throw Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 208 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 208 "LawT4.tt"
            this.Write(@" onnx output size must be 1"");
    
    Ort::TypeInfo type_info = m_session->GetOutputTypeInfo(0);
    auto tensor_info = type_info.GetTensorTypeAndShapeInfo();
    
    // tensor 3 axis
    if(tensor_info.GetDimensionsCount()!=3)
      throw Arcane::FatalErrorException(""");
            
            #line default
            #line hidden
            
            #line 215 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 215 "LawT4.tt"
            this.Write(@" onnx dimension must be 3"");
      
    
    // -1 on axis 1: batch size variable, number of output properties on axis 3
    int nb_law_output_prop = _get_nb_output_properties();
    int nb_law_output_prop_with_deriv = (_get_nb_input_properties()+1)*nb_law_output_prop;
    if(tensor_info.GetShape() != std::vector<int64_t>{ -1, 1, nb_law_output_prop } 
       && tensor_info.GetShape() != std::vector<int64_t>{ -1, 1, nb_law_output_prop_with_deriv } )
      throw Arcane::FatalErrorException(Arcane::String::format(
      """);
            
            #line default
            #line hidden
            
            #line 224 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 224 "LawT4.tt"
            this.Write(" onnx shape must be {-1, 1, {0} or {1}} with or without derivatives\", nb_law_outp" +
                    "ut_prop_with_deriv, nb_law_output_prop));\n  }\n  \n");
            
            #line default
            #line hidden
            
            #line 227 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 228 "LawT4.tt"
            this.Write("  void _ckeck_signature()\n  {\n    Law::PropertyVector v;\n");
            
            #line default
            #line hidden
            
            #line 231 "LawT4.tt"
 foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 232 "LawT4.tt"
   if(p.dim == PropertyDim.multiscalar) { 
            
            #line default
            #line hidden
            
            #line 233 "LawT4.tt"
            this.Write("    for(auto i = 0; i < m_signature.");
            
            #line default
            #line hidden
            
            #line 233 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 233 "LawT4.tt"
            this.Write(".size(); ++i)\n      _check_prop_uniq(v, m_signature.");
            
            #line default
            #line hidden
            
            #line 234 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 234 "LawT4.tt"
            this.Write("[i], \"");
            
            #line default
            #line hidden
            
            #line 234 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 234 "LawT4.tt"
            this.Write("[\"+std::to_string(i)+\"]\");\n");
            
            #line default
            #line hidden
            
            #line 235 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 236 "LawT4.tt"
            this.Write("    _check_prop_uniq(v, m_signature.");
            
            #line default
            #line hidden
            
            #line 236 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 236 "LawT4.tt"
            this.Write(", \"");
            
            #line default
            #line hidden
            
            #line 236 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 236 "LawT4.tt"
            this.Write("\");\n");
            
            #line default
            #line hidden
            
            #line 237 "LawT4.tt"
   } 
            
            #line default
            #line hidden
            
            #line 238 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 239 "LawT4.tt"
            this.Write(@"  }
  
  void _check_prop_uniq(Law::PropertyVector& v, const Law::Property& p, const std::string& p_name)
  {
    if(v.contains(p)) _error_signature(p_name);
    v << p;
  }
  
  void _error_signature(const std::string& prop_name)
  {
    throw Arcane::FatalErrorException(
       """);
            
            #line default
            #line hidden
            
            #line 250 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 250 "LawT4.tt"
            this.Write(@"::Signature property uniqueness error, check "" + prop_name + "" property signature assignment""
    );
  }

public:

  void evaluate(const Law::VariableAccessor& accessor,
                const Arcane::ItemGroup& group,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    _evaluate(mode, static_size, accessor, group);
  }

  void evaluate(const Law::PartialVariableAccessor& accessor,
                const Arcane::ItemGroup& group,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    _evaluate(mode, static_size, accessor, group);
  }

  void evaluate(const Law::ArrayAccessor& accessor,
                const Arcane::Integer& begin,
                const Arcane::Integer& end,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    _evaluate(mode, static_size, accessor, begin, end);
  }

  void evaluate(const Law::ScalarAccessor& accessor,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    _evaluate(mode, static_size, accessor);
  }

private:

");
            
            #line default
            #line hidden
            
            #line 290 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 291 "LawT4.tt"
            this.Write("\n  int _get_nb_output_properties() const {\n    int nb_law_output_prop = 0;\n");
            
            #line default
            #line hidden
            
            #line 294 "LawT4.tt"
 foreach(var p in Outputs) {
   switch(p.dim) {
    case PropertyDim.scalar : 
            
            #line default
            #line hidden
            
            #line 297 "LawT4.tt"
            this.Write("    nb_law_output_prop++;\n");
            
            #line default
            #line hidden
            
            #line 298 "LawT4.tt"
  break; 
    case PropertyDim.multiscalar : 
            
            #line default
            #line hidden
            
            #line 300 "LawT4.tt"
            this.Write("    nb_law_output_prop+=m_signature.");
            
            #line default
            #line hidden
            
            #line 300 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 300 "LawT4.tt"
            this.Write(".size();\n");
            
            #line default
            #line hidden
            
            #line 301 "LawT4.tt"
  break;
    }
   } 
            
            #line default
            #line hidden
            
            #line 304 "LawT4.tt"
            this.Write("    return nb_law_output_prop;\n  }\n  int _get_nb_input_properties() const {\n    i" +
                    "nt nb_law_input_prop = 0;\n");
            
            #line default
            #line hidden
            
            #line 308 "LawT4.tt"
 foreach(var p in Inputs) {
   switch(p.dim) {
    case PropertyDim.scalar : 
            
            #line default
            #line hidden
            
            #line 311 "LawT4.tt"
            this.Write("    nb_law_input_prop++;\n");
            
            #line default
            #line hidden
            
            #line 312 "LawT4.tt"
  break; 
    case PropertyDim.multiscalar : 
            
            #line default
            #line hidden
            
            #line 314 "LawT4.tt"
            this.Write("    nb_law_input_prop+=m_signature.");
            
            #line default
            #line hidden
            
            #line 314 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 314 "LawT4.tt"
            this.Write(".size();\n");
            
            #line default
            #line hidden
            
            #line 315 "LawT4.tt"
  break;
    }
   } 
            
            #line default
            #line hidden
            
            #line 318 "LawT4.tt"
            this.Write("    return nb_law_input_prop;\n  }\n  \n  template<typename InferenceOutT, typename " +
                    "InferenceInT>\n  void _computeOnnxInference(std::vector<InferenceInT>& onnx_input" +
                    "_buffer, \n                             std::vector<InferenceOutT>& onnx_output_b" +
                    "uffer, \n                             const int batch_size) const\n  {\n\t// input o" +
                    "utput dims + batch size all group\n    Ort::TypeInfo input_type_info = m_session-" +
                    ">GetInputTypeInfo(0);\n    auto input_tensor_info = input_type_info.GetTensorType" +
                    "AndShapeInfo();\n    std::vector<int64_t> input_dims = input_tensor_info.GetShape" +
                    "();\n    input_dims[0] = batch_size;\n\t\n    // output dims + batch size all group\n" +
                    "    Ort::TypeInfo output_type_info = m_session->GetOutputTypeInfo(0);\n    auto o" +
                    "utput_tensor_info = output_type_info.GetTensorTypeAndShapeInfo();\n    std::vecto" +
                    "r<int64_t> output_dims = output_tensor_info.GetShape();\n    output_dims[0] = bat" +
                    "ch_size;\n\t\n\t// tensors creation\n    std::vector<Ort::Value> input_tensors;\n    s" +
                    "td::vector<Ort::Value> output_tensors;\n\n    Ort::MemoryInfo memory_info = Ort::M" +
                    "emoryInfo::CreateCpu( \n                                  OrtAllocatorType::OrtAr" +
                    "enaAllocator, \n                                  OrtMemType::OrtMemTypeDefault);" +
                    "   \n               \n    input_tensors.push_back(Ort::Value::CreateTensor<Inferen" +
                    "ceInT>(memory_info, \n                              onnx_input_buffer.data(), onn" +
                    "x_input_buffer.size(),\n                              input_dims.data(), input_di" +
                    "ms.size()));      \n    \n    output_tensors.push_back(Ort::Value::CreateTensor<In" +
                    "ferenceOutT>(memory_info,\n                              onnx_output_buffer.data(" +
                    "), onnx_output_buffer.size(), \n                              output_dims.data()," +
                    " output_dims.size()));\n            \n    // serving names\n    std::string input_n" +
                    "ame = m_session->GetInputNameAllocated(0, Ort::AllocatorWithDefaultOptions()).ge" +
                    "t();\n    std::vector<const char*>  input_names{input_name.c_str()};\n    std::str" +
                    "ing output_name = m_session->GetOutputNameAllocated(0, Ort::AllocatorWithDefault" +
                    "Options()).get();\n    std::vector<const char*> output_names{output_name.c_str()}" +
                    ";\n    \n    // model inference\n    m_session->Run(Ort::RunOptions{nullptr}, \n\t   " +
                    "            input_names.data(), input_tensors.data(), 1, \n\t               output" +
                    "_names.data(),output_tensors.data(), 1);\n  }\n\n  template<typename InferenceOutT," +
                    " typename InferenceInT>\n  void _evaluateOnlyValues(const Law::VariableAccessor& " +
                    "accessor,\n                           const Arcane::ItemGroup& group) const\n  {\n\n" +
                    "");
            
            #line default
            #line hidden
            
            #line 371 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 372 "LawT4.tt"
            this.Write("  \n    // change to constructor for less memory create\n    const int group_size =" +
                    " group.size();\n");
            
            #line default
            #line hidden
            
            #line 375 "LawT4.tt"
 AllocateOnnxLocalData ("*group_size"); 
            
            #line default
            #line hidden
            
            #line 376 "LawT4.tt"
            this.Write("    \n    // copy + cast\n    int in_index = 0;\n    ENUMERATE_ITEM(iitem, group)\n  " +
                    "  {\n");
            
            #line default
            #line hidden
            
            #line 381 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 382 "LawT4.tt"
            this.Write("    } \n    _computeOnnxInference<InferenceOutT, InferenceInT>(onnx_input_buffer, " +
                    "onnx_output_buffer, group_size);\n                    \n    // copy onnx results i" +
                    "nto law data             \n    int out_index = 0;\n    ENUMERATE_ITEM(iitem, group" +
                    ") \n    {\n");
            
            #line default
            #line hidden
            
            #line 389 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 390 "LawT4.tt"
            this.Write(@"      out_index += nb_law_derivatives;
    }                    
  }

  template<typename InferenceOutT, typename InferenceInT>
  void _evaluateOnlyValues(const Law::PartialVariableAccessor& accessor,
                           const Arcane::ItemGroup& group) const
  {
  
");
            
            #line default
            #line hidden
            
            #line 399 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 400 "LawT4.tt"
            this.Write("\n    // change to constructor for less memory create\n    const int group_size = g" +
                    "roup.size();\n");
            
            #line default
            #line hidden
            
            #line 403 "LawT4.tt"
 AllocateOnnxLocalData ("*group_size"); 
            
            #line default
            #line hidden
            
            #line 404 "LawT4.tt"
            this.Write("    \n    // copy + cast\n    int in_index = 0;\n    ENUMERATE_ITEM(iitem, group)\n  " +
                    "  {\n");
            
            #line default
            #line hidden
            
            #line 409 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 410 "LawT4.tt"
            this.Write("    }\n \n    _computeOnnxInference<InferenceOutT, InferenceInT>(onnx_input_buffer," +
                    " onnx_output_buffer, group_size);\n                    \n    // copy onnx results " +
                    "into law data             \n    int out_index = 0;\n    ENUMERATE_ITEM(iitem, grou" +
                    "p) \n    {\n");
            
            #line default
            #line hidden
            
            #line 418 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 419 "LawT4.tt"
            this.Write(@"      out_index += nb_law_derivatives;
    }

  }
  
  template<typename InferenceOutT, typename InferenceInT>
  void _evaluateOnlyValues(const Law::ArrayAccessor& accessor,
                           const Arcane::Integer& begin,
                           const Arcane::Integer& end) const
  {

");
            
            #line default
            #line hidden
            
            #line 430 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 431 "LawT4.tt"
            this.Write("\n    // change to constructor for less memory create\n    const int vector_size = " +
                    "end - begin;\n");
            
            #line default
            #line hidden
            
            #line 434 "LawT4.tt"
 AllocateOnnxLocalData ("*vector_size"); 
            
            #line default
            #line hidden
            
            #line 435 "LawT4.tt"
            this.Write("  \n    \n    // copy + cast\n    int in_index=0;\n    for(int index = begin; index <" +
                    " end; ++index) {\n");
            
            #line default
            #line hidden
            
            #line 440 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 441 "LawT4.tt"
            this.Write("    }\n    \n    _computeOnnxInference<InferenceOutT, InferenceInT>(onnx_input_buff" +
                    "er, onnx_output_buffer, vector_size);\n    \n    // copy onnx results into law dat" +
                    "a\n    int out_index=0;\n    for(int index = begin; index < end; ++index) {\n");
            
            #line default
            #line hidden
            
            #line 448 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 449 "LawT4.tt"
            this.Write("      out_index += nb_law_derivatives;\n    }\n  }\n  \n  template<typename Inference" +
                    "OutT, typename InferenceInT>\n  void _evaluateOnlyValues(const Law::ScalarAccesso" +
                    "r& accessor) const\n  {\n\n");
            
            #line default
            #line hidden
            
            #line 457 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 458 "LawT4.tt"
            this.Write("\n");
            
            #line default
            #line hidden
            
            #line 459 "LawT4.tt"
 AllocateOnnxLocalData (""); 
            
            #line default
            #line hidden
            
            #line 460 "LawT4.tt"
            this.Write("    \n    // copy + cast\n    int in_index=0;\n");
            
            #line default
            #line hidden
            
            #line 463 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("()"); 
            
            #line default
            #line hidden
            
            #line 464 "LawT4.tt"
            this.Write("    \n    _computeOnnxInference<InferenceOutT, InferenceInT>(onnx_input_buffer, on" +
                    "nx_output_buffer, 1);\n    \n    // copy onnx results into law data\n    int out_in" +
                    "dex=0;\n");
            
            #line default
            #line hidden
            
            #line 469 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues (""); 
            
            #line default
            #line hidden
            
            #line 470 "LawT4.tt"
            this.Write("\n  }\n  \n  template<typename InferenceOutT, typename InferenceInT>\n  void _evaluat" +
                    "e(Arcane::Integer size,\n                 const Law::VariableAccessor& accessor,\n" +
                    "                 const Arcane::ItemGroup& group) const\n  {\n\n");
            
            #line default
            #line hidden
            
            #line 479 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 480 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 481 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 482 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 483 "LawT4.tt"
            this.Write("\n    // change to constructor for less memory create\n    const int group_size = g" +
                    "roup.size();  \n");
            
            #line default
            #line hidden
            
            #line 486 "LawT4.tt"
 AllocateOnnxLocalData ("*group_size"); 
            
            #line default
            #line hidden
            
            #line 487 "LawT4.tt"
            this.Write(" \n    \n    // copy + cast\n    int in_index = 0;\n    ENUMERATE_ITEM(iitem, group)\n" +
                    "    {\n");
            
            #line default
            #line hidden
            
            #line 493 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 494 "LawT4.tt"
            this.Write("    } \n    _computeOnnxInference<InferenceOutT, InferenceInT>(onnx_input_buffer, " +
                    "onnx_output_buffer, group_size);\n                    \n    // copy onnx results i" +
                    "nto law data             \n    int out_index = 0;\n    ENUMERATE_ITEM(iitem, group" +
                    ") \n    {\n");
            
            #line default
            #line hidden
            
            #line 501 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 502 "LawT4.tt"
 CopyLocalOnnxOutputsDerivativesToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 503 "LawT4.tt"
            this.Write("    }                    \n  }\n  \n  template<typename InferenceOutT, typename Infe" +
                    "renceInT>\n  void _evaluate(Arcane::Integer size,\n                 const Law::Par" +
                    "tialVariableAccessor& accessor,\n                 const Arcane::ItemGroup& group)" +
                    " const\n  {\n");
            
            #line default
            #line hidden
            
            #line 511 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 512 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 513 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 514 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 515 "LawT4.tt"
            this.Write("\n    // change to constructor for less memory create\n    const int group_size = g" +
                    "roup.size();  \n");
            
            #line default
            #line hidden
            
            #line 518 "LawT4.tt"
 AllocateOnnxLocalData ("*group_size"); 
            
            #line default
            #line hidden
            
            #line 519 "LawT4.tt"
            this.Write(" \n    \n    // copy + cast\n    int in_index = 0;\n    ENUMERATE_ITEM(iitem, group)\n" +
                    "    {\n");
            
            #line default
            #line hidden
            
            #line 525 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 526 "LawT4.tt"
            this.Write("    } \n    _computeOnnxInference<InferenceOutT, InferenceInT>(onnx_input_buffer, " +
                    "onnx_output_buffer, group_size);\n                    \n    // copy onnx results i" +
                    "nto law data             \n    int out_index = 0;\n    ENUMERATE_ITEM(iitem, group" +
                    ") \n    {\n");
            
            #line default
            #line hidden
            
            #line 533 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 534 "LawT4.tt"
 CopyLocalOnnxOutputsDerivativesToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 535 "LawT4.tt"
            this.Write(@"    }
  }
  
  template<typename InferenceOutT, typename InferenceInT>
  void _evaluate(Arcane::Integer size,
                 const Law::ArrayAccessor& accessor,
                 const Arcane::Integer& begin,
                 const Arcane::Integer& end) const
  {
");
            
            #line default
            #line hidden
            
            #line 544 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 545 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 546 "LawT4.tt"
 ResizeGlobalDerivatives (true); 
            
            #line default
            #line hidden
            
            #line 547 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 548 "LawT4.tt"
            this.Write("   // change to constructor for less memory create\n   const int vector_size = end" +
                    " - begin;\n");
            
            #line default
            #line hidden
            
            #line 550 "LawT4.tt"
 AllocateOnnxLocalData ("*vector_size"); 
            
            #line default
            #line hidden
            
            #line 551 "LawT4.tt"
            this.Write(" \n    \n    // copy + cast\n    int in_index = 0;\n    for(Arcane::Integer index = b" +
                    "egin; index < end; ++index)\n    {\n");
            
            #line default
            #line hidden
            
            #line 557 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 558 "LawT4.tt"
            this.Write(@"    } 
    _computeOnnxInference<InferenceOutT, InferenceInT>(onnx_input_buffer, onnx_output_buffer, vector_size);
                    
    // copy onnx results into law data             
    int out_index = 0;
    for(Arcane::Integer index = begin; index < end; ++index)
    {
");
            
            #line default
            #line hidden
            
            #line 565 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 566 "LawT4.tt"
 CopyLocalOnnxOutputsDerivativesToGlobalDerivatives ("[index]"); 
            
            #line default
            #line hidden
            
            #line 567 "LawT4.tt"
            this.Write("    }\n  }\n  \n  template<typename InferenceOutT, typename InferenceInT>\n  void _ev" +
                    "aluate(Arcane::Integer size,\n                 const Law::ScalarAccessor& accesso" +
                    "r) const\n  {\n    \n");
            
            #line default
            #line hidden
            
            #line 575 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 576 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 577 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 578 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 579 "LawT4.tt"
            this.Write("\n");
            
            #line default
            #line hidden
            
            #line 580 "LawT4.tt"
 AllocateOnnxLocalData (""); 
            
            #line default
            #line hidden
            
            #line 581 "LawT4.tt"
            this.Write("    \n    // copy + cast\n    int in_index=0;\n");
            
            #line default
            #line hidden
            
            #line 584 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("()"); 
            
            #line default
            #line hidden
            
            #line 585 "LawT4.tt"
            this.Write("    \n    _computeOnnxInference<InferenceOutT, InferenceInT>(onnx_input_buffer, on" +
                    "nx_output_buffer, 1);\n    \n    // copy onnx results into law data\n    int out_in" +
                    "dex=0;\n");
            
            #line default
            #line hidden
            
            #line 590 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues (""); 
            
            #line default
            #line hidden
            
            #line 591 "LawT4.tt"
 CopyLocalOnnxOutputsDerivativesToGlobalDerivatives (""); 
            
            #line default
            #line hidden
            
            #line 592 "LawT4.tt"
            this.Write("\n  }\n\n");
            
            #line default
            #line hidden
            
            #line 595 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 596 "LawT4.tt"
            this.Write("\n  void _evaluateOnlyValues(const Law::VariableAccessor& accessor,\n              " +
                    "             const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 600 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 601 "LawT4.tt"
 String groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 602 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 603 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 604 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 604 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 605 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 606 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 608 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 608 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 610 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 611 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluateOnlyValues(const Law::PartialVariableAccessor& accesso" +
                    "r,\n                           const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 617 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 618 "LawT4.tt"
 groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 619 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 620 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 621 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 621 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 622 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 623 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 625 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 625 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 627 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 628 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluateOnlyValues(const Law::ArrayAccessor& accessor,\n       " +
                    "                    const Arcane::Integer& begin,\n                           con" +
                    "st Arcane::Integer& end) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 635 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 636 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 637 "LawT4.tt"
            this.Write("    // Evaluation loop\n    for(Arcane::Integer index = begin; index < end; ++inde" +
                    "x) {\n");
            
            #line default
            #line hidden
            
            #line 639 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 640 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 642 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 642 "LawT4.tt"
            this.Write("\n      ); \n");
            
            #line default
            #line hidden
            
            #line 644 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 645 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluateOnlyValues(const Law::ScalarAccessor& accessor) const\n" +
                    "  {\n");
            
            #line default
            #line hidden
            
            #line 650 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 651 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 652 "LawT4.tt"
            this.Write("    {\n");
            
            #line default
            #line hidden
            
            #line 653 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 654 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 656 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 656 "LawT4.tt"
            this.Write("\n      ); \n");
            
            #line default
            #line hidden
            
            #line 658 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues (""); 
            
            #line default
            #line hidden
            
            #line 659 "LawT4.tt"
            this.Write("    }\n  }\n\nprotected:\n  void _evaluate(Arcane::Integer size,\n                 con" +
                    "st Law::VariableAccessor& accessor,\n                 const Arcane::ItemGroup& gr" +
                    "oup) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 667 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 668 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 669 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 670 "LawT4.tt"
 groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 671 "LawT4.tt"
 
  
   if(MultiThread == MultiThreadMode.ArcaneTBB) { 
     groupName = "items"; 
            
            #line default
            #line hidden
            
            #line 675 "LawT4.tt"
            this.Write("    auto partialEvaluateItem = [&](Arcane::ItemVectorView items) {\n");
            
            #line default
            #line hidden
            
            #line 676 "LawT4.tt"
 }
   else if(MultiThread == MultiThreadMode.Kokkos) {

            
            #line default
            #line hidden
            
            #line 679 "LawT4.tt"
            this.Write("     auto group_view = group.view();\n     auto partialEvaluateItem = [&](const in" +
                    "t i) {\n     auto iitem = group_view[i];\n");
            
            #line default
            #line hidden
            
            #line 682 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 683 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 684 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 685 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos) { 
            
            #line default
            #line hidden
            
            #line 686 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 687 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 687 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 688 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 689 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 690 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 692 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 692 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 694 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 695 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 696 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 697 "LawT4.tt"
            this.Write("    }\n");
            
            #line default
            #line hidden
            
            #line 698 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 699 "LawT4.tt"
 if(MultiThread == MultiThreadMode.ArcaneTBB){ 
            
            #line default
            #line hidden
            
            #line 700 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 701 "LawT4.tt"
 parallelEnumerate("group","partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 703 "LawT4.tt"
 if(MultiThread == MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 704 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 705 "LawT4.tt"
 parallelEnumerate(Model.name, "partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 707 "LawT4.tt"
            this.Write("  }\n\n  void _evaluate(Arcane::Integer size,\n                 const Law::PartialVa" +
                    "riableAccessor& accessor,\n                 const Arcane::ItemGroup& group) const" +
                    "\n  {\n");
            
            #line default
            #line hidden
            
            #line 713 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 714 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 715 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 716 "LawT4.tt"
 groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 717 "LawT4.tt"
 
  
   if(MultiThread == MultiThreadMode.ArcaneTBB) { 
     groupName = "items"; 
            
            #line default
            #line hidden
            
            #line 721 "LawT4.tt"
            this.Write("    auto partialEvaluateItem = [&](Arcane::ItemVectorView items) {\n");
            
            #line default
            #line hidden
            
            #line 722 "LawT4.tt"
 }
   else if(MultiThread == MultiThreadMode.Kokkos) {

            
            #line default
            #line hidden
            
            #line 725 "LawT4.tt"
            this.Write("     auto group_view = group.view();\n     auto partialEvaluateItem = [&](const in" +
                    "t i) {\n     auto iitem = group_view[i];\n");
            
            #line default
            #line hidden
            
            #line 728 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 729 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 730 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 731 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos) { 
            
            #line default
            #line hidden
            
            #line 732 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 733 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 733 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 734 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 735 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 736 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 738 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 738 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 740 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 741 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 742 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 743 "LawT4.tt"
            this.Write("    }\n");
            
            #line default
            #line hidden
            
            #line 744 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 745 "LawT4.tt"
 if(MultiThread == MultiThreadMode.ArcaneTBB){ 
            
            #line default
            #line hidden
            
            #line 746 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 747 "LawT4.tt"
 parallelEnumerate("group","partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 749 "LawT4.tt"
 if(MultiThread == MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 750 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 751 "LawT4.tt"
 parallelEnumerate(Model.name, "partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 753 "LawT4.tt"
            this.Write("  }\n\n  void _evaluate(Arcane::Integer size,\n                 const Law::ArrayAcce" +
                    "ssor& accessor,\n                 const Arcane::Integer& begin,\n                 " +
                    "const Arcane::Integer& end) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 760 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 761 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 762 "LawT4.tt"
 ResizeGlobalDerivatives (true); 
            
            #line default
            #line hidden
            
            #line 763 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 764 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 765 "LawT4.tt"
            this.Write("    // Evaluation loop\n    for(Arcane::Integer index = begin; index < end; ++inde" +
                    "x) {\n");
            
            #line default
            #line hidden
            
            #line 767 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 768 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 770 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 770 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 772 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 773 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives ("[index]"); 
            
            #line default
            #line hidden
            
            #line 774 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluate(Arcane::Integer size,\n                 const Law::Sca" +
                    "larAccessor& accessor) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 780 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 781 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 782 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 783 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 784 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 785 "LawT4.tt"
            this.Write("    {\n");
            
            #line default
            #line hidden
            
            #line 786 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 787 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 789 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 789 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 791 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues (""); 
            
            #line default
            #line hidden
            
            #line 792 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives (""); 
            
            #line default
            #line hidden
            
            #line 793 "LawT4.tt"
            this.Write("    }\n  }\n\n");
            
            #line default
            #line hidden
            
            #line 796 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 797 "LawT4.tt"
            this.Write(@"//
// split and pass private

public:

  void derivativesCorrection(const Law::VariableAccessor& accessor,
                             const Arcane::ItemGroup& group,
                             Law::PropertyVector graph_dependencies,
                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,
                             Arcane::Integer nb_unknown_resize) const
");
            
            #line default
            #line hidden
            
            #line 807 "LawT4.tt"
 if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 808 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 811 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 812 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 813 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 814 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 815 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done di" +
                    "rectly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 818 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 819 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {" +
                    "\n");
            
            #line default
            #line hidden
            
            #line 822 "LawT4.tt"
 ReorderDerivativesAndNullify ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 823 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_com" +
                    "posed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_deriva" +
                    "tive_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 830 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 831 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {" +
                    "\n");
            
            #line default
            #line hidden
            
            #line 834 "LawT4.tt"
  ApplyDerivativesCorrection("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 835 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Resize to root prop \n    const Arcane::Integer size =" +
                    " nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 840 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 841 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 842 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 843 "LawT4.tt"
            this.Write(@" 

  void derivativesCorrection(const Law::PartialVariableAccessor& accessor,
                             const Arcane::ItemGroup& group,
                             Law::PropertyVector graph_dependencies,
                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,
                             Arcane::Integer nb_unknown_resize) const
");
            
            #line default
            #line hidden
            
            #line 850 "LawT4.tt"
 if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 851 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 854 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 855 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 856 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 857 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 858 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done di" +
                    "rectly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 861 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 862 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {" +
                    "\n");
            
            #line default
            #line hidden
            
            #line 865 "LawT4.tt"
 ReorderDerivativesAndNullify ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 866 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_com" +
                    "posed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_deriva" +
                    "tive_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 873 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 874 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {" +
                    "\n");
            
            #line default
            #line hidden
            
            #line 877 "LawT4.tt"
  ApplyDerivativesCorrection("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 878 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Resize to root prop \n    const Arcane::Integer size =" +
                    " nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 883 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 884 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 885 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 886 "LawT4.tt"
            this.Write(@" 

  void derivativesCorrection(const Law::ArrayAccessor& accessor,
                             const Arcane::Integer& begin,
                             const Arcane::Integer& end,
                             Law::PropertyVector graph_dependencies,
                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,
                             Arcane::Integer nb_unknown_resize) const
");
            
            #line default
            #line hidden
            
            #line 894 "LawT4.tt"
 if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 895 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 898 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 899 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 900 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 901 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 902 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done di" +
                    "rectly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 905 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 906 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop\n      for(Arcane::Integer i = begin; i < end; +" +
                    "+i) {\n");
            
            #line default
            #line hidden
            
            #line 909 "LawT4.tt"
 ReorderDerivativesAndNullify ("[i]"); 
            
            #line default
            #line hidden
            
            #line 910 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_com" +
                    "posed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_deriva" +
                    "tive_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 917 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 918 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop\n      for(Arcane::Integer i = begin; i < end; +" +
                    "+i) {\n");
            
            #line default
            #line hidden
            
            #line 921 "LawT4.tt"
  ApplyDerivativesCorrection("[i]"); 
            
            #line default
            #line hidden
            
            #line 922 "LawT4.tt"
            this.Write("      }\n    }  \n    //\n    // Resize to root prop \n    const Arcane::Integer size" +
                    " = nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 927 "LawT4.tt"
 ResizeGlobalDerivatives (true); 
            
            #line default
            #line hidden
            
            #line 928 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 929 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 930 "LawT4.tt"
            this.Write(@" 

  void derivativesCorrection(const Law::ScalarAccessor& accessor,
                             Law::PropertyVector graph_dependencies,
                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,
                             Arcane::Integer nb_unknown_resize) const
");
            
            #line default
            #line hidden
            
            #line 936 "LawT4.tt"
 if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 937 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction " +
                    "not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 940 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 941 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 942 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 943 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 944 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done di" +
                    "rectly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 947 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 948 "LawT4.tt"
            this.Write("      //\n      //\n      {\n");
            
            #line default
            #line hidden
            
            #line 951 "LawT4.tt"
 ReorderDerivativesAndNullify (""); 
            
            #line default
            #line hidden
            
            #line 952 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_com" +
                    "posed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_deriva" +
                    "tive_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 959 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 960 "LawT4.tt"
            this.Write("      //\n      // \n      {\n");
            
            #line default
            #line hidden
            
            #line 963 "LawT4.tt"
  ApplyDerivativesCorrection(""); 
            
            #line default
            #line hidden
            
            #line 964 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Resize to root prop \n    const Arcane::Integer size =" +
                    " nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 969 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 970 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 971 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 972 "LawT4.tt"
            this.Write(" \n\nprotected:\n\n");
            
            #line default
            #line hidden
            
            #line 976 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 977 "LawT4.tt"
            this.Write("  // switch to onnx model in out types \n  template<typename... T>\n  void _evaluat" +
                    "e(const Law::EvaluationMode mode, Arcane::Integer static_size, const T&... args)" +
                    " const \n  {\n    ONNXTensorElementDataType outTypeOnnx = m_session->GetOutputType" +
                    "Info(0).GetTensorTypeAndShapeInfo().GetElementType();\n    ONNXTensorElementDataT" +
                    "ype inTypeOnnx = m_session->GetInputTypeInfo(0).GetTensorTypeAndShapeInfo().GetE" +
                    "lementType();\n    switch(outTypeOnnx) {\n      case ONNXTensorElementDataType::ON" +
                    "NX_TENSOR_ELEMENT_DATA_TYPE_FLOAT :\n        switch(inTypeOnnx) {\n          case " +
                    "ONNXTensorElementDataType::ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT :\n            _ev" +
                    "aluate<float,float,T...>(mode,static_size, args...);\n            break;\n        " +
                    "  case ONNXTensorElementDataType::ONNX_TENSOR_ELEMENT_DATA_TYPE_DOUBLE :\n       " +
                    "     _evaluate<float,double,T...>(mode,static_size, args...);\n            break;" +
                    "\n          default:\n            throw Arcane::FatalErrorException(\"OpenNeuralNet" +
                    "workXLawType onnx element type must be float or double\");\n        }\n      break;" +
                    "\n      case ONNXTensorElementDataType::ONNX_TENSOR_ELEMENT_DATA_TYPE_DOUBLE :\n  " +
                    "      switch(inTypeOnnx) {\n          case ONNXTensorElementDataType::ONNX_TENSOR" +
                    "_ELEMENT_DATA_TYPE_FLOAT :\n            _evaluate<double,float,T...>(mode, static" +
                    "_size, args...);\n            break;\n          case ONNXTensorElementDataType::ON" +
                    "NX_TENSOR_ELEMENT_DATA_TYPE_DOUBLE :\n            _evaluate<double,double,T...>(m" +
                    "ode,static_size, args...);\n            break;\n          default:\n            thr" +
                    "ow Arcane::FatalErrorException(\"OpenNeuralNetworkXLawType onnx element type must" +
                    " be float or double\");\n        }\n      break;\n      default:\n        throw Arcan" +
                    "e::FatalErrorException(\"OpenNeuralNetworkXLawType onnx element type must be floa" +
                    "t or double\");\n    }\n  }\n\n  template<typename InferenceOutT, typename InferenceI" +
                    "nT, typename... T>\n  void _evaluate(const Law::EvaluationMode mode, Arcane::Inte" +
                    "ger static_size, const T&... args) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 1016 "LawT4.tt"
 if(containsVectorProperty()) { 
            
            #line default
            #line hidden
            
            #line 1017 "LawT4.tt"
            this.Write("    throw Arcane::FatalErrorException(\"ONNX evaluation available with vector prop" +
                    "erties error\");\n");
            
            #line default
            #line hidden
            
            #line 1018 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 1019 "LawT4.tt"
            this.Write(@"    switch(mode)
    {
    case Law::eWithoutDerivative :
      _evaluateOnlyValues<InferenceOutT, InferenceInT>(args...);
      break;
    case Law::eWithDerivative :
      if(isDifferentiable()){
        if(static_size != 0) {
          _evaluate<InferenceOutT, InferenceInT>(static_size, args...);
        } else {
          _evaluate<InferenceOutT, InferenceInT>(in().dataSize(), args...);
        }
      }
      else{
        throw Arcane::FatalErrorException(""evaluation with derivatives not available error"");
      }
      break;
    default:
      throw Arcane::FatalErrorException(""evaluation case default error"");
    }
");
            
            #line default
            #line hidden
            
            #line 1039 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1040 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 1041 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 1042 "LawT4.tt"
            this.Write(@"  template<typename... T>
  void _evaluate(const Law::EvaluationMode mode, Arcane::Integer static_size, const T&... args) const
  {
    switch(mode)
    {
    case Law::eWithoutDerivative :
      _evaluateOnlyValues(args...);
      break;
    case Law::eWithDerivative :
      if(isDifferentiable()){
        if(static_size != 0) {
          _evaluate(static_size, args...);
        } else {
          _evaluate(in().dataSize(), args...);
        }
      }
      else{
        throw Arcane::FatalErrorException(""evaluation with derivatives not available error"");
      }
      break;
    default:
      throw Arcane::FatalErrorException(""evaluation case default error"");
    }
  }
");
            
            #line default
            #line hidden
            
            #line 1066 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1067 "LawT4.tt"
            this.Write("\nprotected:\n\n  Signature m_signature;\n");
            
            #line default
            #line hidden
            
            #line 1071 "LawT4.tt"
 if(Inference == InferenceMode.ONNX){ 
            
            #line default
            #line hidden
            
            #line 1072 "LawT4.tt"
            this.Write(" \n  Ort::Env m_environment;\n  std::unique_ptr<Ort::Session> m_session;\n  bool m_i" +
                    "s_differentiable;\n");
            
            #line default
            #line hidden
            
            #line 1076 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 1077 "LawT4.tt"
            this.Write("  std::function<\n    void(");
            
            #line default
            #line hidden
            
            #line 1078 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Signature ));
            
            #line default
            #line hidden
            
            #line 1078 "LawT4.tt"
            this.Write(")\n  > m_invoker;\n");
            
            #line default
            #line hidden
            
            #line 1080 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1081 "LawT4.tt"
            this.Write("  \n};\n\n/*------------------------------------------------------------------------" +
                    "---*/\n/*------------------------------------------------------------------------" +
                    "---*/\n");
            
            #line default
            #line hidden
            
            #line 1086 "LawT4.tt"
 if(Debug) { 
            
            #line default
            #line hidden
            
            #line 1087 "LawT4.tt"
            this.Write("struct EpsilonDerivatives\n{\n");
            
            #line default
            #line hidden
            
            #line 1089 "LawT4.tt"
 foreach(var i in Inputs) { 
            
            #line default
            #line hidden
            
            #line 1090 "LawT4.tt"
            this.Write("  Arcane::Real ");
            
            #line default
            #line hidden
            
            #line 1090 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));
            
            #line default
            #line hidden
            
            #line 1090 "LawT4.tt"
            this.Write(" = 1.e-6;\n");
            
            #line default
            #line hidden
            
            #line 1091 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1092 "LawT4.tt"
            this.Write(@"};

class DebugFunction
  : public Function
{
public:

  template<typename UserAlgo, typename Method>
  DebugFunction(const Signature& s,
                UserAlgo& kernel,
                Method method,
                const EpsilonDerivatives& epsilon,
                Arcane::ITraceMng* trace_mng):
                Function(s,kernel,method),
                m_epsilon(epsilon),
                m_trace_mng(trace_mng)
                {};

protected:
  
  void evaluate(const Law::VariableAccessor& accessor,
                const Arcane::ItemGroup& group,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    Function::evaluate(accessor, group, mode, static_size);
");
            
            #line default
            #line hidden
            
            #line 1118 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1120 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor, group);\n");
            
            #line default
            #line hidden
            
            #line 1122 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1123 "LawT4.tt"
            this.Write(@"  }
  
  void evaluate(const Law::PartialVariableAccessor& accessor,
                const Arcane::ItemGroup& group,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    Function::evaluate(accessor, group, mode, static_size);
");
            
            #line default
            #line hidden
            
            #line 1131 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1133 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor, group);\n");
            
            #line default
            #line hidden
            
            #line 1135 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1136 "LawT4.tt"
            this.Write(@"  }
  
  void evaluate(const Law::ArrayAccessor& accessor,
                const Arcane::Integer& begin,
                const Arcane::Integer& end,
                const Law::EvaluationMode mode,
                Arcane::Integer static_size = 0) const
  {
    Function::evaluate(accessor, begin, end, mode, static_size);
");
            
            #line default
            #line hidden
            
            #line 1145 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1147 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor,  begin, en" +
                    "d);\n");
            
            #line default
            #line hidden
            
            #line 1149 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1150 "LawT4.tt"
            this.Write("  }\n  \n  void evaluate(const Law::ScalarAccessor& accessor,\n                const" +
                    " Law::EvaluationMode mode,\n                Arcane::Integer static_size = 0) cons" +
                    "t\n  {\n    Function::evaluate(accessor, mode, static_size);\n");
            
            #line default
            #line hidden
            
            #line 1157 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1159 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor);\n");
            
            #line default
            #line hidden
            
            #line 1161 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1162 "LawT4.tt"
            this.Write("  }\n\n");
            
            #line default
            #line hidden
            
            #line 1164 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1166 "LawT4.tt"
            this.Write("private:\n\n  void _check_derivatives(const Law::VariableAccessor& accessor,\n      " +
                    "                    const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 1171 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 1172 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1173 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1174 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1175 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1176 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1176 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1176 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law " +
                    "derivatives and finite difference ones\";\n    // Evaluation loop over items\n    E" +
                    "NUMERATE_ITEM(iitem, group) {\n");
            
            #line default
            #line hidden
            
            #line 1180 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1181 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1182 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1183 "LawT4.tt"
 PrintDebugValuesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1184 "LawT4.tt"
 PrintDebugDerivativesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1185 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1186 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _check_derivatives(const Law::PartialVariableAccessor& access" +
                    "or,\n                          const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 1192 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 1193 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1194 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1195 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1196 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1197 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1197 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1197 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law " +
                    "derivatives and finite difference ones\";\n    // Evaluation loop over items\n    E" +
                    "NUMERATE_ITEM(iitem, group) {\n");
            
            #line default
            #line hidden
            
            #line 1201 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1202 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1203 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1204 "LawT4.tt"
 PrintDebugValuesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1205 "LawT4.tt"
 PrintDebugDerivativesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1206 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1207 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _check_derivatives(const Law::ArrayAccessor& accessor,\n      " +
                    "                    const Arcane::Integer& begin,\n                          cons" +
                    "t Arcane::Integer& end) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 1214 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 1215 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1216 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1217 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1218 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1219 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1219 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1219 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law " +
                    "derivatives and finite difference ones\";\n    // Evaluation loop\n    for(Arcane::" +
                    "Integer index = begin; index < end; ++index) {\n");
            
            #line default
            #line hidden
            
            #line 1223 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1224 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1225 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1226 "LawT4.tt"
 PrintDebugValuesInfos ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1227 "LawT4.tt"
 PrintDebugDerivativesInfos ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1228 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1229 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _check_derivatives(const Law::ScalarAccessor& accessor) const" +
                    "\n  {\n");
            
            #line default
            #line hidden
            
            #line 1234 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 1235 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1236 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1237 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1238 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1239 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1239 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1239 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law " +
                    "derivatives and finite difference ones\";\n    // Evaluation\n    {\n");
            
            #line default
            #line hidden
            
            #line 1243 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 1244 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 1245 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1246 "LawT4.tt"
 PrintDebugValuesInfos ("()"); 
            
            #line default
            #line hidden
            
            #line 1247 "LawT4.tt"
 PrintDebugDerivativesInfos (""); 
            
            #line default
            #line hidden
            
            #line 1248 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives (""); 
            
            #line default
            #line hidden
            
            #line 1249 "LawT4.tt"
            this.Write("    }\n  }\n");
            
            #line default
            #line hidden
            
            #line 1251 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1252 "LawT4.tt"
            this.Write("private:\n\n");
            
            #line default
            #line hidden
            
            #line 1254 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1256 "LawT4.tt"
            this.Write(@"  void _print_value(const Arcane::String value_name, const Arcane::Real& value) const
  {
    m_trace_mng->info() << value_name <<"" value   = ""<< value ;
  }

  void _print_derivatives(const Arcane::String deriv_name, const Arcane::Real& deriv_ref, const Arcane::Real& deriv_test) const
  {
    m_trace_mng->info() << deriv_name <<"" ref   = ""<< deriv_ref ;
    m_trace_mng->info() << deriv_name <<"" test  = ""<< deriv_test ;
    m_trace_mng->info() << deriv_name <<"" error = ""<< (deriv_ref - deriv_test) / (fabs(deriv_ref) + 1.e-20);
  }
");
            
            #line default
            #line hidden
            
            #line 1267 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1268 "LawT4.tt"
            this.Write(@"
private:

  //! Epsilon values to compute derivatives
  EpsilonDerivatives m_epsilon;
  
  //! Manager de trace
  Arcane::ITraceMng* m_trace_mng;

};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/
");
            
            #line default
            #line hidden
            
            #line 1281 "LawT4.tt"
  } 
            
            #line default
            #line hidden
            
            #line 1282 "LawT4.tt"
            this.Write("\n}\n\n#endif\n\n/*-------------------------------------------------------------------" +
                    "--------*/\n/*-------------------------------------------------------------------" +
                    "--------*/\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class LawT4Base {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
