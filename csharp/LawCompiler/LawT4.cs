// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace LawCompiler {
    using System.Linq;
    using System;
    
    
    public partial class LawT4 : LawT4Base {
        
        
        #line 1225 "LawT4.tt"

private bool containsVectorProperty () 
{
  foreach(var p in AllProperties) { 
  	if(p.dim == PropertyDim.vectorial)
  	  return true;
  }
  return false;
}
private void StaticGlobalDependenciesSize () 
{ 
        #line default
        #line hidden
        
        
        #line 1236 "LawT4.tt"
this.Write("   \n    // Derivatives dependencies sizes\n    const Arcane::Integer nb_graph_prop = graph_dependencies.size();\n    const Arcane::Integer nb_direct_prop = in().size();\n");

        #line default
        #line hidden
        
        
        #line 1240 "LawT4.tt"
 
}

private void ComputeDerivativesReorderOffset () 
{ 
        #line default
        #line hidden
        
        
        #line 1245 "LawT4.tt"
this.Write("      Arcane::IntegerUniqueArray static_ofs(nb_direct_prop);\n      Arcane::Integer graph_composed_ofs = nb_graph_prop;\n      auto in_prop = in();\n      Arcane::Integer nb_root_prop = 0;\n      for(Arcane::Integer static_index = 0; static_index<nb_direct_prop;++static_index)\n      {\n        auto prop = in_prop[static_index];\n        // Move composed derivatives to the end\n        if(in_composed_derivative_ofs.find(prop) != in_composed_derivative_ofs.end())\n          static_ofs[static_index] = graph_composed_ofs++;\n        // Move root properties to the consistent graph index\n        else\n        {\n          static_ofs[static_index]=graph_dependencies[prop];\n          nb_root_prop++;\n        }\n      }\n      // Non root graph derivatives equals zero before correction\n      const Arcane::Integer nb_inherited_prop = nb_graph_prop - nb_root_prop;\n      Arcane::IntegerUniqueArray inherited_deriv_ofs(nb_inherited_prop);\n      Arcane::Integer inherited_index = 0;\n      for(Arcane::Integer graph_index = 0; graph_index<nb_graph_prop;++graph_index)\n      {\n        if(!in_prop.contains(graph_dependencies[graph_index]))\n          inherited_deriv_ofs[inherited_index++]=graph_index;\n      }\n");

        #line default
        #line hidden
        
        
        #line 1271 "LawT4.tt"
 
}
private void ReorderDerivativesAndNullify (string op) 
{ 
        #line default
        #line hidden
        
        
        #line 1275 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1279 "LawT4.tt"
this.Write("        Arcane::");

        #line default
        #line hidden
        
        
        #line 1279 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1279 "LawT4.tt"
this.Write("UniqueArray var_deriv_");

        #line default
        #line hidden
        
        
        #line 1279 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1279 "LawT4.tt"
this.Write("_ini(var_deriv_");

        #line default
        #line hidden
        
        
        #line 1279 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1279 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1279 "LawT4.tt"
this.Write(".constView());\n");

        #line default
        #line hidden
        
        
        #line 1280 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1283 "LawT4.tt"
this.Write("        Arcane::Integer size_");

        #line default
        #line hidden
        
        
        #line 1283 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1283 "LawT4.tt"
this.Write(" = m_signature.");

        #line default
        #line hidden
        
        
        #line 1283 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1283 "LawT4.tt"
this.Write(".size();\n        Arcane::UniqueArray<Arcane::");

        #line default
        #line hidden
        
        
        #line 1284 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1284 "LawT4.tt"
this.Write("ConstArrayView> var_deriv_");

        #line default
        #line hidden
        
        
        #line 1284 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1284 "LawT4.tt"
this.Write("_ini(size_");

        #line default
        #line hidden
        
        
        #line 1284 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1284 "LawT4.tt"
this.Write(");\n        for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1285 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1285 "LawT4.tt"
this.Write("; ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"
this.Write("_ini[j] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"
this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1286 "LawT4.tt"
this.Write(";\n        }\n");

        #line default
        #line hidden
        
        
        #line 1288 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1292 "LawT4.tt"
this.Write("        for(Arcane::Integer static_index=0;static_index<nb_direct_prop;++static_index)\n        {\n");

        #line default
        #line hidden
        
        
        #line 1294 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1298 "LawT4.tt"
this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1298 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1298 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1298 "LawT4.tt"
this.Write("[static_ofs[static_index]] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1298 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1298 "LawT4.tt"
this.Write("_ini[static_index];\n");

        #line default
        #line hidden
        
        
        #line 1299 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1302 "LawT4.tt"
this.Write("         for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1302 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1302 "LawT4.tt"
this.Write("; ++j) {\n              var_deriv_");

        #line default
        #line hidden
        
        
        #line 1303 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1303 "LawT4.tt"
this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1303 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1303 "LawT4.tt"
this.Write("[static_ofs[static_index]] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1303 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1303 "LawT4.tt"
this.Write("_ini[j][static_index];\n         }\n");

        #line default
        #line hidden
        
        
        #line 1305 "LawT4.tt"
    
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1309 "LawT4.tt"
this.Write("        }\n        for(Arcane::Integer inherited_index=0;inherited_index<nb_inherited_prop;++inherited_index)\n        {\n");

        #line default
        #line hidden
        
        
        #line 1312 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1316 "LawT4.tt"
this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1316 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1316 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1316 "LawT4.tt"
this.Write("[inherited_deriv_ofs[inherited_index]]=0;\n");

        #line default
        #line hidden
        
        
        #line 1317 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1320 "LawT4.tt"
this.Write("         for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1320 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1320 "LawT4.tt"
this.Write("; ++j) {\n              var_deriv_");

        #line default
        #line hidden
        
        
        #line 1321 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1321 "LawT4.tt"
this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1321 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1321 "LawT4.tt"
this.Write("[inherited_deriv_ofs[inherited_index]] = 0;\n         }\n");

        #line default
        #line hidden
        
        
        #line 1323 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1327 "LawT4.tt"
this.Write("       }\n");

        #line default
        #line hidden
        
        
        #line 1328 "LawT4.tt"

}
private void ComputeDerivativesCorrectionOffset () 
{
        #line default
        #line hidden
        
        
        #line 1332 "LawT4.tt"
this.Write("      direct_composed_index++;\n      // Derivatives correction through in derivatives properties\n      Law::PropertyVector composed_prop_deriv = iter_composed.second;\n      Arcane::Integer nb_composed_prop_deriv = composed_prop_deriv.size();\n      Arcane::IntegerUniqueArray composed_prop_deriv_ofs(nb_composed_prop_deriv);\n      for(Arcane::Integer composed_deriv_index=0;composed_deriv_index<nb_composed_prop_deriv;++composed_deriv_index){\n        auto current_in_derived_prop = composed_prop_deriv[composed_deriv_index];\n        composed_prop_deriv_ofs[composed_deriv_index] = graph_dependencies[current_in_derived_prop];\n      }\n      // Only real scalar avalaible in this version (external check)\n      Law::Property composed_prop = iter_composed.first;\n      Law::ScalarRealProperty& scalar_composed_prop = static_cast<Law::ScalarRealProperty&>(composed_prop);\n      // In proproperties has derivatives (external check)\n      auto deriv_composed = accessor.derivatives(scalar_composed_prop);\n");

        #line default
        #line hidden
        
        
        #line 1346 "LawT4.tt"

}
private void parallelEnumerate(string groupName, string lambdaName) 
{
    if(MultiThread == MultiThreadMode.ArcaneTBB) {

        #line default
        #line hidden
        
        
        #line 1352 "LawT4.tt"
this.Write("      int nb_thread = Arcane::TaskFactory::nbAllowedThread();\n      Arcane::ParallelLoopOptions para_options;\n      para_options.setMaxThread(nb_thread);\n      int grain_size = group.size()/nb_thread + 1;\n      para_options.setGrainSize(grain_size);\n      Arcane::Parallel::Foreach(");

        #line default
        #line hidden
        
        
        #line 1357 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( groupName ));

        #line default
        #line hidden
        
        
        #line 1357 "LawT4.tt"
this.Write(", para_options, ");

        #line default
        #line hidden
        
        
        #line 1357 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( lambdaName ));

        #line default
        #line hidden
        
        
        #line 1357 "LawT4.tt"
this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1358 "LawT4.tt"

    }
    else if(MultiThread == MultiThreadMode.Kokkos) {

        #line default
        #line hidden
        
        
        #line 1362 "LawT4.tt"
this.Write("      Kokkos::parallel_for(\"");

        #line default
        #line hidden
        
        
        #line 1362 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( groupName ));

        #line default
        #line hidden
        
        
        #line 1362 "LawT4.tt"
this.Write("\", group.size(), ");

        #line default
        #line hidden
        
        
        #line 1362 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( lambdaName ));

        #line default
        #line hidden
        
        
        #line 1362 "LawT4.tt"
this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1363 "LawT4.tt"

    }
}
private void ApplyDerivativesCorrection(string op) 
{
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1371 "LawT4.tt"
this.Write("        auto direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1371 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1371 "LawT4.tt"
this.Write(" = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1371 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1371 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1371 "LawT4.tt"
this.Write("[direct_composed_index];\n");

        #line default
        #line hidden
        
        
        #line 1372 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"
this.Write("        Arcane::Integer size_");

        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"
this.Write(" = m_signature.");

        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1375 "LawT4.tt"
this.Write(".size();\n        Arcane::");

        #line default
        #line hidden
        
        
        #line 1376 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1376 "LawT4.tt"
this.Write("UniqueArray direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1376 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1376 "LawT4.tt"
this.Write("(size_");

        #line default
        #line hidden
        
        
        #line 1376 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1376 "LawT4.tt"
this.Write(");\n        for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1377 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1377 "LawT4.tt"
this.Write("; ++j) {\n          direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1378 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1378 "LawT4.tt"
this.Write("[j] = var_deriv_");

        #line default
        #line hidden
        
        
        #line 1378 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1378 "LawT4.tt"
this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1378 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1378 "LawT4.tt"
this.Write("[direct_composed_index];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1380 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1384 "LawT4.tt"
this.Write("        for(auto derived_index = 0; derived_index < nb_composed_prop_deriv; ++derived_index)\n        {\n");

        #line default
        #line hidden
        
        
        #line 1386 "LawT4.tt"
 
  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1390 "LawT4.tt"
this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1390 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1390 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1390 "LawT4.tt"
this.Write("[composed_prop_deriv_ofs[derived_index]] += direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1390 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1390 "LawT4.tt"
this.Write("*deriv_composed");

        #line default
        #line hidden
        
        
        #line 1390 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1390 "LawT4.tt"
this.Write("[derived_index];\n");

        #line default
        #line hidden
        
        
        #line 1391 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1394 "LawT4.tt"
this.Write("        for(auto j = 0; j < size_");

        #line default
        #line hidden
        
        
        #line 1394 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1394 "LawT4.tt"
this.Write("; ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1395 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1395 "LawT4.tt"
this.Write("[j]");

        #line default
        #line hidden
        
        
        #line 1395 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1395 "LawT4.tt"
this.Write("[composed_prop_deriv_ofs[derived_index]] += direct_derivative_");

        #line default
        #line hidden
        
        
        #line 1395 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1395 "LawT4.tt"
this.Write("[j]*deriv_composed");

        #line default
        #line hidden
        
        
        #line 1395 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1395 "LawT4.tt"
this.Write("[derived_index];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1397 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1401 "LawT4.tt"
this.Write("        }\n");

        #line default
        #line hidden
        
        
        #line 1402 "LawT4.tt"

}
private void AccessGlobalValues () 
{ 
        #line default
        #line hidden
        
        
        #line 1406 "LawT4.tt"
this.Write("    // Access to global values container\n");

        #line default
        #line hidden
        
        
        #line 1407 "LawT4.tt"

  foreach(var p in AllProperties) { 
        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"
this.Write("    auto var_");

        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"
this.Write(" = accessor.values(m_signature.");

        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1409 "LawT4.tt"
this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1410 "LawT4.tt"

  }
}

private void AccessGlobalDerivatives () 
{ 
        #line default
        #line hidden
        
        
        #line 1416 "LawT4.tt"
this.Write("    // Access to global derivatives container\n");

        #line default
        #line hidden
        
        
        #line 1417 "LawT4.tt"

  foreach(var o in Outputs) { 
        #line default
        #line hidden
        
        
        #line 1419 "LawT4.tt"
this.Write("    auto var_deriv_");

        #line default
        #line hidden
        
        
        #line 1419 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1419 "LawT4.tt"
this.Write(" = accessor.derivatives(m_signature.");

        #line default
        #line hidden
        
        
        #line 1419 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1419 "LawT4.tt"
this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1420 "LawT4.tt"

  }
}

private void ResizeGlobalDerivatives (bool need_resize_array = false) 
{ 
        #line default
        #line hidden
        
        
        #line 1426 "LawT4.tt"
this.Write("    // Resize global outputs\n");

        #line default
        #line hidden
        
        
        #line 1427 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1431 "LawT4.tt"
this.Write("    var_deriv_");

        #line default
        #line hidden
        
        
        #line 1431 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1431 "LawT4.tt"
this.Write(".resize(size);\n");

        #line default
        #line hidden
        
        
        #line 1432 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1435 "LawT4.tt"
this.Write("    for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1435 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1435 "LawT4.tt"
this.Write(".size(); ++i) {\n      var_deriv_");

        #line default
        #line hidden
        
        
        #line 1436 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1436 "LawT4.tt"
this.Write("[i].resize(size);\n    }\n");

        #line default
        #line hidden
        
        
        #line 1438 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
    if(need_resize_array) { 
        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"
this.Write("    var_deriv_");

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"
this.Write(".resize(var_deriv_");

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"
this.Write(".dim1Size(), m_signature.");

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1442 "LawT4.tt"
this.Write(".size(),size);\n");

        #line default
        #line hidden
        
        
        #line 1443 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1445 "LawT4.tt"
this.Write("    var_deriv_");

        #line default
        #line hidden
        
        
        #line 1445 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1445 "LawT4.tt"
this.Write(".resize(m_signature.");

        #line default
        #line hidden
        
        
        #line 1445 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1445 "LawT4.tt"
this.Write(".size(),size);\n");

        #line default
        #line hidden
        
        
        #line 1446 "LawT4.tt"
 
    }
    break;
    } 
  }
}

private void CreateDerivativesOffsets () 
{ 
        #line default
        #line hidden
        
        
        #line 1455 "LawT4.tt"
this.Write("    // Create derivatives offsets\n");

        #line default
        #line hidden
        
        
        #line 1456 "LawT4.tt"

  Property prev = null;
  foreach(var p in Inputs) {
    if(prev == null) { 
        #line default
        #line hidden
        
        
        #line 1460 "LawT4.tt"
this.Write("    auto ofs_");

        #line default
        #line hidden
        
        
        #line 1460 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1460 "LawT4.tt"
this.Write(" = 0;\n");

        #line default
        #line hidden
        
        
        #line 1461 "LawT4.tt"
 
    } else if (prev.dim != PropertyDim.scalar) { 
        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"
this.Write("    auto ofs_");

        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"
this.Write(" = ofs_");

        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( prev.name ));

        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"
this.Write(" + m_signature.");

        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( prev.name ));

        #line default
        #line hidden
        
        
        #line 1463 "LawT4.tt"
this.Write(".size();\n");

        #line default
        #line hidden
        
        
        #line 1464 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1466 "LawT4.tt"
this.Write("    auto ofs_");

        #line default
        #line hidden
        
        
        #line 1466 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1466 "LawT4.tt"
this.Write(" = ofs_");

        #line default
        #line hidden
        
        
        #line 1466 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( prev.name ));

        #line default
        #line hidden
        
        
        #line 1466 "LawT4.tt"
this.Write(" + 1;\n");

        #line default
        #line hidden
        
        
        #line 1467 "LawT4.tt"

    }
    prev = p;
  }
}

private void AllocateOnnxLocalData (string multSize)
{ 
        #line default
        #line hidden
        
        
        #line 1475 "LawT4.tt"
this.Write("    const int nb_law_input_prop =  _get_nb_input_properties();\n    std::vector<float> onnx_input_buffer(nb_law_input_prop");

        #line default
        #line hidden
        
        
        #line 1476 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(multSize));

        #line default
        #line hidden
        
        
        #line 1476 "LawT4.tt"
this.Write(");\n    const int nb_law_output_prop =  _get_nb_output_properties();\n    const int nb_law_derivatives = m_is_differentiable ? (nb_law_input_prop*nb_law_output_prop) : 0;\n    const int nb_law_output = nb_law_output_prop + nb_law_derivatives;\n    std::vector<float> onnx_output_buffer(nb_law_output");

        #line default
        #line hidden
        
        
        #line 1480 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(multSize));

        #line default
        #line hidden
        
        
        #line 1480 "LawT4.tt"
this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 1481 "LawT4.tt"
 }
    
private void AllocateLocalData ()
{ 
        #line default
        #line hidden
        
        
        #line 1485 "LawT4.tt"
this.Write("    // Allocate local inputs\n");

        #line default
        #line hidden
        
        
        #line 1486 "LawT4.tt"

  foreach(var i in Inputs) { 
    switch(i.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1490 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1490 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1490 "LawT4.tt"
this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1490 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1490 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1491 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1494 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1494 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1494 "LawT4.tt"
this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1494 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1494 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1494 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1494 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1495 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1498 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1498 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1498 "LawT4.tt"
this.Write("ConstArrayView ");

        #line default
        #line hidden
        
        
        #line 1498 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1498 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1499 "LawT4.tt"
 
    break;
    } 
  } 
        #line default
        #line hidden
        
        
        #line 1503 "LawT4.tt"
this.Write("    // Allocate local outputs\n");

        #line default
        #line hidden
        
        
        #line 1504 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1508 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1508 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1508 "LawT4.tt"
this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1508 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1508 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1509 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"
this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1513 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1514 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1517 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1517 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1517 "LawT4.tt"
this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1517 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1517 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1517 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1517 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1517 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1517 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1518 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1521 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1521 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1521 "LawT4.tt"
this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1521 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1521 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1521 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1521 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1521 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1521 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1522 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1528 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1528 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1528 "LawT4.tt"
this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1528 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1528 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1528 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1528 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1529 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1533 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1533 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1533 "LawT4.tt"
this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1533 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1533 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1533 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1533 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1533 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1533 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1534 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1537 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1537 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1537 "LawT4.tt"
this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1537 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1537 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1537 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1537 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1537 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1537 "LawT4.tt"
this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1537 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1537 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1538 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"
this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"
this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1541 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1542 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1548 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1548 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1548 "LawT4.tt"
this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1548 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1548 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1548 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1548 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1549 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1553 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1553 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1553 "LawT4.tt"
this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1553 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1553 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1553 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1553 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1553 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1553 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1554 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1557 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1557 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1557 "LawT4.tt"
this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1557 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1557 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1557 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1557 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1557 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1557 "LawT4.tt"
this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1557 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1557 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1558 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1561 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1561 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1561 "LawT4.tt"
this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1561 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1561 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1561 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1561 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1561 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1561 "LawT4.tt"
this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1561 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1561 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1562 "LawT4.tt"

      break;
      }
    }
    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 1569 "LawT4.tt"
this.Write("    // Allocate local parameters\n");

        #line default
        #line hidden
        
        
        #line 1570 "LawT4.tt"

  foreach(var p in Parameters) { 
    switch(p.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1574 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1574 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1574 "LawT4.tt"
this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1574 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1574 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1575 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1578 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1578 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1578 "LawT4.tt"
this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1578 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1578 "LawT4.tt"
this.Write("(m_signature.");

        #line default
        #line hidden
        
        
        #line 1578 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1578 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1579 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1582 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1582 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1582 "LawT4.tt"
this.Write("ConstArrayView ");

        #line default
        #line hidden
        
        
        #line 1582 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1582 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1583 "LawT4.tt"
 
    break;
    }
  }
}

private void CopyGlobalValuesToLocalOnnxValues (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1591 "LawT4.tt"
 foreach(var p in Inputs) {
    switch(p.dim) {
     case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"
this.Write("      onnx_input_buffer[in_index++] = var_");

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1594 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1595 "LawT4.tt"
   break;
     case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1597 "LawT4.tt"
this.Write(".size(); ++i) {\n        onnx_input_buffer[in_index++] = var_");

        #line default
        #line hidden
        
        
        #line 1598 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1598 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1598 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1598 "LawT4.tt"
this.Write(";\n      } \n");

        #line default
        #line hidden
        
        
        #line 1600 "LawT4.tt"
  break;
   }
  }
}

private void CopyLocalOnnxValuesToGlobalValues (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1607 "LawT4.tt"
 foreach(var p in Outputs) {
    switch(p.dim) {
     case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1610 "LawT4.tt"
this.Write("      var_");

        #line default
        #line hidden
        
        
        #line 1610 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1610 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1610 "LawT4.tt"
this.Write(" = onnx_output_buffer[out_index++];\n");

        #line default
        #line hidden
        
        
        #line 1611 "LawT4.tt"
   break;
     case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1613 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1613 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1613 "LawT4.tt"
this.Write(".size(); ++i) {\n        var_");

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1614 "LawT4.tt"
this.Write(" = onnx_output_buffer[out_index++];\n      } \n");

        #line default
        #line hidden
        
        
        #line 1616 "LawT4.tt"
  break;
   }
  }
}

private void CopyGlobalValuesToLocalValues (string op, bool vectorial_no_op = false)
{ 
        #line default
        #line hidden
        
        
        #line 1623 "LawT4.tt"
this.Write("      // Copy global inputs values to local values\n");

        #line default
        #line hidden
        
        
        #line 1624 "LawT4.tt"

  foreach(var i in Inputs) { 
    switch(i.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1628 "LawT4.tt"
this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1628 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1628 "LawT4.tt"
this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1628 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1628 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1628 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1629 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1632 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1632 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1632 "LawT4.tt"
this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1633 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1633 "LawT4.tt"
this.Write("[i] = var_");

        #line default
        #line hidden
        
        
        #line 1633 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1633 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1633 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1633 "LawT4.tt"
this.Write(";\n      }\n");

        #line default
        #line hidden
        
        
        #line 1635 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
    if(vectorial_no_op) { 
        #line default
        #line hidden
        
        
        #line 1639 "LawT4.tt"
this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1639 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1639 "LawT4.tt"
this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1639 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1639 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1640 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"
this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"
this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1642 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1643 "LawT4.tt"
 
    }
    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 1648 "LawT4.tt"
this.Write("      // Copy global parameters values to local values\n");

        #line default
        #line hidden
        
        
        #line 1649 "LawT4.tt"

  foreach(var p in Parameters) { 
    switch(p.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1653 "LawT4.tt"
this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1653 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1653 "LawT4.tt"
this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1653 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1653 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1653 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1654 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1657 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1657 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1657 "LawT4.tt"
this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1658 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1658 "LawT4.tt"
this.Write("[i] = var_");

        #line default
        #line hidden
        
        
        #line 1658 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1658 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1658 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1658 "LawT4.tt"
this.Write(";\n      }\n");

        #line default
        #line hidden
        
        
        #line 1660 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
    if(vectorial_no_op) { 
        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"
this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"
this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1664 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1665 "LawT4.tt"
 
    } else { 
        #line default
        #line hidden
        
        
        #line 1667 "LawT4.tt"
this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1667 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1667 "LawT4.tt"
this.Write(" = var_");

        #line default
        #line hidden
        
        
        #line 1667 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));

        #line default
        #line hidden
        
        
        #line 1667 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1667 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1668 "LawT4.tt"

    }
    break;
    }
  }
} 

private void CopyLocalOutputsValuesToGlobalValues (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1677 "LawT4.tt"
this.Write("      // Copy local outputs values to global values\n");

        #line default
        #line hidden
        
        
        #line 1678 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1682 "LawT4.tt"
this.Write("      var_");

        #line default
        #line hidden
        
        
        #line 1682 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1682 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1682 "LawT4.tt"
this.Write(" = ");

        #line default
        #line hidden
        
        
        #line 1682 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1682 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1683 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1686 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1686 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1686 "LawT4.tt"
this.Write(".size(); ++i) {\n        var_");

        #line default
        #line hidden
        
        
        #line 1687 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1687 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1687 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1687 "LawT4.tt"
this.Write(" = ");

        #line default
        #line hidden
        
        
        #line 1687 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1687 "LawT4.tt"
this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1689 "LawT4.tt"
 
    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1692 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1692 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1692 "LawT4.tt"
this.Write(".size(); ++i) {\n        var_");

        #line default
        #line hidden
        
        
        #line 1693 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1693 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1693 "LawT4.tt"
this.Write("[i] = ");

        #line default
        #line hidden
        
        
        #line 1693 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1693 "LawT4.tt"
this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1695 "LawT4.tt"
 
    break;
    }
  }
} 

private void CopyLocalOnnxOutputsDerivativesToGlobalDerivatives (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1703 "LawT4.tt"
this.Write("      // Copy local outputs derivatives from onnx to global derivatives\n");

        #line default
        #line hidden
        
        
        #line 1704 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1711 "LawT4.tt"
this.Write("      var_deriv_");

        #line default
        #line hidden
        
        
        #line 1711 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1711 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1711 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1711 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1711 "LawT4.tt"
this.Write("] = onnx_output_buffer[out_index++];\n");

        #line default
        #line hidden
        
        
        #line 1712 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1715 "LawT4.tt"
this.Write(".size(); ++i) {\n        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1716 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1716 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1716 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1716 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1716 "LawT4.tt"
this.Write("+i] = onnx_output_buffer[out_index++];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1718 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1724 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1724 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1724 "LawT4.tt"
this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 1725 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1729 "LawT4.tt"
this.Write("        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1729 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1729 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1729 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1729 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1729 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1729 "LawT4.tt"
this.Write("] = onnx_output_buffer[out_index++];\n");

        #line default
        #line hidden
        
        
        #line 1730 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1733 "LawT4.tt"
this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1733 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1733 "LawT4.tt"
this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1734 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1734 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1734 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1734 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1734 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1734 "LawT4.tt"
this.Write("+j] = onnx_output_buffer[out_index++];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1736 "LawT4.tt"

      break;
      }
    } 
        #line default
        #line hidden
        
        
        #line 1740 "LawT4.tt"
this.Write("      } \n");

        #line default
        #line hidden
        
        
        #line 1741 "LawT4.tt"

    break;
    }
  }
} 

private void CopyLocalOutputsDerivativesToGlobalDerivatives (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1749 "LawT4.tt"
this.Write("      // Copy local outputs derivatives to global derivatives\n");

        #line default
        #line hidden
        
        
        #line 1750 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"
this.Write("      var_deriv_");

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"
this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1757 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1758 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1761 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1761 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1761 "LawT4.tt"
this.Write(".size(); ++i) {\n        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"
this.Write("+i] = ");

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1762 "LawT4.tt"
this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1764 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1767 "LawT4.tt"
this.Write(".size(); ++i) {\n        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1768 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1768 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1768 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1768 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1768 "LawT4.tt"
this.Write("+i] = ");

        #line default
        #line hidden
        
        
        #line 1768 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1768 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1768 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1768 "LawT4.tt"
this.Write("[i];\n      }\n");

        #line default
        #line hidden
        
        
        #line 1770 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1776 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1776 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1776 "LawT4.tt"
this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 1777 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1781 "LawT4.tt"
this.Write("        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1781 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1781 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1781 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1781 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1781 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1781 "LawT4.tt"
this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1781 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1781 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1781 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1781 "LawT4.tt"
this.Write("[i];\n");

        #line default
        #line hidden
        
        
        #line 1782 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1785 "LawT4.tt"
this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1785 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1785 "LawT4.tt"
this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1786 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1786 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1786 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1786 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1786 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1786 "LawT4.tt"
this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1786 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1786 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1786 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1786 "LawT4.tt"
this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1788 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1791 "LawT4.tt"
this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1791 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1791 "LawT4.tt"
this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1792 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1792 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1792 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1792 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1792 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1792 "LawT4.tt"
this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1792 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1792 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1792 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1792 "LawT4.tt"
this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1794 "LawT4.tt"

      break;
      } 
    } 
        #line default
        #line hidden
        
        
        #line 1798 "LawT4.tt"
this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1799 "LawT4.tt"

    break;
    case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1802 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1802 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1802 "LawT4.tt"
this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 1803 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1807 "LawT4.tt"
this.Write("        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1807 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1807 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1807 "LawT4.tt"
this.Write("[i][ofs_");

        #line default
        #line hidden
        
        
        #line 1807 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1807 "LawT4.tt"
this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1807 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1807 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1807 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1807 "LawT4.tt"
this.Write("[i];\n");

        #line default
        #line hidden
        
        
        #line 1808 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1811 "LawT4.tt"
this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1811 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1811 "LawT4.tt"
this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1812 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1812 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1812 "LawT4.tt"
this.Write("[i][ofs_");

        #line default
        #line hidden
        
        
        #line 1812 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1812 "LawT4.tt"
this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1812 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1812 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1812 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1812 "LawT4.tt"
this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1814 "LawT4.tt"

      break;
      case PropertyDim.vectorial : 
        #line default
        #line hidden
        
        
        #line 1817 "LawT4.tt"
this.Write("        for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1817 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1817 "LawT4.tt"
this.Write(".size(); ++j) {\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1818 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1818 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1818 "LawT4.tt"
this.Write("[i][ofs_");

        #line default
        #line hidden
        
        
        #line 1818 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1818 "LawT4.tt"
this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1818 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1818 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1818 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1818 "LawT4.tt"
this.Write("[i][j];\n        }\n");

        #line default
        #line hidden
        
        
        #line 1820 "LawT4.tt"

      break;
      }
    } 
        #line default
        #line hidden
        
        
        #line 1824 "LawT4.tt"
this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1825 "LawT4.tt"

    break;
    }
  }
} 
private void AllocateLocalDataFiniteDiff ()
{ 
        #line default
        #line hidden
        
        
        #line 1832 "LawT4.tt"
this.Write("    // Allocate local outputs values to compute difference finite derivatives\n");

        #line default
        #line hidden
        
        
        #line 1833 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1837 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1837 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1837 "LawT4.tt"
this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1837 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1837 "LawT4.tt"
this.Write("_ref;\n");

        #line default
        #line hidden
        
        
        #line 1838 "LawT4.tt"
 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1842 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1842 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1842 "LawT4.tt"
this.Write(" ");

        #line default
        #line hidden
        
        
        #line 1842 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1842 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1842 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1842 "LawT4.tt"
this.Write("_diff;\n");

        #line default
        #line hidden
        
        
        #line 1843 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"
this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"
this.Write("_diff(m_signature.");

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1846 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1847 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1853 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1853 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1853 "LawT4.tt"
this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1853 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1853 "LawT4.tt"
this.Write("_ref(m_signature.");

        #line default
        #line hidden
        
        
        #line 1853 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1853 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1854 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1858 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1858 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1858 "LawT4.tt"
this.Write("UniqueArray ");

        #line default
        #line hidden
        
        
        #line 1858 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1858 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1858 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1858 "LawT4.tt"
this.Write("_diff(m_signature.");

        #line default
        #line hidden
        
        
        #line 1858 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1858 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1859 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
this.Write("    Arcane::");

        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.type.Name() ));

        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
this.Write("UniqueArray2 ");

        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
this.Write("_diff(m_signature.");

        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
this.Write(".size(),m_signature.");

        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1862 "LawT4.tt"
this.Write(".size());\n");

        #line default
        #line hidden
        
        
        #line 1863 "LawT4.tt"

      break;
      }
    }
    break;
    }
  }
}
private void CopyGlobalValuesOutputToLocalValues (string op, bool vectorial_no_op = false)
{ 
        #line default
        #line hidden
        
        
        #line 1873 "LawT4.tt"
this.Write("      // Copy global inputs values to local values\n");

        #line default
        #line hidden
        
        
        #line 1874 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1878 "LawT4.tt"
this.Write("      ");

        #line default
        #line hidden
        
        
        #line 1878 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1878 "LawT4.tt"
this.Write("_ref = var_");

        #line default
        #line hidden
        
        
        #line 1878 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1878 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1878 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1879 "LawT4.tt"
 
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"
this.Write("      for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1882 "LawT4.tt"
this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1883 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1883 "LawT4.tt"
this.Write("_ref[i] = var_");

        #line default
        #line hidden
        
        
        #line 1883 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1883 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1883 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1883 "LawT4.tt"
this.Write(";\n      }\n");

        #line default
        #line hidden
        
        
        #line 1885 "LawT4.tt"
 
    break;
    }
  }
}
private void ComputeDifferenceFiniteDerivatives ()
{
  foreach(var i in Inputs) { 
        #line default
        #line hidden
        
        
        #line 1893 "LawT4.tt"
this.Write("      // compute difference finite derivatives through ");

        #line default
        #line hidden
        
        
        #line 1893 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1893 "LawT4.tt"
this.Write("\n");

        #line default
        #line hidden
        
        
        #line 1894 "LawT4.tt"
 
    switch(i.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1897 "LawT4.tt"
this.Write("      {\n        ");

        #line default
        #line hidden
        
        
        #line 1898 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1898 "LawT4.tt"
this.Write(" += m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1898 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1898 "LawT4.tt"
this.Write(";\n        // Invoke user kernel\n        m_invoker(\n          ");

        #line default
        #line hidden
        
        
        #line 1901 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));

        #line default
        #line hidden
        
        
        #line 1901 "LawT4.tt"
this.Write("\n        );\n        ");

        #line default
        #line hidden
        
        
        #line 1903 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1903 "LawT4.tt"
this.Write(" -= m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1903 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1903 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1904 "LawT4.tt"
 
    foreach(var o in Outputs) {
      switch(o.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1908 "LawT4.tt"
this.Write("        ");

        #line default
        #line hidden
        
        
        #line 1908 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1908 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1908 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1908 "LawT4.tt"
this.Write("_diff = (");

        #line default
        #line hidden
        
        
        #line 1908 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1908 "LawT4.tt"
this.Write(" - ");

        #line default
        #line hidden
        
        
        #line 1908 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1908 "LawT4.tt"
this.Write("_ref) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1908 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1908 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1909 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1912 "LawT4.tt"
this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1912 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1912 "LawT4.tt"
this.Write(".size(); ++i)\n          ");

        #line default
        #line hidden
        
        
        #line 1913 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1913 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1913 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1913 "LawT4.tt"
this.Write("_diff[i] = (");

        #line default
        #line hidden
        
        
        #line 1913 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1913 "LawT4.tt"
this.Write("[i] - ");

        #line default
        #line hidden
        
        
        #line 1913 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1913 "LawT4.tt"
this.Write("_ref[i]) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1913 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1913 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1914 "LawT4.tt"

      break;
      }
    } 
        #line default
        #line hidden
        
        
        #line 1918 "LawT4.tt"
this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1919 "LawT4.tt"

    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"
this.Write("      for(int i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1922 "LawT4.tt"
this.Write(".size(); ++i) {\n        ");

        #line default
        #line hidden
        
        
        #line 1923 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1923 "LawT4.tt"
this.Write("[i] += m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1923 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1923 "LawT4.tt"
this.Write(";\n        // Invoke user kernel\n        m_invoker(\n          ");

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));

        #line default
        #line hidden
        
        
        #line 1926 "LawT4.tt"
this.Write("\n        );\n        ");

        #line default
        #line hidden
        
        
        #line 1928 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1928 "LawT4.tt"
this.Write("[i] -= m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1928 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1928 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1929 "LawT4.tt"

    foreach(var o in Outputs) {
      switch(o.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1933 "LawT4.tt"
this.Write("        ");

        #line default
        #line hidden
        
        
        #line 1933 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1933 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1933 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1933 "LawT4.tt"
this.Write("_diff[i] = (");

        #line default
        #line hidden
        
        
        #line 1933 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1933 "LawT4.tt"
this.Write(" - ");

        #line default
        #line hidden
        
        
        #line 1933 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1933 "LawT4.tt"
this.Write("_ref) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1933 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1933 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1934 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1937 "LawT4.tt"
this.Write("        for(int j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1937 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1937 "LawT4.tt"
this.Write(".size(); ++j)\n          ");

        #line default
        #line hidden
        
        
        #line 1938 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1938 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1938 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1938 "LawT4.tt"
this.Write("_diff[j][i] = (");

        #line default
        #line hidden
        
        
        #line 1938 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1938 "LawT4.tt"
this.Write("[j] - ");

        #line default
        #line hidden
        
        
        #line 1938 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1938 "LawT4.tt"
this.Write("_ref[j]) / m_epsilon.");

        #line default
        #line hidden
        
        
        #line 1938 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1938 "LawT4.tt"
this.Write(";\n");

        #line default
        #line hidden
        
        
        #line 1939 "LawT4.tt"

      break;
      }
    } 
        #line default
        #line hidden
        
        
        #line 1943 "LawT4.tt"
this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1944 "LawT4.tt"
           
    break;
    } 
  }
}
private void CopyLocalOutputsDerivativesDiffToGlobalDerivatives (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1951 "LawT4.tt"
this.Write("      // Overwrite global derivatives by difference finite ones\n      {\n");

        #line default
        #line hidden
        
        
        #line 1953 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1960 "LawT4.tt"
this.Write("        var_deriv_");

        #line default
        #line hidden
        
        
        #line 1960 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1960 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1960 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1960 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1960 "LawT4.tt"
this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1960 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1960 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1960 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1960 "LawT4.tt"
this.Write("_diff;\n");

        #line default
        #line hidden
        
        
        #line 1961 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1964 "LawT4.tt"
this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1964 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1964 "LawT4.tt"
this.Write(".size(); ++i)\n          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1965 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1965 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1965 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1965 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1965 "LawT4.tt"
this.Write("+i] = ");

        #line default
        #line hidden
        
        
        #line 1965 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1965 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1965 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1965 "LawT4.tt"
this.Write("_diff[i];\n");

        #line default
        #line hidden
        
        
        #line 1966 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"
this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1972 "LawT4.tt"
this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 1973 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"
this.Write("          var_deriv_");

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"
this.Write("] = ");

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1977 "LawT4.tt"
this.Write("_diff[i];\n");

        #line default
        #line hidden
        
        
        #line 1978 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 1981 "LawT4.tt"
this.Write("          for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 1981 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1981 "LawT4.tt"
this.Write(".size(); ++j)\n            var_deriv_");

        #line default
        #line hidden
        
        
        #line 1982 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1982 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 1982 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 1982 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 1982 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1982 "LawT4.tt"
this.Write("+j] = ");

        #line default
        #line hidden
        
        
        #line 1982 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 1982 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 1982 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 1982 "LawT4.tt"
this.Write("_diff[i][j];\n");

        #line default
        #line hidden
        
        
        #line 1983 "LawT4.tt"

      break;
      } 
    } 
        #line default
        #line hidden
        
        
        #line 1987 "LawT4.tt"
this.Write("        }\n");

        #line default
        #line hidden
        
        
        #line 1988 "LawT4.tt"

    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 1992 "LawT4.tt"
this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 1993 "LawT4.tt"

}
private void PrintDebugValuesInfos (string op)
{ 
        #line default
        #line hidden
        
        
        #line 1997 "LawT4.tt"
this.Write("      // Print debug values\n      {\n");

        #line default
        #line hidden
        
        
        #line 1999 "LawT4.tt"

  foreach(var o in InOutputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 2003 "LawT4.tt"
this.Write("        _print_value(\"");

        #line default
        #line hidden
        
        
        #line 2003 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2003 "LawT4.tt"
this.Write("\", var_");

        #line default
        #line hidden
        
        
        #line 2003 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2003 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2003 "LawT4.tt"
this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 2004 "LawT4.tt"

    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2007 "LawT4.tt"
this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 2007 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2007 "LawT4.tt"
this.Write(".size(); ++i)\n          _print_value(Arcane::String::format(\"");

        #line default
        #line hidden
        
        
        #line 2008 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2008 "LawT4.tt"
this.Write("[{0}]\",i), var_");

        #line default
        #line hidden
        
        
        #line 2008 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2008 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 2008 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2008 "LawT4.tt"
this.Write(");\n");

        #line default
        #line hidden
        
        
        #line 2009 "LawT4.tt"

    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 2013 "LawT4.tt"
this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 2014 "LawT4.tt"
    
}
private void PrintDebugDerivativesInfos (string op)
{ 
        #line default
        #line hidden
        
        
        #line 2018 "LawT4.tt"
this.Write("      // Print derivatives debug informations\n      {\n");

        #line default
        #line hidden
        
        
        #line 2020 "LawT4.tt"

  foreach(var o in Outputs) { 
    switch(o.dim) {
    case PropertyDim.scalar : 
    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write("        _print_derivatives(\"d");

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write("_d");

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write("\", var_deriv_");

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write("], ");

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2027 "LawT4.tt"
this.Write("_diff);\n");

        #line default
        #line hidden
        
        
        #line 2028 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2031 "LawT4.tt"
this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 2031 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2031 "LawT4.tt"
this.Write(".size(); ++i)\n          _print_derivatives(Arcane::String::format(\"d");

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write("_d");

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write("[{0}]\",i), var_deriv_");

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write("+i], ");

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2032 "LawT4.tt"
this.Write("_diff[i]);\n");

        #line default
        #line hidden
        
        
        #line 2033 "LawT4.tt"

      break;
      }
    }
    break;
    case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2039 "LawT4.tt"
this.Write("        for(auto i = 0; i < m_signature.");

        #line default
        #line hidden
        
        
        #line 2039 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2039 "LawT4.tt"
this.Write(".size(); ++i) {\n");

        #line default
        #line hidden
        
        
        #line 2040 "LawT4.tt"

    foreach(var i in Inputs) {
      switch(i.dim) {
      case PropertyDim.scalar : 
        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write("          _print_derivatives(Arcane::String::format(\"d");

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write("[{0}]_d");

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write("\",i), var_deriv_");

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write("], ");

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2044 "LawT4.tt"
this.Write("_diff[i]);\n");

        #line default
        #line hidden
        
        
        #line 2045 "LawT4.tt"

      break;
      case PropertyDim.multiscalar : 
        #line default
        #line hidden
        
        
        #line 2048 "LawT4.tt"
this.Write("          for(auto j = 0; j < m_signature.");

        #line default
        #line hidden
        
        
        #line 2048 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2048 "LawT4.tt"
this.Write(".size(); ++j)\n            _print_derivatives(Arcane::String::format(\"d");

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write("[{0}]_d");

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write("[{1}]\",i,j), var_deriv_");

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write("[i]");

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( op ));

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write("[ofs_");

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write("+j], ");

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( o.name ));

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write("_wrt_");

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));

        #line default
        #line hidden
        
        
        #line 2049 "LawT4.tt"
this.Write("_diff[i][j]);\n");

        #line default
        #line hidden
        
        
        #line 2050 "LawT4.tt"

      break;
      } 
    } 
        #line default
        #line hidden
        
        
        #line 2054 "LawT4.tt"
this.Write("        }\n");

        #line default
        #line hidden
        
        
        #line 2055 "LawT4.tt"

    break;
    }
  } 
        #line default
        #line hidden
        
        
        #line 2059 "LawT4.tt"
this.Write("      }\n");

        #line default
        #line hidden
        
        
        #line 2060 "LawT4.tt"
    
}

        #line default
        #line hidden
        
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 3 "LawT4.tt"
            this.Write("// ------------------------------------------------------------------------------\n//  <autogenerated>\n//      This code was generated by a tool. \n//      Changes to this file may cause incorrect behavior and will be lost if \n//      the code is regenerated.\n//  </autogenerated>\n// ------------------------------------------------------------------------------\n/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n\n#ifndef ARCGEOSIM_GENERATED_");
            
            #line default
            #line hidden
            
            #line 13 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name.ToUpper() ));
            
            #line default
            #line hidden
            
            #line 13 "LawT4.tt"
            this.Write("_LAW_H\n#define ARCGEOSIM_GENERATED_");
            
            #line default
            #line hidden
            
            #line 14 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name.ToUpper() ));
            
            #line default
            #line hidden
            
            #line 14 "LawT4.tt"
            this.Write("_LAW_H\n\n/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n\n");
            
            #line default
            #line hidden
            
            #line 19 "LawT4.tt"
 if(MultiThread == MultiThreadMode.ArcaneTBB){ 
            
            #line default
            #line hidden
            
            #line 20 "LawT4.tt"
            this.Write("#include <arcane/Concurrency.h>\n#include <arcane/utils/PlatformUtils.h>\n");
            
            #line default
            #line hidden
            
            #line 22 "LawT4.tt"
 }
   if(MultiThread == MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 24 "LawT4.tt"
            this.Write("#include <Kokkos_Core.hpp>\n");
            
            #line default
            #line hidden
            
            #line 25 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 26 "LawT4.tt"
            this.Write("#include \"ArcGeoSim/Physics/Law2/IFunction.h\"\n");
            
            #line default
            #line hidden
            
            #line 27 "LawT4.tt"
 if(Debug) { 
            
            #line default
            #line hidden
            
            #line 28 "LawT4.tt"
            this.Write("#include <arcane/utils/ITraceMng.h>\n");
            
            #line default
            #line hidden
            
            #line 29 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 30 "LawT4.tt"
 if(Inference == InferenceMode.ONNX){ 
            
            #line default
            #line hidden
            
            #line 31 "LawT4.tt"
            this.Write("#include <onnxruntime/core/session/onnxruntime_cxx_api.h>\n#include <algorithm>\n");
            
            #line default
            #line hidden
            
            #line 33 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 34 "LawT4.tt"
            this.Write("/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n\nnamespace ");
            
            #line default
            #line hidden
            
            #line 37 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 37 "LawT4.tt"
            this.Write(" {\n\n/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n\nstruct SignatureDescription\n{\n  struct ArgDescription {\n    Arcane::String name;\n    Arcane::String type;\n    Arcane::String dim;\n  };\n  Arcane::UniqueArray<ArgDescription> inputs;\n  Arcane::UniqueArray<ArgDescription> outputs;\n  Arcane::UniqueArray<ArgDescription> parameters;\n  SignatureDescription()\n  {\n");
            
            #line default
            #line hidden
            
            #line 54 "LawT4.tt"
 foreach(var p in Inputs) { 
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("    inputs.add({\"");
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.type ));
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.dim ));
            
            #line default
            #line hidden
            
            #line 55 "LawT4.tt"
            this.Write("\"});\n");
            
            #line default
            #line hidden
            
            #line 56 "LawT4.tt"
 } 
   foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("    outputs.add({\"");
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.type ));
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.dim ));
            
            #line default
            #line hidden
            
            #line 58 "LawT4.tt"
            this.Write("\"});\n");
            
            #line default
            #line hidden
            
            #line 59 "LawT4.tt"
 } 
   foreach(var p in Parameters) { 
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("    parameters.add({\"");
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.type ));
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("\",\"");
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.dim ));
            
            #line default
            #line hidden
            
            #line 61 "LawT4.tt"
            this.Write("\"});\n");
            
            #line default
            #line hidden
            
            #line 62 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 63 "LawT4.tt"
            this.Write("  }\n};\n\n/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n\nstruct Signature\n{\n");
            
            #line default
            #line hidden
            
            #line 71 "LawT4.tt"
 foreach(var p in AllProperties) { 
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write("  ");
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.Type ));
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 72 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 73 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 74 "LawT4.tt"
            this.Write("  \n};\n\n/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n\nclass Function\n  : public Law::IFunction\n{\npublic:\n");
            
            #line default
            #line hidden
            
            #line 84 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 85 "LawT4.tt"
            this.Write("  Function(const Signature& s, std::string& model_with_path)\n    : m_signature(s)\n    , m_environment(OrtLoggingLevel::ORT_LOGGING_LEVEL_WARNING)\n  {\n    _ckeck_signature();\n    _init_onnx_session(model_with_path);\n    _check_onnx_conformity();\n  }\n");
            
            #line default
            #line hidden
            
            #line 93 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 94 "LawT4.tt"
            this.Write("  template<typename UserAlgo, typename Method>\n  Function(const Signature& s,\n           UserAlgo& kernel,\n           Method method)\n    : m_signature(s)\n  {\n    _ckeck_signature();\n    \n    typedef void (UserAlgo::*requiredSignature)(\n      ");
            
            #line default
            #line hidden
            
            #line 103 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Signature ));
            
            #line default
            #line hidden
            
            #line 103 "LawT4.tt"
            this.Write("\n    );\n\n    typedef void (UserAlgo::*requiredConstSignature)(\n      ");
            
            #line default
            #line hidden
            
            #line 107 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Signature ));
            
            #line default
            #line hidden
            
            #line 107 "LawT4.tt"
            this.Write("\n    ) const;\n\n    static_assert(\n        std::is_same<Method,requiredSignature>::value ||\n        std::is_same<Method,requiredConstSignature>::value,\n        \"Required signature and method given mismatch !!\");\n\n    m_invoker = [&,method](\n      ");
            
            #line default
            #line hidden
            
            #line 116 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( CallSignature ));
            
            #line default
            #line hidden
            
            #line 116 "LawT4.tt"
            this.Write("\n    ) { (kernel.*method)(");
            
            #line default
            #line hidden
            
            #line 117 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( ArgSignature ));
            
            #line default
            #line hidden
            
            #line 117 "LawT4.tt"
            this.Write("); };\n  }\n");
            
            #line default
            #line hidden
            
            #line 119 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 120 "LawT4.tt"
            this.Write("\n  ~Function() {}\n\npublic:\n\n  Arcane::Integer id() const { return out()[0].id(); }\n  \n  Arcane::String name() const { return \"");
            
            #line default
            #line hidden
            
            #line 127 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 127 "LawT4.tt"
            this.Write("\"; }\n\n  Law::PropertyVector in() const\n  {\n    Law::PropertyVector v;\n");
            
            #line default
            #line hidden
            
            #line 132 "LawT4.tt"
 foreach(var p in Inputs) { 
            
            #line default
            #line hidden
            
            #line 133 "LawT4.tt"
            this.Write("    v << m_signature.");
            
            #line default
            #line hidden
            
            #line 133 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 133 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 134 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 135 "LawT4.tt"
            this.Write("    return v;\n  }\n\n  Law::PropertyVector out() const\n  {\n    Law::PropertyVector v;\n");
            
            #line default
            #line hidden
            
            #line 141 "LawT4.tt"
 foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 142 "LawT4.tt"
            this.Write("    v << m_signature.");
            
            #line default
            #line hidden
            
            #line 142 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 142 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 143 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 144 "LawT4.tt"
            this.Write("    return v;\n  }\n\n  Law::PropertyVector parameters() const\n  {\n    Law::PropertyVector v;\n");
            
            #line default
            #line hidden
            
            #line 150 "LawT4.tt"
 foreach(var p in Parameters) { 
            
            #line default
            #line hidden
            
            #line 151 "LawT4.tt"
            this.Write("    v << m_signature.");
            
            #line default
            #line hidden
            
            #line 151 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 151 "LawT4.tt"
            this.Write(";\n");
            
            #line default
            #line hidden
            
            #line 152 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 153 "LawT4.tt"
            this.Write("    return v;\n  }\n\n");
            
            #line default
            #line hidden
            
            #line 156 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 157 "LawT4.tt"
            this.Write("  bool isDifferentiable() const { return m_is_differentiable; }\n");
            
            #line default
            #line hidden
            
            #line 158 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 159 "LawT4.tt"
            this.Write("  bool isDifferentiable() const { return true; }\n");
            
            #line default
            #line hidden
            
            #line 160 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 161 "LawT4.tt"
            this.Write("  bool isParameter() const { return false; }\n\n  const Signature& signature() { return m_signature; }\n  \nprivate:\n\n");
            
            #line default
            #line hidden
            
            #line 167 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 168 "LawT4.tt"
            this.Write("  // onnxruntime setup environment and session\n  void _init_onnx_session(std::string& model_with_path)\n  {\n    Ort::SessionOptions session_options;\n    session_options.SetIntraOpNumThreads(1);\n    session_options.SetGraphOptimizationLevel(GraphOptimizationLevel::ORT_ENABLE_EXTENDED);\n    m_session = std::make_unique<Ort::Session>(m_environment, model_with_path.c_str(), session_options);\n    Ort::TypeInfo type_info = m_session->GetOutputTypeInfo(0);\n    auto tensor_info = type_info.GetTensorTypeAndShapeInfo();\n    m_is_differentiable = (tensor_info.GetShape()[2] != _get_nb_output_properties());\n  }\n  \n  void _check_onnx_conformity()\n  {\n    _check_onnx_input_tensor_shape_and_type();\n    _check_onnx_output_tensor_shape_and_type();\n  }\n\n  void _check_onnx_input_tensor_shape_and_type()\n  {\n    // number of inputs\n    if(m_session->GetInputCount()!=1)\n      throw Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 190 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 190 "LawT4.tt"
            this.Write(" onnx input size must be 1\");\n    Ort::TypeInfo type_info = m_session->GetInputTypeInfo(0);\n    auto tensor_info = type_info.GetTensorTypeAndShapeInfo();\n    \n    // tensor 3 axis\n    if(tensor_info.GetDimensionsCount()!=3)\n      throw Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 196 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 196 "LawT4.tt"
            this.Write(" onnx dimension must be 3\");\n    \n    // -1 on axis 1: batch size variable, number of output properties on axis 3\n    int nb_law_input_prop = _get_nb_input_properties();\n    if(tensor_info.GetShape() != std::vector<int64_t>{ -1, 1, nb_law_input_prop } )\n      throw Arcane::FatalErrorException(Arcane::String::format(\"");
            
            #line default
            #line hidden
            
            #line 201 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 201 "LawT4.tt"
            this.Write(" onnx shape must be {-1, 1, {0}}\", nb_law_input_prop));\n      \n    // float precision model our convention\n    if(tensor_info.GetElementType()!=ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT)\n      throw Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 205 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 205 "LawT4.tt"
            this.Write(" onnx element type must be float\");\n  }\n  \n  void _check_onnx_output_tensor_shape_and_type()\n  {\n    // number of outputs\n    if(m_session->GetOutputCount()!=1)\n      throw Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 212 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 212 "LawT4.tt"
            this.Write(" onnx output size must be 1\");\n    \n    Ort::TypeInfo type_info = m_session->GetOutputTypeInfo(0);\n    auto tensor_info = type_info.GetTensorTypeAndShapeInfo();\n    \n    // tensor 3 axis\n    if(tensor_info.GetDimensionsCount()!=3)\n      throw Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 219 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 219 "LawT4.tt"
            this.Write(" onnx dimension must be 3\");\n      \n    \n    // -1 on axis 1: batch size variable, number of output properties on axis 3\n    int nb_law_output_prop = _get_nb_output_properties();\n    int nb_law_output_prop_with_deriv = (_get_nb_input_properties()+1)*nb_law_output_prop;\n    if(tensor_info.GetShape() != std::vector<int64_t>{ -1, 1, nb_law_output_prop } \n       && tensor_info.GetShape() != std::vector<int64_t>{ -1, 1, nb_law_output_prop_with_deriv } )\n      throw Arcane::FatalErrorException(Arcane::String::format(\n      \"");
            
            #line default
            #line hidden
            
            #line 228 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 228 "LawT4.tt"
            this.Write(" onnx shape must be {-1, 1, {0} or {1}} with or without derivatives\", nb_law_output_prop_with_deriv, nb_law_output_prop));\n      \n    // float precision model our convention\n    if(tensor_info.GetElementType()!=ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT)\n      throw Arcane::FatalErrorException(\"");
            
            #line default
            #line hidden
            
            #line 232 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 232 "LawT4.tt"
            this.Write(" onnx element type must be float\");\n  }\n  \n");
            
            #line default
            #line hidden
            
            #line 235 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 236 "LawT4.tt"
            this.Write("  void _ckeck_signature()\n  {\n    Law::PropertyVector v;\n");
            
            #line default
            #line hidden
            
            #line 239 "LawT4.tt"
 foreach(var p in Outputs) { 
            
            #line default
            #line hidden
            
            #line 240 "LawT4.tt"
   if(p.dim == PropertyDim.multiscalar) { 
            
            #line default
            #line hidden
            
            #line 241 "LawT4.tt"
            this.Write("    for(auto i = 0; i < m_signature.");
            
            #line default
            #line hidden
            
            #line 241 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 241 "LawT4.tt"
            this.Write(".size(); ++i)\n      _check_prop_uniq(v, m_signature.");
            
            #line default
            #line hidden
            
            #line 242 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 242 "LawT4.tt"
            this.Write("[i], \"");
            
            #line default
            #line hidden
            
            #line 242 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 242 "LawT4.tt"
            this.Write("[\"+std::to_string(i)+\"]\");\n");
            
            #line default
            #line hidden
            
            #line 243 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 244 "LawT4.tt"
            this.Write("    _check_prop_uniq(v, m_signature.");
            
            #line default
            #line hidden
            
            #line 244 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 244 "LawT4.tt"
            this.Write(", \"");
            
            #line default
            #line hidden
            
            #line 244 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 244 "LawT4.tt"
            this.Write("\");\n");
            
            #line default
            #line hidden
            
            #line 245 "LawT4.tt"
   } 
            
            #line default
            #line hidden
            
            #line 246 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 247 "LawT4.tt"
            this.Write("  }\n  \n  void _check_prop_uniq(Law::PropertyVector& v, const Law::Property& p, const std::string& p_name)\n  {\n    if(v.contains(p)) _error_signature(p_name);\n    v << p;\n  }\n  \n  void _error_signature(const std::string& prop_name)\n  {\n    throw Arcane::FatalErrorException(\n       \"");
            
            #line default
            #line hidden
            
            #line 258 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 258 "LawT4.tt"
            this.Write("::Signature property uniqueness error, check \" + prop_name + \" property signature assignment\"\n    );\n  }\n\npublic:\n\n  void evaluate(const Law::VariableAccessor& accessor,\n                const Arcane::ItemGroup& group,\n                const Law::EvaluationMode mode,\n                Arcane::Integer static_size = 0) const\n  {\n    _evaluate(mode, static_size, accessor, group);\n  }\n\n  void evaluate(const Law::PartialVariableAccessor& accessor,\n                const Arcane::ItemGroup& group,\n                const Law::EvaluationMode mode,\n                Arcane::Integer static_size = 0) const\n  {\n    _evaluate(mode, static_size, accessor, group);\n  }\n\n  void evaluate(const Law::ArrayAccessor& accessor,\n                const Arcane::Integer& begin,\n                const Arcane::Integer& end,\n                const Law::EvaluationMode mode,\n                Arcane::Integer static_size = 0) const\n  {\n    _evaluate(mode, static_size, accessor, begin, end);\n  }\n\n  void evaluate(const Law::ScalarAccessor& accessor,\n                const Law::EvaluationMode mode,\n                Arcane::Integer static_size = 0) const\n  {\n    _evaluate(mode, static_size, accessor);\n  }\n\nprivate:\n\n");
            
            #line default
            #line hidden
            
            #line 298 "LawT4.tt"
 if(Inference == InferenceMode.ONNX) { 
            
            #line default
            #line hidden
            
            #line 299 "LawT4.tt"
            this.Write("\n  int _get_nb_output_properties() const {\n    int nb_law_output_prop = 0;\n");
            
            #line default
            #line hidden
            
            #line 302 "LawT4.tt"
 foreach(var p in Outputs) {
   switch(p.dim) {
    case PropertyDim.scalar : 
            
            #line default
            #line hidden
            
            #line 305 "LawT4.tt"
            this.Write("    nb_law_output_prop++;\n");
            
            #line default
            #line hidden
            
            #line 306 "LawT4.tt"
  break; 
    case PropertyDim.multiscalar : 
            
            #line default
            #line hidden
            
            #line 308 "LawT4.tt"
            this.Write("    nb_law_output_prop+=m_signature.");
            
            #line default
            #line hidden
            
            #line 308 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 308 "LawT4.tt"
            this.Write(".size();\n");
            
            #line default
            #line hidden
            
            #line 309 "LawT4.tt"
  break;
    }
   } 
            
            #line default
            #line hidden
            
            #line 312 "LawT4.tt"
            this.Write("    return nb_law_output_prop;\n  }\n  int _get_nb_input_properties() const {\n    int nb_law_input_prop = 0;\n");
            
            #line default
            #line hidden
            
            #line 316 "LawT4.tt"
 foreach(var p in Inputs) {
   switch(p.dim) {
    case PropertyDim.scalar : 
            
            #line default
            #line hidden
            
            #line 319 "LawT4.tt"
            this.Write("    nb_law_input_prop++;\n");
            
            #line default
            #line hidden
            
            #line 320 "LawT4.tt"
  break; 
    case PropertyDim.multiscalar : 
            
            #line default
            #line hidden
            
            #line 322 "LawT4.tt"
            this.Write("    nb_law_input_prop+=m_signature.");
            
            #line default
            #line hidden
            
            #line 322 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( p.name ));
            
            #line default
            #line hidden
            
            #line 322 "LawT4.tt"
            this.Write(".size();\n");
            
            #line default
            #line hidden
            
            #line 323 "LawT4.tt"
  break;
    }
   } 
            
            #line default
            #line hidden
            
            #line 326 "LawT4.tt"
            this.Write("    return nb_law_input_prop;\n  }\n  \n  void _computeOnnxInference(std::vector<float>& onnx_input_buffer, \n                             std::vector<float>& onnx_output_buffer, \n                             const int batch_size) const\n  {\n\t// input output dims + batch size all group\n    Ort::TypeInfo input_type_info = m_session->GetInputTypeInfo(0);\n    auto input_tensor_info = input_type_info.GetTensorTypeAndShapeInfo();\n    std::vector<int64_t> input_dims = input_tensor_info.GetShape();\n    input_dims[0] = batch_size;\n\t\n    // output dims + batch size all group\n    Ort::TypeInfo output_type_info = m_session->GetOutputTypeInfo(0);\n    auto output_tensor_info = output_type_info.GetTensorTypeAndShapeInfo();\n    std::vector<int64_t> output_dims = output_tensor_info.GetShape();\n    output_dims[0] = batch_size;\n\t\n\t// tensors creation\n    std::vector<Ort::Value> input_tensors;\n    std::vector<Ort::Value> output_tensors;\n\n    Ort::MemoryInfo memory_info = Ort::MemoryInfo::CreateCpu( \n                                  OrtAllocatorType::OrtArenaAllocator, \n                                  OrtMemType::OrtMemTypeDefault);   \n               \n    input_tensors.push_back(Ort::Value::CreateTensor<float>(memory_info, \n                              onnx_input_buffer.data(), onnx_input_buffer.size(),\n                              input_dims.data(), input_dims.size()));      \n    \n    output_tensors.push_back(Ort::Value::CreateTensor<float>(memory_info,\n                              onnx_output_buffer.data(), onnx_output_buffer.size(), \n                              output_dims.data(), output_dims.size()));\n            \n    // serving names\n    std::string input_name = m_session->GetInputNameAllocated(0, Ort::AllocatorWithDefaultOptions()).get();\n    std::vector<const char*>  input_names{input_name.c_str()};\n    std::string output_name = m_session->GetOutputNameAllocated(0, Ort::AllocatorWithDefaultOptions()).get();\n    std::vector<const char*> output_names{output_name.c_str()};\n    \n    // model inference\n    m_session->Run(Ort::RunOptions{nullptr}, \n\t               input_names.data(), input_tensors.data(), 1, \n\t               output_names.data(),output_tensors.data(), 1);\n  }\n\n  void _evaluateOnlyValues(const Law::VariableAccessor& accessor,\n                           const Arcane::ItemGroup& group) const\n  {\n\n");
            
            #line default
            #line hidden
            
            #line 377 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 378 "LawT4.tt"
            this.Write("  \n    // change to constructor for less memory create\n    const int group_size = group.size();\n");
            
            #line default
            #line hidden
            
            #line 381 "LawT4.tt"
 AllocateOnnxLocalData ("*group_size"); 
            
            #line default
            #line hidden
            
            #line 382 "LawT4.tt"
            this.Write("    \n    // copy + cast\n    int in_index = 0;\n    ENUMERATE_ITEM(iitem, group)\n    {\n");
            
            #line default
            #line hidden
            
            #line 387 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 388 "LawT4.tt"
            this.Write("    } \n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, group_size);\n                    \n    // copy onnx results into law data             \n    int out_index = 0;\n    ENUMERATE_ITEM(iitem, group) \n    {\n");
            
            #line default
            #line hidden
            
            #line 395 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 396 "LawT4.tt"
            this.Write("      out_index += nb_law_derivatives;\n    }                    \n  }\n\n  void _evaluateOnlyValues(const Law::PartialVariableAccessor& accessor,\n                           const Arcane::ItemGroup& group) const\n  {\n  \n");
            
            #line default
            #line hidden
            
            #line 404 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 405 "LawT4.tt"
            this.Write("\n    // change to constructor for less memory create\n    const int group_size = group.size();\n");
            
            #line default
            #line hidden
            
            #line 408 "LawT4.tt"
 AllocateOnnxLocalData ("*group_size"); 
            
            #line default
            #line hidden
            
            #line 409 "LawT4.tt"
            this.Write("    \n    // copy + cast\n    int in_index = 0;\n    ENUMERATE_ITEM(iitem, group)\n    {\n");
            
            #line default
            #line hidden
            
            #line 414 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 415 "LawT4.tt"
            this.Write("    }\n \n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, group_size);\n                    \n    // copy onnx results into law data             \n    int out_index = 0;\n    ENUMERATE_ITEM(iitem, group) \n    {\n");
            
            #line default
            #line hidden
            
            #line 423 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 424 "LawT4.tt"
            this.Write("      out_index += nb_law_derivatives;\n    }\n\n  }\n  \n  void _evaluateOnlyValues(const Law::ArrayAccessor& accessor,\n                           const Arcane::Integer& begin,\n                           const Arcane::Integer& end) const\n  {\n\n");
            
            #line default
            #line hidden
            
            #line 434 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 435 "LawT4.tt"
            this.Write("\n    // change to constructor for less memory create\n    const int vector_size = end - begin;\n");
            
            #line default
            #line hidden
            
            #line 438 "LawT4.tt"
 AllocateOnnxLocalData ("*vector_size"); 
            
            #line default
            #line hidden
            
            #line 439 "LawT4.tt"
            this.Write("  \n    \n    // copy + cast\n    int in_index=0;\n    for(int index = begin; index < end; ++index) {\n");
            
            #line default
            #line hidden
            
            #line 444 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 445 "LawT4.tt"
            this.Write("    }\n    \n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, vector_size);\n    \n    // copy onnx results into law data\n    int out_index=0;\n    for(int index = begin; index < end; ++index) {\n");
            
            #line default
            #line hidden
            
            #line 452 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 453 "LawT4.tt"
            this.Write("      out_index += nb_law_derivatives;\n    }\n  }\n  \n  void _evaluateOnlyValues(const Law::ScalarAccessor& accessor) const\n  {\n\n");
            
            #line default
            #line hidden
            
            #line 460 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 461 "LawT4.tt"
            this.Write("\n");
            
            #line default
            #line hidden
            
            #line 462 "LawT4.tt"
 AllocateOnnxLocalData (""); 
            
            #line default
            #line hidden
            
            #line 463 "LawT4.tt"
            this.Write("    \n    // copy + cast\n    int in_index=0;\n");
            
            #line default
            #line hidden
            
            #line 466 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("()"); 
            
            #line default
            #line hidden
            
            #line 467 "LawT4.tt"
            this.Write("    \n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, 1);\n    \n    // copy onnx results into law data\n    int out_index=0;\n");
            
            #line default
            #line hidden
            
            #line 472 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues (""); 
            
            #line default
            #line hidden
            
            #line 473 "LawT4.tt"
            this.Write("\n  }\n  \n  void _evaluate(Arcane::Integer size,\n                 const Law::VariableAccessor& accessor,\n                 const Arcane::ItemGroup& group) const\n  {\n\n");
            
            #line default
            #line hidden
            
            #line 481 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 482 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 483 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 484 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 485 "LawT4.tt"
            this.Write("\n    // change to constructor for less memory create\n    const int group_size = group.size();  \n");
            
            #line default
            #line hidden
            
            #line 488 "LawT4.tt"
 AllocateOnnxLocalData ("*group_size"); 
            
            #line default
            #line hidden
            
            #line 489 "LawT4.tt"
            this.Write(" \n    \n    // copy + cast\n    int in_index = 0;\n    ENUMERATE_ITEM(iitem, group)\n    {\n");
            
            #line default
            #line hidden
            
            #line 495 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 496 "LawT4.tt"
            this.Write("    } \n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, group_size);\n                    \n    // copy onnx results into law data             \n    int out_index = 0;\n    ENUMERATE_ITEM(iitem, group) \n    {\n");
            
            #line default
            #line hidden
            
            #line 503 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 504 "LawT4.tt"
 CopyLocalOnnxOutputsDerivativesToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 505 "LawT4.tt"
            this.Write("    }                    \n  }\n  \n  void _evaluate(Arcane::Integer size,\n                 const Law::PartialVariableAccessor& accessor,\n                 const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 512 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 513 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 514 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 515 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 516 "LawT4.tt"
            this.Write("\n    // change to constructor for less memory create\n    const int group_size = group.size();  \n");
            
            #line default
            #line hidden
            
            #line 519 "LawT4.tt"
 AllocateOnnxLocalData ("*group_size"); 
            
            #line default
            #line hidden
            
            #line 520 "LawT4.tt"
            this.Write(" \n    \n    // copy + cast\n    int in_index = 0;\n    ENUMERATE_ITEM(iitem, group)\n    {\n");
            
            #line default
            #line hidden
            
            #line 526 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 527 "LawT4.tt"
            this.Write("    } \n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, group_size);\n                    \n    // copy onnx results into law data             \n    int out_index = 0;\n    ENUMERATE_ITEM(iitem, group) \n    {\n");
            
            #line default
            #line hidden
            
            #line 534 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 535 "LawT4.tt"
 CopyLocalOnnxOutputsDerivativesToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 536 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _evaluate(Arcane::Integer size,\n                 const Law::ArrayAccessor& accessor,\n                 const Arcane::Integer& begin,\n                 const Arcane::Integer& end) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 544 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 545 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 546 "LawT4.tt"
 ResizeGlobalDerivatives (true); 
            
            #line default
            #line hidden
            
            #line 547 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 548 "LawT4.tt"
            this.Write("   // change to constructor for less memory create\n   const int vector_size = end - begin;\n");
            
            #line default
            #line hidden
            
            #line 550 "LawT4.tt"
 AllocateOnnxLocalData ("*vector_size"); 
            
            #line default
            #line hidden
            
            #line 551 "LawT4.tt"
            this.Write(" \n    \n    // copy + cast\n    int in_index = 0;\n    for(Arcane::Integer index = begin; index < end; ++index)\n    {\n");
            
            #line default
            #line hidden
            
            #line 557 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 558 "LawT4.tt"
            this.Write("    } \n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, vector_size);\n                    \n    // copy onnx results into law data             \n    int out_index = 0;\n    for(Arcane::Integer index = begin; index < end; ++index)\n    {\n");
            
            #line default
            #line hidden
            
            #line 565 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 566 "LawT4.tt"
 CopyLocalOnnxOutputsDerivativesToGlobalDerivatives ("[index]"); 
            
            #line default
            #line hidden
            
            #line 567 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _evaluate(Arcane::Integer size,\n                 const Law::ScalarAccessor& accessor) const\n  {\n    \n");
            
            #line default
            #line hidden
            
            #line 574 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 575 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 576 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 577 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 578 "LawT4.tt"
            this.Write("\n");
            
            #line default
            #line hidden
            
            #line 579 "LawT4.tt"
 AllocateOnnxLocalData (""); 
            
            #line default
            #line hidden
            
            #line 580 "LawT4.tt"
            this.Write("    \n    // copy + cast\n    int in_index=0;\n");
            
            #line default
            #line hidden
            
            #line 583 "LawT4.tt"
 CopyGlobalValuesToLocalOnnxValues ("()"); 
            
            #line default
            #line hidden
            
            #line 584 "LawT4.tt"
            this.Write("    \n    _computeOnnxInference(onnx_input_buffer, onnx_output_buffer, 1);\n    \n    // copy onnx results into law data\n    int out_index=0;\n");
            
            #line default
            #line hidden
            
            #line 589 "LawT4.tt"
 CopyLocalOnnxValuesToGlobalValues (""); 
            
            #line default
            #line hidden
            
            #line 590 "LawT4.tt"
 CopyLocalOnnxOutputsDerivativesToGlobalDerivatives (""); 
            
            #line default
            #line hidden
            
            #line 591 "LawT4.tt"
            this.Write("\n  }\n\n");
            
            #line default
            #line hidden
            
            #line 594 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 595 "LawT4.tt"
            this.Write("\n  void _evaluateOnlyValues(const Law::VariableAccessor& accessor,\n                           const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 599 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 600 "LawT4.tt"
 String groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 601 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 602 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 603 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 603 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 604 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 605 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 607 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 607 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 609 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 610 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluateOnlyValues(const Law::PartialVariableAccessor& accessor,\n                           const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 616 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 617 "LawT4.tt"
 groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 618 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 619 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 620 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 620 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 621 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 622 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 624 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 624 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 626 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 627 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluateOnlyValues(const Law::ArrayAccessor& accessor,\n                           const Arcane::Integer& begin,\n                           const Arcane::Integer& end) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 634 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 635 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 636 "LawT4.tt"
            this.Write("    // Evaluation loop\n    for(Arcane::Integer index = begin; index < end; ++index) {\n");
            
            #line default
            #line hidden
            
            #line 638 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 639 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 641 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 641 "LawT4.tt"
            this.Write("\n      ); \n");
            
            #line default
            #line hidden
            
            #line 643 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 644 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluateOnlyValues(const Law::ScalarAccessor& accessor) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 649 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 650 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 651 "LawT4.tt"
            this.Write("    {\n");
            
            #line default
            #line hidden
            
            #line 652 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 653 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 655 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 655 "LawT4.tt"
            this.Write("\n      ); \n");
            
            #line default
            #line hidden
            
            #line 657 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues (""); 
            
            #line default
            #line hidden
            
            #line 658 "LawT4.tt"
            this.Write("    }\n  }\n\nprotected:\n  void _evaluate(Arcane::Integer size,\n                 const Law::VariableAccessor& accessor,\n                 const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 666 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 667 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 668 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 669 "LawT4.tt"
 groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 670 "LawT4.tt"
 
  
   if(MultiThread == MultiThreadMode.ArcaneTBB) { 
     groupName = "items"; 
            
            #line default
            #line hidden
            
            #line 674 "LawT4.tt"
            this.Write("    auto partialEvaluateItem = [&](Arcane::ItemVectorView items) {\n");
            
            #line default
            #line hidden
            
            #line 675 "LawT4.tt"
 }
   else if(MultiThread == MultiThreadMode.Kokkos) {

            
            #line default
            #line hidden
            
            #line 678 "LawT4.tt"
            this.Write("     auto group_view = group.view();\n     auto partialEvaluateItem = [&](const int i) {\n     auto iitem = group_view[i];\n");
            
            #line default
            #line hidden
            
            #line 681 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 682 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 683 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 684 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos) { 
            
            #line default
            #line hidden
            
            #line 685 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 686 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 686 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 687 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 688 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 689 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 691 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 691 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 693 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 694 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 695 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 696 "LawT4.tt"
            this.Write("    }\n");
            
            #line default
            #line hidden
            
            #line 697 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 698 "LawT4.tt"
 if(MultiThread == MultiThreadMode.ArcaneTBB){ 
            
            #line default
            #line hidden
            
            #line 699 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 700 "LawT4.tt"
 parallelEnumerate("group","partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 702 "LawT4.tt"
 if(MultiThread == MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 703 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 704 "LawT4.tt"
 parallelEnumerate(Model.name, "partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 706 "LawT4.tt"
            this.Write("  }\n\n  void _evaluate(Arcane::Integer size,\n                 const Law::PartialVariableAccessor& accessor,\n                 const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 712 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 713 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 714 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 715 "LawT4.tt"
 groupName = "group"; 
            
            #line default
            #line hidden
            
            #line 716 "LawT4.tt"
 
  
   if(MultiThread == MultiThreadMode.ArcaneTBB) { 
     groupName = "items"; 
            
            #line default
            #line hidden
            
            #line 720 "LawT4.tt"
            this.Write("    auto partialEvaluateItem = [&](Arcane::ItemVectorView items) {\n");
            
            #line default
            #line hidden
            
            #line 721 "LawT4.tt"
 }
   else if(MultiThread == MultiThreadMode.Kokkos) {

            
            #line default
            #line hidden
            
            #line 724 "LawT4.tt"
            this.Write("     auto group_view = group.view();\n     auto partialEvaluateItem = [&](const int i) {\n     auto iitem = group_view[i];\n");
            
            #line default
            #line hidden
            
            #line 727 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 728 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 729 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 730 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos) { 
            
            #line default
            #line hidden
            
            #line 731 "LawT4.tt"
            this.Write("    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, ");
            
            #line default
            #line hidden
            
            #line 732 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(groupName));
            
            #line default
            #line hidden
            
            #line 732 "LawT4.tt"
            this.Write(") {\n");
            
            #line default
            #line hidden
            
            #line 733 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 734 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 735 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 737 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 737 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 739 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 740 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 741 "LawT4.tt"
 if(MultiThread != MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 742 "LawT4.tt"
            this.Write("    }\n");
            
            #line default
            #line hidden
            
            #line 743 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 744 "LawT4.tt"
 if(MultiThread == MultiThreadMode.ArcaneTBB){ 
            
            #line default
            #line hidden
            
            #line 745 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 746 "LawT4.tt"
 parallelEnumerate("group","partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 748 "LawT4.tt"
 if(MultiThread == MultiThreadMode.Kokkos){ 
            
            #line default
            #line hidden
            
            #line 749 "LawT4.tt"
            this.Write("    };\n");
            
            #line default
            #line hidden
            
            #line 750 "LawT4.tt"
 parallelEnumerate(Model.name, "partialEvaluateItem");  
  } 
            
            #line default
            #line hidden
            
            #line 752 "LawT4.tt"
            this.Write("  }\n\n  void _evaluate(Arcane::Integer size,\n                 const Law::ArrayAccessor& accessor,\n                 const Arcane::Integer& begin,\n                 const Arcane::Integer& end) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 759 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 760 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 761 "LawT4.tt"
 ResizeGlobalDerivatives (true); 
            
            #line default
            #line hidden
            
            #line 762 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 763 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 764 "LawT4.tt"
            this.Write("    // Evaluation loop\n    for(Arcane::Integer index = begin; index < end; ++index) {\n");
            
            #line default
            #line hidden
            
            #line 766 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 767 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 769 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 769 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 771 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 772 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives ("[index]"); 
            
            #line default
            #line hidden
            
            #line 773 "LawT4.tt"
            this.Write("    }\n  }\n\n  void _evaluate(Arcane::Integer size,\n                 const Law::ScalarAccessor& accessor) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 779 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 780 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 781 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 782 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 783 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 784 "LawT4.tt"
            this.Write("    {\n");
            
            #line default
            #line hidden
            
            #line 785 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 786 "LawT4.tt"
            this.Write("      // Invoke user kernel\n      m_invoker(\n        ");
            
            #line default
            #line hidden
            
            #line 788 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( InvokerCallSignature ));
            
            #line default
            #line hidden
            
            #line 788 "LawT4.tt"
            this.Write("\n      );\n");
            
            #line default
            #line hidden
            
            #line 790 "LawT4.tt"
 CopyLocalOutputsValuesToGlobalValues (""); 
            
            #line default
            #line hidden
            
            #line 791 "LawT4.tt"
 CopyLocalOutputsDerivativesToGlobalDerivatives (""); 
            
            #line default
            #line hidden
            
            #line 792 "LawT4.tt"
            this.Write("    }\n  }\n\n");
            
            #line default
            #line hidden
            
            #line 795 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 796 "LawT4.tt"
            this.Write("//\n// split and pass private\n\npublic:\n\n  void derivativesCorrection(const Law::VariableAccessor& accessor,\n                             const Arcane::ItemGroup& group,\n                             Law::PropertyVector graph_dependencies,\n                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,\n                             Arcane::Integer nb_unknown_resize) const\n");
            
            #line default
            #line hidden
            
            #line 806 "LawT4.tt"
 if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 807 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 810 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 811 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 812 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 813 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 814 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done directly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 817 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 818 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {\n");
            
            #line default
            #line hidden
            
            #line 821 "LawT4.tt"
 ReorderDerivativesAndNullify ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 822 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_composed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_derivative_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 829 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 830 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {\n");
            
            #line default
            #line hidden
            
            #line 833 "LawT4.tt"
  ApplyDerivativesCorrection("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 834 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Resize to root prop \n    const Arcane::Integer size = nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 839 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 840 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 841 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 842 "LawT4.tt"
            this.Write(" \n\n  void derivativesCorrection(const Law::PartialVariableAccessor& accessor,\n                             const Arcane::ItemGroup& group,\n                             Law::PropertyVector graph_dependencies,\n                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,\n                             Arcane::Integer nb_unknown_resize) const\n");
            
            #line default
            #line hidden
            
            #line 849 "LawT4.tt"
 if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 850 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 853 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 854 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 855 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 856 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 857 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done directly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 860 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 861 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {\n");
            
            #line default
            #line hidden
            
            #line 864 "LawT4.tt"
 ReorderDerivativesAndNullify ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 865 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_composed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_derivative_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 872 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 873 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop over items\n      ENUMERATE_ITEM(iitem, group) {\n");
            
            #line default
            #line hidden
            
            #line 876 "LawT4.tt"
  ApplyDerivativesCorrection("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 877 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Resize to root prop \n    const Arcane::Integer size = nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 882 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 883 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 884 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 885 "LawT4.tt"
            this.Write(" \n\n  void derivativesCorrection(const Law::ArrayAccessor& accessor,\n                             const Arcane::Integer& begin,\n                             const Arcane::Integer& end,\n                             Law::PropertyVector graph_dependencies,\n                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,\n                             Arcane::Integer nb_unknown_resize) const\n");
            
            #line default
            #line hidden
            
            #line 893 "LawT4.tt"
 if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 894 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 897 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 898 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 899 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 900 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 901 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done directly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 904 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 905 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop\n      for(Arcane::Integer i = begin; i < end; ++i) {\n");
            
            #line default
            #line hidden
            
            #line 908 "LawT4.tt"
 ReorderDerivativesAndNullify ("[i]"); 
            
            #line default
            #line hidden
            
            #line 909 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_composed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_derivative_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 916 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 917 "LawT4.tt"
            this.Write("      //\n      // Evaluation loop\n      for(Arcane::Integer i = begin; i < end; ++i) {\n");
            
            #line default
            #line hidden
            
            #line 920 "LawT4.tt"
  ApplyDerivativesCorrection("[i]"); 
            
            #line default
            #line hidden
            
            #line 921 "LawT4.tt"
            this.Write("      }\n    }  \n    //\n    // Resize to root prop \n    const Arcane::Integer size = nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 926 "LawT4.tt"
 ResizeGlobalDerivatives (true); 
            
            #line default
            #line hidden
            
            #line 927 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 928 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 929 "LawT4.tt"
            this.Write(" \n\n  void derivativesCorrection(const Law::ScalarAccessor& accessor,\n                             Law::PropertyVector graph_dependencies,\n                             std::map<Law::Property, Law::PropertyVector> in_composed_derivative_ofs,\n                             Arcane::Integer nb_unknown_resize) const\n");
            
            #line default
            #line hidden
            
            #line 935 "LawT4.tt"
 if(containsVectorProperty()) {  
            
            #line default
            #line hidden
            
            #line 936 "LawT4.tt"
            this.Write("  {\n    throw Arcane::FatalErrorException(\"Graph composed derivatives correction not available with vector properties error\");\n  }\n");
            
            #line default
            #line hidden
            
            #line 939 "LawT4.tt"
 } else {  
            
            #line default
            #line hidden
            
            #line 940 "LawT4.tt"
            this.Write("  {\n");
            
            #line default
            #line hidden
            
            #line 941 "LawT4.tt"
 StaticGlobalDependenciesSize (); 
            
            #line default
            #line hidden
            
            #line 942 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 943 "LawT4.tt"
            this.Write("    // Re order derivatives and nullify before correction\n    // Could be done directly in _evaluate method with offset as argument\n    {\n");
            
            #line default
            #line hidden
            
            #line 946 "LawT4.tt"
 ComputeDerivativesReorderOffset (); 
            
            #line default
            #line hidden
            
            #line 947 "LawT4.tt"
            this.Write("      //\n      //\n      {\n");
            
            #line default
            #line hidden
            
            #line 950 "LawT4.tt"
 ReorderDerivativesAndNullify (""); 
            
            #line default
            #line hidden
            
            #line 951 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Derivatives correction\n    Arcane::Integer direct_composed_index = nb_graph_prop - 1;\n    for(auto iter_composed : in_composed_derivative_ofs)\n    {\n");
            
            #line default
            #line hidden
            
            #line 958 "LawT4.tt"
 ComputeDerivativesCorrectionOffset (); 
            
            #line default
            #line hidden
            
            #line 959 "LawT4.tt"
            this.Write("      //\n      // \n      {\n");
            
            #line default
            #line hidden
            
            #line 962 "LawT4.tt"
  ApplyDerivativesCorrection(""); 
            
            #line default
            #line hidden
            
            #line 963 "LawT4.tt"
            this.Write("      }\n    }\n    //\n    // Resize to root prop \n    const Arcane::Integer size = nb_unknown_resize;\n");
            
            #line default
            #line hidden
            
            #line 968 "LawT4.tt"
 ResizeGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 969 "LawT4.tt"
            this.Write("  }\n");
            
            #line default
            #line hidden
            
            #line 970 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 971 "LawT4.tt"
            this.Write(" \n\nprotected:\n\n  template<typename... T>\n  void _evaluate(const Law::EvaluationMode mode, Arcane::Integer static_size, const T&... args) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 978 "LawT4.tt"
 if(Inference == InferenceMode.ONNX && containsVectorProperty()) { 
            
            #line default
            #line hidden
            
            #line 979 "LawT4.tt"
            this.Write("    throw Arcane::FatalErrorException(\"ONNX evaluation available with vector properties error\");\n");
            
            #line default
            #line hidden
            
            #line 980 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 981 "LawT4.tt"
            this.Write("    switch(mode)\n    {\n    case Law::eWithoutDerivative :\n      _evaluateOnlyValues(args...);\n      break;\n    case Law::eWithDerivative :\n      if(isDifferentiable()){\n        if(static_size != 0) {\n          _evaluate(static_size, args...);\n        } else {\n          _evaluate(in().dataSize(), args...);\n        }\n      }\n      else{\n        throw Arcane::FatalErrorException(\"evaluation with derivatives not available error\");\n      }\n      break;\n    default:\n      throw Arcane::FatalErrorException(\"evaluation case default error\");\n    }\n");
            
            #line default
            #line hidden
            
            #line 1001 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1002 "LawT4.tt"
            this.Write("  }\n\nprotected:\n\n  Signature m_signature;\n");
            
            #line default
            #line hidden
            
            #line 1007 "LawT4.tt"
 if(Inference == InferenceMode.ONNX){ 
            
            #line default
            #line hidden
            
            #line 1008 "LawT4.tt"
            this.Write(" \n  Ort::Env m_environment;\n  std::unique_ptr<Ort::Session> m_session;\n  bool m_is_differentiable;\n");
            
            #line default
            #line hidden
            
            #line 1012 "LawT4.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 1013 "LawT4.tt"
            this.Write("  std::function<\n    void(");
            
            #line default
            #line hidden
            
            #line 1014 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Signature ));
            
            #line default
            #line hidden
            
            #line 1014 "LawT4.tt"
            this.Write(")\n  > m_invoker;\n");
            
            #line default
            #line hidden
            
            #line 1016 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1017 "LawT4.tt"
            this.Write("  \n};\n\n/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n");
            
            #line default
            #line hidden
            
            #line 1022 "LawT4.tt"
 if(Debug) { 
            
            #line default
            #line hidden
            
            #line 1023 "LawT4.tt"
            this.Write("struct EpsilonDerivatives\n{\n");
            
            #line default
            #line hidden
            
            #line 1025 "LawT4.tt"
 foreach(var i in Inputs) { 
            
            #line default
            #line hidden
            
            #line 1026 "LawT4.tt"
            this.Write("  Arcane::Real ");
            
            #line default
            #line hidden
            
            #line 1026 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( i.name ));
            
            #line default
            #line hidden
            
            #line 1026 "LawT4.tt"
            this.Write(" = 1.e-6;\n");
            
            #line default
            #line hidden
            
            #line 1027 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1028 "LawT4.tt"
            this.Write("};\n\nclass DebugFunction\n  : public Function\n{\npublic:\n\n  template<typename UserAlgo, typename Method>\n  DebugFunction(const Signature& s,\n                UserAlgo& kernel,\n                Method method,\n                const EpsilonDerivatives& epsilon,\n                Arcane::ITraceMng* trace_mng):\n                Function(s,kernel,method),\n                m_epsilon(epsilon),\n                m_trace_mng(trace_mng)\n                {};\n\nprotected:\n  \n  void evaluate(const Law::VariableAccessor& accessor,\n                const Arcane::ItemGroup& group,\n                const Law::EvaluationMode mode,\n                Arcane::Integer static_size = 0) const\n  {\n    Function::evaluate(accessor, group, mode, static_size);\n");
            
            #line default
            #line hidden
            
            #line 1054 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1056 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor, group);\n");
            
            #line default
            #line hidden
            
            #line 1058 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1059 "LawT4.tt"
            this.Write("  }\n  \n  void evaluate(const Law::PartialVariableAccessor& accessor,\n                const Arcane::ItemGroup& group,\n                const Law::EvaluationMode mode,\n                Arcane::Integer static_size = 0) const\n  {\n    Function::evaluate(accessor, group, mode, static_size);\n");
            
            #line default
            #line hidden
            
            #line 1067 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1069 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor, group);\n");
            
            #line default
            #line hidden
            
            #line 1071 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1072 "LawT4.tt"
            this.Write("  }\n  \n  void evaluate(const Law::ArrayAccessor& accessor,\n                const Arcane::Integer& begin,\n                const Arcane::Integer& end,\n                const Law::EvaluationMode mode,\n                Arcane::Integer static_size = 0) const\n  {\n    Function::evaluate(accessor, begin, end, mode, static_size);\n");
            
            #line default
            #line hidden
            
            #line 1081 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1083 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor,  begin, end);\n");
            
            #line default
            #line hidden
            
            #line 1085 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1086 "LawT4.tt"
            this.Write("  }\n  \n  void evaluate(const Law::ScalarAccessor& accessor,\n                const Law::EvaluationMode mode,\n                Arcane::Integer static_size = 0) const\n  {\n    Function::evaluate(accessor, mode, static_size);\n");
            
            #line default
            #line hidden
            
            #line 1093 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1095 "LawT4.tt"
            this.Write("    if(mode==Law::eWithDerivative) \n      _check_derivatives(accessor);\n");
            
            #line default
            #line hidden
            
            #line 1097 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1098 "LawT4.tt"
            this.Write("  }\n\n");
            
            #line default
            #line hidden
            
            #line 1100 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1102 "LawT4.tt"
            this.Write("private:\n\n  void _check_derivatives(const Law::VariableAccessor& accessor,\n                          const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 1107 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 1108 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1109 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1110 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1111 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1112 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1112 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1112 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law derivatives and finite difference ones\";\n    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, group) {\n");
            
            #line default
            #line hidden
            
            #line 1116 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1117 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1118 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1119 "LawT4.tt"
 PrintDebugValuesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1120 "LawT4.tt"
 PrintDebugDerivativesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1121 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1122 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _check_derivatives(const Law::PartialVariableAccessor& accessor,\n                          const Arcane::ItemGroup& group) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 1128 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 1129 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1130 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1131 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1132 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1133 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1133 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1133 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law derivatives and finite difference ones\";\n    // Evaluation loop over items\n    ENUMERATE_ITEM(iitem, group) {\n");
            
            #line default
            #line hidden
            
            #line 1137 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1138 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1139 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1140 "LawT4.tt"
 PrintDebugValuesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1141 "LawT4.tt"
 PrintDebugDerivativesInfos ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1142 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives ("[iitem]"); 
            
            #line default
            #line hidden
            
            #line 1143 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _check_derivatives(const Law::ArrayAccessor& accessor,\n                          const Arcane::Integer& begin,\n                          const Arcane::Integer& end) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 1150 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 1151 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1152 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1153 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1154 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1155 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1155 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1155 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law derivatives and finite difference ones\";\n    // Evaluation loop\n    for(Arcane::Integer index = begin; index < end; ++index) {\n");
            
            #line default
            #line hidden
            
            #line 1159 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1160 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1161 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1162 "LawT4.tt"
 PrintDebugValuesInfos ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1163 "LawT4.tt"
 PrintDebugDerivativesInfos ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1164 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives ("[index]"); 
            
            #line default
            #line hidden
            
            #line 1165 "LawT4.tt"
            this.Write("    }\n  }\n  \n  void _check_derivatives(const Law::ScalarAccessor& accessor) const\n  {\n");
            
            #line default
            #line hidden
            
            #line 1170 "LawT4.tt"
 AccessGlobalValues (); 
            
            #line default
            #line hidden
            
            #line 1171 "LawT4.tt"
 AccessGlobalDerivatives (); 
            
            #line default
            #line hidden
            
            #line 1172 "LawT4.tt"
 AllocateLocalData (); 
            
            #line default
            #line hidden
            
            #line 1173 "LawT4.tt"
 AllocateLocalDataFiniteDiff (); 
            
            #line default
            #line hidden
            
            #line 1174 "LawT4.tt"
 CreateDerivativesOffsets (); 
            
            #line default
            #line hidden
            
            #line 1175 "LawT4.tt"
            this.Write("    m_trace_mng->info()<<\"");
            
            #line default
            #line hidden
            
            #line 1175 "LawT4.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( Model.name ));
            
            #line default
            #line hidden
            
            #line 1175 "LawT4.tt"
            this.Write("\"<< \" debug evaluation\";\n    m_trace_mng->info()<<\"Check consistency between law derivatives and finite difference ones\";\n    // Evaluation\n    {\n");
            
            #line default
            #line hidden
            
            #line 1179 "LawT4.tt"
 CopyGlobalValuesToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 1180 "LawT4.tt"
 CopyGlobalValuesOutputToLocalValues ("()", true); 
            
            #line default
            #line hidden
            
            #line 1181 "LawT4.tt"
 ComputeDifferenceFiniteDerivatives(); 
            
            #line default
            #line hidden
            
            #line 1182 "LawT4.tt"
 PrintDebugValuesInfos ("()"); 
            
            #line default
            #line hidden
            
            #line 1183 "LawT4.tt"
 PrintDebugDerivativesInfos (""); 
            
            #line default
            #line hidden
            
            #line 1184 "LawT4.tt"
 CopyLocalOutputsDerivativesDiffToGlobalDerivatives (""); 
            
            #line default
            #line hidden
            
            #line 1185 "LawT4.tt"
            this.Write("    }\n  }\n");
            
            #line default
            #line hidden
            
            #line 1187 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1188 "LawT4.tt"
            this.Write("private:\n\n");
            
            #line default
            #line hidden
            
            #line 1190 "LawT4.tt"
 if(Inputs.Count()>0)
   { 
            
            #line default
            #line hidden
            
            #line 1192 "LawT4.tt"
            this.Write("  void _print_value(const Arcane::String value_name, const Arcane::Real& value) const\n  {\n    m_trace_mng->info() << value_name <<\" value   = \"<< value ;\n  }\n\n  void _print_derivatives(const Arcane::String deriv_name, const Arcane::Real& deriv_ref, const Arcane::Real& deriv_test) const\n  {\n    m_trace_mng->info() << deriv_name <<\" ref   = \"<< deriv_ref ;\n    m_trace_mng->info() << deriv_name <<\" test  = \"<< deriv_test ;\n    m_trace_mng->info() << deriv_name <<\" error = \"<< (deriv_ref - deriv_test) / (fabs(deriv_ref) + 1.e-20);\n  }\n");
            
            #line default
            #line hidden
            
            #line 1203 "LawT4.tt"
 } 
            
            #line default
            #line hidden
            
            #line 1204 "LawT4.tt"
            this.Write("\nprivate:\n\n  //! Epsilon values to compute derivatives\n  EpsilonDerivatives m_epsilon;\n  \n  //! Manager de trace\n  Arcane::ITraceMng* m_trace_mng;\n\n};\n\n/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n");
            
            #line default
            #line hidden
            
            #line 1217 "LawT4.tt"
  } 
            
            #line default
            #line hidden
            
            #line 1218 "LawT4.tt"
            this.Write("\n}\n\n#endif\n\n/*---------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------*/\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        protected virtual void Initialize() {
        }
    }
    
    public class LawT4Base {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((this.formatProvider == null)) {
                        throw new global::System.ArgumentNullException("formatProvider");
                    }
                    this.formatProvider = value;
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
